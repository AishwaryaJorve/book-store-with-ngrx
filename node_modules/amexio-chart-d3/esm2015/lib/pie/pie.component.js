/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
export class AmexioD3PieChartComponent {
    constructor() {
        this.data = [];
        this.onLegendClick = new EventEmitter();
        this.onChartClick = new EventEmitter();
        this.drillableEvent = new EventEmitter();
        this.legend = true;
        this.colors = [];
        this.width = "300";
        this.height = "300";
        this.title = "";
        this.level = 0;
        this.labelcolor = "black";
        this.labelflag = false;
        this.drillableFlag = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} node
     * @return {?}
     */
    legendClick(node) {
        this.onLegendClick.emit(node);
    }
    /**
     * @param {?} node
     * @return {?}
     */
    chartClick(node) {
        this.onChartClick.emit(node);
    }
    /**
     * @param {?} ref
     * @return {?}
     */
    fordrillableClick(ref) {
        this.drillableEvent.emit(ref);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    fetchData(data) {
        this.drillData = data;
    }
    /**
     * @return {?}
     */
    drawChart() {
        this.donutref.drillableFlag = true;
        this.donutref.drawChart();
    }
}
AmexioD3PieChartComponent.decorators = [
    { type: Component, args: [{
                selector: 'amexio-d3-chart-pie',
                template: `<div   *ngIf="drillableFlag">
<amexio-d3-chart-donut #id (onLegendClick)="legendClick($event)" 
                       (onChartClick)="chartClick($event)" 
                       (drillableEvent)=" fordrillableClick($event)"
                        [height]="height"
                        [width]="width"
                        [title]="title"
                        [data] = "data"
                        [pie]  = "true"
                        [color]="colors"
                        [http-url]="httpurl"
                        [http-method]="httpmethod"
                        [data-reader]="datareader"
                        [label]="labelflag"
                        [label-color]="labelcolor"
                        [level]="level"
                        [target]="target"
                        [drillable-data]="drillabledatakey"
                        [drillData]="drillData">
</amexio-d3-chart-donut>
</div>
`
            },] },
];
AmexioD3PieChartComponent.propDecorators = {
    data: [{ type: Input, args: ['data',] }],
    onLegendClick: [{ type: Output }],
    onChartClick: [{ type: Output }],
    drillableEvent: [{ type: Output }],
    donutref: [{ type: ViewChild, args: ['id',] }],
    legend: [{ type: Input }],
    colors: [{ type: Input, args: ['color',] }],
    width: [{ type: Input, args: ['width',] }],
    height: [{ type: Input, args: ['height',] }],
    title: [{ type: Input }],
    httpurl: [{ type: Input, args: ['http-url',] }],
    httpmethod: [{ type: Input, args: ['http-method',] }],
    datareader: [{ type: Input, args: ['data-reader',] }],
    level: [{ type: Input, args: ['level',] }],
    target: [{ type: Input, args: ['target',] }],
    drillabledatakey: [{ type: Input, args: ['drillable-data',] }],
    labelcolor: [{ type: Input, args: ['label-color',] }],
    labelflag: [{ type: Input, args: ['label',] }]
};
if (false) {
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.data;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.onLegendClick;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.onChartClick;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillableEvent;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.donutref;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.legend;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.colors;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.width;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.height;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.title;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.httpurl;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.httpmethod;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.datareader;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.level;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.target;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillabledatakey;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.labelcolor;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.labelflag;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillableFlag;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FtZXhpby1jaGFydC1kMy8iLCJzb3VyY2VzIjpbImxpYi9waWUvcGllLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQWMsTUFBTSxlQUFlLENBQUM7QUE2QnRHLE1BQU07SUF6Qk47UUEyQmlCLFNBQUksR0FBUSxFQUFFLENBQUM7UUFFcEIsa0JBQWEsR0FBUSxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRTdDLGlCQUFZLEdBQVEsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUU1QyxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFJckMsV0FBTSxHQUFZLElBQUksQ0FBQztRQUVoQixXQUFNLEdBQVEsRUFBRSxDQUFDO1FBRWpCLFVBQUssR0FBUSxLQUFLLENBQUM7UUFFbEIsV0FBTSxHQUFRLEtBQUssQ0FBQztRQUU1QixVQUFLLEdBQVEsRUFBRSxDQUFDO1FBUVQsVUFBSyxHQUFHLENBQUMsQ0FBQztRQU1KLGVBQVUsR0FBVyxPQUFPLENBQUM7UUFFbkMsY0FBUyxHQUFZLEtBQUssQ0FBQztRQUUzQyxrQkFBYSxHQUFZLElBQUksQ0FBQztJQWdDaEMsQ0FBQzs7OztJQTNCQyxRQUFRO0lBRVIsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsSUFBUztRQUNuQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUVELFVBQVUsQ0FBQyxJQUFTO1FBQ2xCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7O0lBR0QsaUJBQWlCLENBQUMsR0FBUTtRQUN4QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUVELFNBQVMsQ0FBQyxJQUFTO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFRCxTQUFTO1FBRVAsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLENBQUM7SUFFNUIsQ0FBQzs7O1lBOUZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXFCWDthQUNBOzs7bUJBR0UsS0FBSyxTQUFDLE1BQU07NEJBRVosTUFBTTsyQkFFTixNQUFNOzZCQUVOLE1BQU07dUJBRU4sU0FBUyxTQUFDLElBQUk7cUJBRWQsS0FBSztxQkFFTCxLQUFLLFNBQUMsT0FBTztvQkFFYixLQUFLLFNBQUMsT0FBTztxQkFFYixLQUFLLFNBQUMsUUFBUTtvQkFFZCxLQUFLO3NCQUVMLEtBQUssU0FBQyxVQUFVO3lCQUVoQixLQUFLLFNBQUMsYUFBYTt5QkFFbkIsS0FBSyxTQUFDLGFBQWE7b0JBRW5CLEtBQUssU0FBQyxPQUFPO3FCQUViLEtBQUssU0FBQyxRQUFROytCQUVkLEtBQUssU0FBQyxnQkFBZ0I7eUJBRXRCLEtBQUssU0FBQyxhQUFhO3dCQUVuQixLQUFLLFNBQUMsT0FBTzs7OztJQWxDZCx5Q0FBOEI7O0lBRTlCLGtEQUF1RDs7SUFFdkQsaURBQXNEOztJQUV0RCxtREFBOEM7O0lBRTlDLDZDQUErQjs7SUFFL0IsMkNBQWdDOztJQUVoQywyQ0FBaUM7O0lBRWpDLDBDQUFtQzs7SUFFbkMsMkNBQXFDOztJQUVyQywwQ0FBeUI7O0lBRXpCLDRDQUFnQzs7SUFFaEMsK0NBQXNDOztJQUV0QywrQ0FBeUM7O0lBRXpDLDBDQUEwQjs7SUFFMUIsMkNBQWdDOztJQUVoQyxxREFBOEM7O0lBRTlDLCtDQUFtRDs7SUFFbkQsOENBQTJDOztJQUUzQyxrREFBOEI7O0lBRTlCLDhDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuaW1wb3J0IHsgQW1leGlvRDNCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tIFwiLi4vYmFzZS9iYXNlLmNvbXBvbmVudFwiO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1leGlvLWQzLWNoYXJ0LXBpZScsXG4gIHRlbXBsYXRlOiBgPGRpdiAgICpuZ0lmPVwiZHJpbGxhYmxlRmxhZ1wiPlxuPGFtZXhpby1kMy1jaGFydC1kb251dCAjaWQgKG9uTGVnZW5kQ2xpY2spPVwibGVnZW5kQ2xpY2soJGV2ZW50KVwiIFxuICAgICAgICAgICAgICAgICAgICAgICAob25DaGFydENsaWNrKT1cImNoYXJ0Q2xpY2soJGV2ZW50KVwiIFxuICAgICAgICAgICAgICAgICAgICAgICAoZHJpbGxhYmxlRXZlbnQpPVwiIGZvcmRyaWxsYWJsZUNsaWNrKCRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2hlaWdodF09XCJoZWlnaHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3dpZHRoXT1cIndpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFt0aXRsZV09XCJ0aXRsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZGF0YV0gPSBcImRhdGFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3BpZV0gID0gXCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtjb2xvcl09XCJjb2xvcnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2h0dHAtdXJsXT1cImh0dHB1cmxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2h0dHAtbWV0aG9kXT1cImh0dHBtZXRob2RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RhdGEtcmVhZGVyXT1cImRhdGFyZWFkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2xhYmVsXT1cImxhYmVsZmxhZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbGFiZWwtY29sb3JdPVwibGFiZWxjb2xvclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbGV2ZWxdPVwibGV2ZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3RhcmdldF09XCJ0YXJnZXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RyaWxsYWJsZS1kYXRhXT1cImRyaWxsYWJsZWRhdGFrZXlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RyaWxsRGF0YV09XCJkcmlsbERhdGFcIj5cbjwvYW1leGlvLWQzLWNoYXJ0LWRvbnV0PlxuPC9kaXY+XG5gXG59KVxuZXhwb3J0IGNsYXNzIEFtZXhpb0QzUGllQ2hhcnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgnZGF0YScpIGRhdGE6IGFueSA9IFtdO1xuXG4gIEBPdXRwdXQoKSBvbkxlZ2VuZENsaWNrOiBhbnkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBAT3V0cHV0KCkgb25DaGFydENsaWNrOiBhbnkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBAT3V0cHV0KCkgZHJpbGxhYmxlRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQFZpZXdDaGlsZCgnaWQnKSBkb251dHJlZjogYW55O1xuXG4gIEBJbnB1dCgpIGxlZ2VuZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgQElucHV0KCdjb2xvcicpIGNvbG9yczogYW55ID0gW107XG5cbiAgQElucHV0KCd3aWR0aCcpIHdpZHRoOiBhbnkgPSBcIjMwMFwiO1xuXG4gIEBJbnB1dCgnaGVpZ2h0JykgaGVpZ2h0OiBhbnkgPSBcIjMwMFwiO1xuXG4gIEBJbnB1dCgpIHRpdGxlOiBhbnkgPSBcIlwiO1xuXG4gIEBJbnB1dCgnaHR0cC11cmwnKSBodHRwdXJsOiBhbnk7XG5cbiAgQElucHV0KCdodHRwLW1ldGhvZCcpIGh0dHBtZXRob2Q6IGFueTtcblxuICBASW5wdXQoJ2RhdGEtcmVhZGVyJykgZGF0YXJlYWRlcjogc3RyaW5nO1xuXG4gIEBJbnB1dCgnbGV2ZWwnKSBsZXZlbCA9IDA7XG5cbiAgQElucHV0KCd0YXJnZXQnKSB0YXJnZXQ6IG51bWJlcjtcblxuICBASW5wdXQoJ2RyaWxsYWJsZS1kYXRhJykgZHJpbGxhYmxlZGF0YWtleTogYW55XG5cbiAgQElucHV0KCdsYWJlbC1jb2xvcicpIGxhYmVsY29sb3I6IHN0cmluZyA9IFwiYmxhY2tcIjtcblxuICBASW5wdXQoJ2xhYmVsJykgbGFiZWxmbGFnOiBib29sZWFuID0gZmFsc2U7XG5cbiAgZHJpbGxhYmxlRmxhZzogYm9vbGVhbiA9IHRydWU7XG5cbiAgZHJpbGxEYXRhOiBhbnk7XG5cblxuICBuZ09uSW5pdCgpIHtcblxuICB9XG5cbiAgbGVnZW5kQ2xpY2sobm9kZTogYW55KSB7XG4gICAgdGhpcy5vbkxlZ2VuZENsaWNrLmVtaXQobm9kZSk7XG4gIH1cblxuICBjaGFydENsaWNrKG5vZGU6IGFueSkge1xuICAgIHRoaXMub25DaGFydENsaWNrLmVtaXQobm9kZSk7XG4gIH1cblxuXG4gIGZvcmRyaWxsYWJsZUNsaWNrKHJlZjogYW55KSB7XG4gICAgdGhpcy5kcmlsbGFibGVFdmVudC5lbWl0KHJlZik7XG4gIH1cblxuICBmZXRjaERhdGEoZGF0YTogYW55KSB7XG4gICAgdGhpcy5kcmlsbERhdGEgPSBkYXRhO1xuICB9XG5cbiAgZHJhd0NoYXJ0KCkge1xuXG4gICAgdGhpcy5kb251dHJlZi5kcmlsbGFibGVGbGFnID0gdHJ1ZTtcbiAgICB0aGlzLmRvbnV0cmVmLmRyYXdDaGFydCgpO1xuXG4gIH1cbn1cbiJdfQ==