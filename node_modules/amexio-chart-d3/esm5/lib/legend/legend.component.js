/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from "@angular/core";
var AmexioD3Legend = /** @class */ (function () {
    function AmexioD3Legend() {
        this.horizontal = false;
        this.temparr = [];
        this.onClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    AmexioD3Legend.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.data = this.data;
        this.temparr = this.data;
    };
    /**
     * @return {?}
     */
    AmexioD3Legend.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        // debugger;
        // window.location.reload();
        this.data = this.data;
        this.temparr = this.data;
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AmexioD3Legend.prototype.onLegendClick = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        this.onClick.emit(node);
    };
    AmexioD3Legend.decorators = [
        { type: Component, args: [{
                    selector: 'amexio-d3-legend',
                    template: "<div style =\" width: 100% ; padding-left: 20px; padding-top: 8px; \">\n<table *ngIf=\"!horizontal\" style=\"height: 100%;\">\n    <tr *ngFor = \"let node of data\" style=\"cursor: pointer;\" (click)=\"onLegendClick(node)\">\n        <td style=\"height: 10px; width: 23px; padding-left: 2px;\"\n            [ngStyle]=\"{'background-color': node.color}\"></td>\n        <td>{{node.label}}</td>\n    </tr>\n</table>\n</div>\n\n<table *ngIf=\"horizontal\" style=\"height: 100%;\">\n    <tr>\n        <td *ngFor = \"let node of data\" \n                    (click)=\"onLegendClick(node)\" \n                    style=\"cursor: pointer;\">\n            \n            <div style=\" display: inline-block; display: inline-block; padding: 2px;\">\n                    <div style=\" width: 10px; display: inline-block; padding: 2px; \" \n                    [ngStyle]=\"{'background-color': node.color}\"></div>\n                {{node.label}}\n            </div>\n        </td>\n        \n    </tr>\n</table>\n\n<br>\n "
                },] },
    ];
    AmexioD3Legend.ctorParameters = function () { return []; };
    AmexioD3Legend.propDecorators = {
        data: [{ type: Input, args: ['data',] }],
        horizontal: [{ type: Input, args: ['horizontal',] }],
        onClick: [{ type: Output }]
    };
    return AmexioD3Legend;
}());
export { AmexioD3Legend };
if (false) {
    /** @type {?} */
    AmexioD3Legend.prototype.data;
    /** @type {?} */
    AmexioD3Legend.prototype.horizontal;
    /** @type {?} */
    AmexioD3Legend.prototype.temparr;
    /** @type {?} */
    AmexioD3Legend.prototype.onClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnZW5kLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FtZXhpby1jaGFydC1kMy8iLCJzb3VyY2VzIjpbImxpYi9sZWdlbmQvbGVnZW5kLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFFMUY7SUF3Q0k7UUFKcUIsZUFBVSxHQUFhLEtBQUssQ0FBQztRQUNsRCxZQUFPLEdBQVUsRUFBRSxDQUFDO1FBQ1YsWUFBTyxHQUFTLElBQUksWUFBWSxFQUFPLENBQUM7SUFJbEQsQ0FBQzs7OztJQUVELGlDQUFROzs7SUFBUjtRQUVJLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDN0IsQ0FBQzs7OztJQUNELG9DQUFXOzs7SUFBWDtRQUNJLFlBQVk7UUFDWiw0QkFBNEI7UUFDNUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM3QixDQUFDOzs7OztJQUVELHNDQUFhOzs7O0lBQWIsVUFBYyxJQUFRO1FBQ2xCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7O2dCQTFESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFHLGtCQUFrQjtvQkFDN0IsUUFBUSxFQUFFLHEvQkEyQlo7aUJBQ0Q7Ozs7dUJBSUksS0FBSyxTQUFDLE1BQU07NkJBRVosS0FBSyxTQUFDLFlBQVk7MEJBRWxCLE1BQU07O0lBcUJYLHFCQUFDO0NBQUEsQUEzREQsSUEyREM7U0E1QlksY0FBYzs7O0lBR3ZCLDhCQUEwQjs7SUFFMUIsb0NBQWtEOztJQUNsRCxpQ0FBb0I7O0lBQ3BCLGlDQUFrRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yIDogJ2FtZXhpby1kMy1sZWdlbmQnLFxuICAgIHRlbXBsYXRlOiBgPGRpdiBzdHlsZSA9XCIgd2lkdGg6IDEwMCUgOyBwYWRkaW5nLWxlZnQ6IDIwcHg7IHBhZGRpbmctdG9wOiA4cHg7IFwiPlxuPHRhYmxlICpuZ0lmPVwiIWhvcml6b250YWxcIiBzdHlsZT1cImhlaWdodDogMTAwJTtcIj5cbiAgICA8dHIgKm5nRm9yID0gXCJsZXQgbm9kZSBvZiBkYXRhXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXI7XCIgKGNsaWNrKT1cIm9uTGVnZW5kQ2xpY2sobm9kZSlcIj5cbiAgICAgICAgPHRkIHN0eWxlPVwiaGVpZ2h0OiAxMHB4OyB3aWR0aDogMjNweDsgcGFkZGluZy1sZWZ0OiAycHg7XCJcbiAgICAgICAgICAgIFtuZ1N0eWxlXT1cInsnYmFja2dyb3VuZC1jb2xvcic6IG5vZGUuY29sb3J9XCI+PC90ZD5cbiAgICAgICAgPHRkPnt7bm9kZS5sYWJlbH19PC90ZD5cbiAgICA8L3RyPlxuPC90YWJsZT5cbjwvZGl2PlxuXG48dGFibGUgKm5nSWY9XCJob3Jpem9udGFsXCIgc3R5bGU9XCJoZWlnaHQ6IDEwMCU7XCI+XG4gICAgPHRyPlxuICAgICAgICA8dGQgKm5nRm9yID0gXCJsZXQgbm9kZSBvZiBkYXRhXCIgXG4gICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJvbkxlZ2VuZENsaWNrKG5vZGUpXCIgXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyO1wiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiIGRpc3BsYXk6IGlubGluZS1ibG9jazsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBwYWRkaW5nOiAycHg7XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCIgd2lkdGg6IDEwcHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgcGFkZGluZzogMnB4OyBcIiBcbiAgICAgICAgICAgICAgICAgICAgW25nU3R5bGVdPVwieydiYWNrZ3JvdW5kLWNvbG9yJzogbm9kZS5jb2xvcn1cIj48L2Rpdj5cbiAgICAgICAgICAgICAgICB7e25vZGUubGFiZWx9fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIFxuICAgIDwvdHI+XG48L3RhYmxlPlxuXG48YnI+XG4gYFxufSlcbmV4cG9ydCBjbGFzcyBBbWV4aW9EM0xlZ2VuZCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0XG57XG5cbiAgICBASW5wdXQoJ2RhdGEnKSBkYXRhIDogYW55O1xuXG4gICAgQElucHV0KCdob3Jpem9udGFsJykgaG9yaXpvbnRhbCA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICB0ZW1wYXJyOiBhbnlbXSA9IFtdO1xuICAgIEBPdXRwdXQoKSBvbkNsaWNrIDogYW55ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgXG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG5cbiAgICAgICAgdGhpcy5kYXRhID0gdGhpcy5kYXRhO1xuICAgICAgICB0aGlzLnRlbXBhcnIgPSB0aGlzLmRhdGE7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKCkge1xuICAgICAgICAvLyBkZWJ1Z2dlcjtcbiAgICAgICAgLy8gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLmRhdGE7XG4gICAgICAgIHRoaXMudGVtcGFyciA9IHRoaXMuZGF0YTtcbiAgICB9XG5cbiAgICBvbkxlZ2VuZENsaWNrKG5vZGU6YW55KXtcbiAgICAgICAgdGhpcy5vbkNsaWNrLmVtaXQobm9kZSk7XG4gICAgfVxufSJdfQ==