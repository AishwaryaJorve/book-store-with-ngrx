/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
var AmexioD3PieChartComponent = /** @class */ (function () {
    function AmexioD3PieChartComponent() {
        this.data = [];
        this.onLegendClick = new EventEmitter();
        this.onChartClick = new EventEmitter();
        this.drillableEvent = new EventEmitter();
        this.legend = true;
        this.colors = [];
        this.width = "300";
        this.height = "300";
        this.title = "";
        this.level = 0;
        this.labelcolor = "black";
        this.labelflag = false;
        this.drillableFlag = true;
    }
    /**
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.legendClick = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        this.onLegendClick.emit(node);
    };
    /**
     * @param {?} node
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.chartClick = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        this.onChartClick.emit(node);
    };
    /**
     * @param {?} ref
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.fordrillableClick = /**
     * @param {?} ref
     * @return {?}
     */
    function (ref) {
        this.drillableEvent.emit(ref);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.fetchData = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.drillData = data;
    };
    /**
     * @return {?}
     */
    AmexioD3PieChartComponent.prototype.drawChart = /**
     * @return {?}
     */
    function () {
        this.donutref.drillableFlag = true;
        this.donutref.drawChart();
    };
    AmexioD3PieChartComponent.decorators = [
        { type: Component, args: [{
                    selector: 'amexio-d3-chart-pie',
                    template: "<div   *ngIf=\"drillableFlag\">\n<amexio-d3-chart-donut #id (onLegendClick)=\"legendClick($event)\" \n                       (onChartClick)=\"chartClick($event)\" \n                       (drillableEvent)=\" fordrillableClick($event)\"\n                        [height]=\"height\"\n                        [width]=\"width\"\n                        [title]=\"title\"\n                        [data] = \"data\"\n                        [pie]  = \"true\"\n                        [color]=\"colors\"\n                        [http-url]=\"httpurl\"\n                        [http-method]=\"httpmethod\"\n                        [data-reader]=\"datareader\"\n                        [label]=\"labelflag\"\n                        [label-color]=\"labelcolor\"\n                        [level]=\"level\"\n                        [target]=\"target\"\n                        [drillable-data]=\"drillabledatakey\"\n                        [drillData]=\"drillData\">\n</amexio-d3-chart-donut>\n</div>\n"
                },] },
    ];
    AmexioD3PieChartComponent.propDecorators = {
        data: [{ type: Input, args: ['data',] }],
        onLegendClick: [{ type: Output }],
        onChartClick: [{ type: Output }],
        drillableEvent: [{ type: Output }],
        donutref: [{ type: ViewChild, args: ['id',] }],
        legend: [{ type: Input }],
        colors: [{ type: Input, args: ['color',] }],
        width: [{ type: Input, args: ['width',] }],
        height: [{ type: Input, args: ['height',] }],
        title: [{ type: Input }],
        httpurl: [{ type: Input, args: ['http-url',] }],
        httpmethod: [{ type: Input, args: ['http-method',] }],
        datareader: [{ type: Input, args: ['data-reader',] }],
        level: [{ type: Input, args: ['level',] }],
        target: [{ type: Input, args: ['target',] }],
        drillabledatakey: [{ type: Input, args: ['drillable-data',] }],
        labelcolor: [{ type: Input, args: ['label-color',] }],
        labelflag: [{ type: Input, args: ['label',] }]
    };
    return AmexioD3PieChartComponent;
}());
export { AmexioD3PieChartComponent };
if (false) {
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.data;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.onLegendClick;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.onChartClick;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillableEvent;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.donutref;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.legend;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.colors;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.width;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.height;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.title;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.httpurl;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.httpmethod;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.datareader;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.level;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.target;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillabledatakey;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.labelcolor;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.labelflag;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillableFlag;
    /** @type {?} */
    AmexioD3PieChartComponent.prototype.drillData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FtZXhpby1jaGFydC1kMy8iLCJzb3VyY2VzIjpbImxpYi9waWUvcGllLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQWMsTUFBTSxlQUFlLENBQUM7QUFJdEc7SUFBQTtRQTJCaUIsU0FBSSxHQUFRLEVBQUUsQ0FBQztRQUVwQixrQkFBYSxHQUFRLElBQUksWUFBWSxFQUFPLENBQUM7UUFFN0MsaUJBQVksR0FBUSxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRTVDLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUlyQyxXQUFNLEdBQVksSUFBSSxDQUFDO1FBRWhCLFdBQU0sR0FBUSxFQUFFLENBQUM7UUFFakIsVUFBSyxHQUFRLEtBQUssQ0FBQztRQUVsQixXQUFNLEdBQVEsS0FBSyxDQUFDO1FBRTVCLFVBQUssR0FBUSxFQUFFLENBQUM7UUFRVCxVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBTUosZUFBVSxHQUFXLE9BQU8sQ0FBQztRQUVuQyxjQUFTLEdBQVksS0FBSyxDQUFDO1FBRTNDLGtCQUFhLEdBQVksSUFBSSxDQUFDO0lBZ0NoQyxDQUFDOzs7O0lBM0JDLDRDQUFROzs7SUFBUjtJQUVBLENBQUM7Ozs7O0lBRUQsK0NBQVc7Ozs7SUFBWCxVQUFZLElBQVM7UUFDbkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCw4Q0FBVTs7OztJQUFWLFVBQVcsSUFBUztRQUNsQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUdELHFEQUFpQjs7OztJQUFqQixVQUFrQixHQUFRO1FBQ3hCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBRUQsNkNBQVM7Ozs7SUFBVCxVQUFVLElBQVM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVELDZDQUFTOzs7SUFBVDtRQUVFLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztRQUNuQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBRTVCLENBQUM7O2dCQTlGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLGsrQkFxQlg7aUJBQ0E7Ozt1QkFHRSxLQUFLLFNBQUMsTUFBTTtnQ0FFWixNQUFNOytCQUVOLE1BQU07aUNBRU4sTUFBTTsyQkFFTixTQUFTLFNBQUMsSUFBSTt5QkFFZCxLQUFLO3lCQUVMLEtBQUssU0FBQyxPQUFPO3dCQUViLEtBQUssU0FBQyxPQUFPO3lCQUViLEtBQUssU0FBQyxRQUFRO3dCQUVkLEtBQUs7MEJBRUwsS0FBSyxTQUFDLFVBQVU7NkJBRWhCLEtBQUssU0FBQyxhQUFhOzZCQUVuQixLQUFLLFNBQUMsYUFBYTt3QkFFbkIsS0FBSyxTQUFDLE9BQU87eUJBRWIsS0FBSyxTQUFDLFFBQVE7bUNBRWQsS0FBSyxTQUFDLGdCQUFnQjs2QkFFdEIsS0FBSyxTQUFDLGFBQWE7NEJBRW5CLEtBQUssU0FBQyxPQUFPOztJQWtDaEIsZ0NBQUM7Q0FBQSxBQS9GRCxJQStGQztTQXRFWSx5QkFBeUI7OztJQUVwQyx5Q0FBOEI7O0lBRTlCLGtEQUF1RDs7SUFFdkQsaURBQXNEOztJQUV0RCxtREFBOEM7O0lBRTlDLDZDQUErQjs7SUFFL0IsMkNBQWdDOztJQUVoQywyQ0FBaUM7O0lBRWpDLDBDQUFtQzs7SUFFbkMsMkNBQXFDOztJQUVyQywwQ0FBeUI7O0lBRXpCLDRDQUFnQzs7SUFFaEMsK0NBQXNDOztJQUV0QywrQ0FBeUM7O0lBRXpDLDBDQUEwQjs7SUFFMUIsMkNBQWdDOztJQUVoQyxxREFBOEM7O0lBRTlDLCtDQUFtRDs7SUFFbkQsOENBQTJDOztJQUUzQyxrREFBOEI7O0lBRTlCLDhDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuaW1wb3J0IHsgQW1leGlvRDNCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tIFwiLi4vYmFzZS9iYXNlLmNvbXBvbmVudFwiO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1leGlvLWQzLWNoYXJ0LXBpZScsXG4gIHRlbXBsYXRlOiBgPGRpdiAgICpuZ0lmPVwiZHJpbGxhYmxlRmxhZ1wiPlxuPGFtZXhpby1kMy1jaGFydC1kb251dCAjaWQgKG9uTGVnZW5kQ2xpY2spPVwibGVnZW5kQ2xpY2soJGV2ZW50KVwiIFxuICAgICAgICAgICAgICAgICAgICAgICAob25DaGFydENsaWNrKT1cImNoYXJ0Q2xpY2soJGV2ZW50KVwiIFxuICAgICAgICAgICAgICAgICAgICAgICAoZHJpbGxhYmxlRXZlbnQpPVwiIGZvcmRyaWxsYWJsZUNsaWNrKCRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2hlaWdodF09XCJoZWlnaHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3dpZHRoXT1cIndpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFt0aXRsZV09XCJ0aXRsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZGF0YV0gPSBcImRhdGFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3BpZV0gID0gXCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtjb2xvcl09XCJjb2xvcnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2h0dHAtdXJsXT1cImh0dHB1cmxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2h0dHAtbWV0aG9kXT1cImh0dHBtZXRob2RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RhdGEtcmVhZGVyXT1cImRhdGFyZWFkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2xhYmVsXT1cImxhYmVsZmxhZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbGFiZWwtY29sb3JdPVwibGFiZWxjb2xvclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbGV2ZWxdPVwibGV2ZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3RhcmdldF09XCJ0YXJnZXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RyaWxsYWJsZS1kYXRhXT1cImRyaWxsYWJsZWRhdGFrZXlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2RyaWxsRGF0YV09XCJkcmlsbERhdGFcIj5cbjwvYW1leGlvLWQzLWNoYXJ0LWRvbnV0PlxuPC9kaXY+XG5gXG59KVxuZXhwb3J0IGNsYXNzIEFtZXhpb0QzUGllQ2hhcnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgnZGF0YScpIGRhdGE6IGFueSA9IFtdO1xuXG4gIEBPdXRwdXQoKSBvbkxlZ2VuZENsaWNrOiBhbnkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBAT3V0cHV0KCkgb25DaGFydENsaWNrOiBhbnkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBAT3V0cHV0KCkgZHJpbGxhYmxlRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQFZpZXdDaGlsZCgnaWQnKSBkb251dHJlZjogYW55O1xuXG4gIEBJbnB1dCgpIGxlZ2VuZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgQElucHV0KCdjb2xvcicpIGNvbG9yczogYW55ID0gW107XG5cbiAgQElucHV0KCd3aWR0aCcpIHdpZHRoOiBhbnkgPSBcIjMwMFwiO1xuXG4gIEBJbnB1dCgnaGVpZ2h0JykgaGVpZ2h0OiBhbnkgPSBcIjMwMFwiO1xuXG4gIEBJbnB1dCgpIHRpdGxlOiBhbnkgPSBcIlwiO1xuXG4gIEBJbnB1dCgnaHR0cC11cmwnKSBodHRwdXJsOiBhbnk7XG5cbiAgQElucHV0KCdodHRwLW1ldGhvZCcpIGh0dHBtZXRob2Q6IGFueTtcblxuICBASW5wdXQoJ2RhdGEtcmVhZGVyJykgZGF0YXJlYWRlcjogc3RyaW5nO1xuXG4gIEBJbnB1dCgnbGV2ZWwnKSBsZXZlbCA9IDA7XG5cbiAgQElucHV0KCd0YXJnZXQnKSB0YXJnZXQ6IG51bWJlcjtcblxuICBASW5wdXQoJ2RyaWxsYWJsZS1kYXRhJykgZHJpbGxhYmxlZGF0YWtleTogYW55XG5cbiAgQElucHV0KCdsYWJlbC1jb2xvcicpIGxhYmVsY29sb3I6IHN0cmluZyA9IFwiYmxhY2tcIjtcblxuICBASW5wdXQoJ2xhYmVsJykgbGFiZWxmbGFnOiBib29sZWFuID0gZmFsc2U7XG5cbiAgZHJpbGxhYmxlRmxhZzogYm9vbGVhbiA9IHRydWU7XG5cbiAgZHJpbGxEYXRhOiBhbnk7XG5cblxuICBuZ09uSW5pdCgpIHtcblxuICB9XG5cbiAgbGVnZW5kQ2xpY2sobm9kZTogYW55KSB7XG4gICAgdGhpcy5vbkxlZ2VuZENsaWNrLmVtaXQobm9kZSk7XG4gIH1cblxuICBjaGFydENsaWNrKG5vZGU6IGFueSkge1xuICAgIHRoaXMub25DaGFydENsaWNrLmVtaXQobm9kZSk7XG4gIH1cblxuXG4gIGZvcmRyaWxsYWJsZUNsaWNrKHJlZjogYW55KSB7XG4gICAgdGhpcy5kcmlsbGFibGVFdmVudC5lbWl0KHJlZik7XG4gIH1cblxuICBmZXRjaERhdGEoZGF0YTogYW55KSB7XG4gICAgdGhpcy5kcmlsbERhdGEgPSBkYXRhO1xuICB9XG5cbiAgZHJhd0NoYXJ0KCkge1xuXG4gICAgdGhpcy5kb251dHJlZi5kcmlsbGFibGVGbGFnID0gdHJ1ZTtcbiAgICB0aGlzLmRvbnV0cmVmLmRyYXdDaGFydCgpO1xuXG4gIH1cbn1cbiJdfQ==