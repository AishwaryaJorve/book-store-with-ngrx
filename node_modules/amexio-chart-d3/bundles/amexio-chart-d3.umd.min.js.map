{"version":3,"sources":["null","ng://amexio-chart-d3/lib/base/base.component.ts","ng://amexio-chart-d3/lib/services/comman.data.service.ts","ng://amexio-chart-d3/lib/services/device.query.service.ts","ng://amexio-chart-d3/lib/dounut/dounut.component.ts","ng://amexio-chart-d3/lib/pie/pie.component.ts","ng://amexio-chart-d3/lib/legend/legend.component.ts","ng://amexio-chart-d3/lib/bar/bar.component.ts","ng://amexio-chart-d3/lib/line/baseline.component.ts","ng://amexio-chart-d3/lib/line/line.component.ts","ng://amexio-chart-d3/lib/barstack/barstack.component.ts","ng://amexio-chart-d3/lib/groupbar/groupbar.component.ts","ng://amexio-chart-d3/lib/combochart/combochart.component.ts","ng://amexio-chart-d3/lib/histogram/histogram.component.ts","ng://amexio-chart-d3/lib/scatterchart/scatterchart.component.ts","ng://amexio-chart-d3/lib/multiarea/multiarea.component.ts","ng://amexio-chart-d3/lib/candlestick/candlestick.component.ts","ng://amexio-chart-d3/lib/bubble/bubble/bubble.component.ts","ng://amexio-chart-d3/lib/timeline/timeline.component.ts","ng://amexio-chart-d3/lib/base/view.component.ts","ng://amexio-chart-d3/lib/drillable/drillable/drillable.component.ts","ng://amexio-chart-d3/lib/amexio-chart-d3-components.ts","ng://amexio-chart-d3/lib/amexio-chart-d3.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","AmexioD3BaseChartComponent","charttype","onLegendClick","EventEmitter","onChartClick","onLineClick","drillableEvent","data","legend","height","width","title","labelcolor","labelflag","level","drillabledatakey","hScale","vScale","resizeflag","drillableFlag","possible","colorIndex","colors","predefinedcolors","componentId","generateId","initializeData","_this","forEach","element","color","getColor","getMultipleDrillbleKeyData","drillablekeys","nodeObject","index","_a","tslib_1.__values","entries","_b","_c","key","id","charAt","Math","floor","random","Date","getTime","object","legendClick","node","emit","chartClick","comboLineClick","fordrillableClick","ref","event","toolTip","d3","select","append","attr","style","toolTipContent","tooltipdata","tooltiphtml","toolTipWithLegendandAxis","xaxis","yaxis","toolTipForBar","tooltipData","Output","Input","args","CommanDataService","http","fetchUrlData","serviceUrl","methodType","headers","HttpHeaders","post","get","postfetchData","requestJson","Injectable","providedIn","HttpClient","DeviceQueryService","platformId","rules","print","screen","phone","tablet","desktop","portrait","landscape","retina","Check","mq","isPlatformBrowser","window","matchMedia","matches","IsTablet","IsDesktop","IsPortrait","IsLandscape","IsRetina","browserWindow","IsPhone","OnPhone","callBack","mql","mqlMethod","OnTablet","OnDesktop","OnPortrait","OnLandscape","addListener","mql1","Inject","PLATFORM_ID","AmexioD3DounutChartComponent","myservice","cdf","device","_super","pie","svgwidth","svgheight","desktoplegend","mobilelegend","keyArray","transformeddata","legendArray","tslib_1.__extends","ngOnInit","resp_1","httpmethod","httpurl","subscribe","response","setTimeout","getResponseData","drawChart","transformData","plotD3Chart","fetchData","drillData","resp","httpResponse","responsedata","datareader","dr","split","dr_1","dr_1_1","formLegendData","outerRadius","innerRadius","tooltip","arc","d3.arc","d3.pie","keys","svg","d3.select","selectAll","enter","on","html","formTooltipData","d3.event","pageY","pageX","DonutChartClick","transition","duration","centroid","text","legendobject","onDonutLegendClick","legendevent","obj","label","DummyObject_1","individualvalue","keyindex","resize","Component","selector","template","styles","ChangeDetectorRef","ViewChild","AmexioD3PieChartComponent","donutref","AmexioD3Legend","horizontal","temparr","onClick","ngOnChanges","AmexioD3BarChartComponent","showzeroflag","_data","colorflag","firstloading","inc","isChartInit","defineProperty","v","wt","chartId","nativeElement","offsetWidth","x","y","margin","remove","g","d3.scaleBand","rangeRound","padding","domain","map","d3.scaleLinear","d3.max","d3.axisBottom","d3.axisLeft","ticks","tickscount","plotLine","bandwidth","barChartClick","parseInt","xtickscount","tickSize","tickFormat","onBarLegendClick","validateresize","detectChanges","validateData","AmexioD3BaseLineComponent","deviceQueryService","xarr","displayindex","linecolor","slant","createXYAxisData","xaxisdata","yaxisdata","multiseriesdata","legenddata","legends","xaxisname","msdarray","count","displayfield","obj_1","j_1","xobj_1","a","md","j","recalculatescale","summationwidth","findDigitCount","calculatexaxisarray","interval","round","generateNewAxis","avlwidth","min","arr","newarr","apply","max","temp","differential","isredundant","checkArrayRedundancy","sortarr","chknum","setXaxisData","ispresent","arrelement","xaxiselement","xdata","xaxisdata1","setXinterval","xinterval","setDisplayfieldXinterval","initChart","d3.scalePoint","xaxisbottom","tickValues","bottomaxis","callXaxisTooltip","rawdata","alterLegend","plotScale","linelegends","type","AmexioD3LineComponent","linechart","line","d3.line","datum","callTooltip","lineChartClick","BarstackComponent","maxYValue","barwidth","httpresponse","plotChart","data1","tempinnerarray","innerelement","innerindex","maxY","yaxismaxArray","key1","keysetarray","splice","series","d3.stack","offset","d3.stackOffsetDiverging","offsetheight","offsetHeight","d3.min","stackMin","svgRect","setKey","setBarClickText","serie","diff","GroupbarComponent","groupbarchartArray","urllegendArray","defualtColors","res_1","convertToJSON","plotGroupBarChart","x0","x1","years","labels","values","slice","groupbarClick","xaxisData","groupChartObj","firstRowOfData","multiSeriesArray","valueOfJ","singleBarObj","newLabelsValues","newGroupDataObj","assign","transformto2dArray","result","element2","temparray","year","CombochartComponent","lineColor","lineInput","barInput","simpleComboFlag","completeconverteddata","simpleCombodata","highercolorindex","LineArray","outputData","higherdot1colorindex","formDatastructure","tranasforsimplejson","lineflag","createjson","sc1","createData1","sc2","column","linename","sc2barflag","sc3","sc4","inpdata","fulldata","linearr","firstrow","dummyArray","record","innerObject","innerIndex","elementOfInputData","elementOfLineData","includes","firstArray_1","dummyIndex","newData_1","arraydata","firstRowOfData_1","plotLineForMultiSeries","legendcolorindex","ind","visibility","barname","slice1","lineName","this_1","valueline","formTooltipLineData","onComboLineClick","lineName1","this_2","finMaxLineValue","lineValues","lineRange","flag","inc_1","legendelement","lineelement","singlerow","object_1","HistogramComponent","datahisto","array","xaxisArray","yaxisArray","yaxisData","histogramarray","histogramdata","lengtharray","arrayofLength","chartData","finaldataarray","tooltipArray","res","plotXaxis","plotYaxis","dataforChart","transformData1","tempdata","singletooltip","chartdata","barWidth","d3.scaleOrdinal","d3.schemeCategory10","histogramBar","histogramBar1","abs","clickdata","histogramClick","data2","label1","label2","newvalue","ceil","quotient","tempvalue","lengthofArray","templength","element1","initialArray","maxElement","maxlength","arrayofTooltip","value1","value2","tooltipobj","ScatterchartComponent","zoomflag","zoominitiated","legendarray","resizebtnflag","dataFormatted","colorGeneration","legendCreation","plotScatterChart","xAxis","yAxis","scatterChartClick","nodelabel","d3.zoom","zoom_actions","bind","zoom_handler","togglebtnflag","transform","resizesvg","onScatterLegendClick","temparr_1","names","filter","indexOf","legendData","MultiareaComponent","colorarray","onTooltipClick","togglelabel","initAreaChart","top","right","bottom","left","maximumValue","findMaxData","range","areaArray","predefinedColors","counter","increment","innerGroup","plotAreaChart","PlotLineDot","thisa","onAreaTooltipClick","area","d3.area","y0","y1","tempArray","largeValues","value_1","findLargestValue","parsedtransformeddata","JSON","parse","stringify","onAreaLegendClick","CandlestickComponent","predefinedColor","plotXYAxis","candlestickArray","end","bar","class","start","onCandlestickClick","addDataKeys","cumulative","onCandlestickLegendClick","BubbleComponent","xarray","minxvalue","maxxvalue","bubblechartdata","transformdata","plotBubbleChart","colordata","rScale","d3.scaleSqrt","bubbleChartClick","minvalue","maxvalue","onBubbleLegendClick","buubledata","sort","AmexioD3TimelineChartComponent","lanes","timelinechartData","monthlist","transformTODate","urldata","laneLength","mindate","maxdate","miniHeight","mainHeight","getFullYear","d3.scaleTime","mini","lane","timelineChartClick","monthlist1","startfullyear","startMonth","getMonth","endfullyear","mlist","date","dataobj","startdate","enddate","datalength","dataObj","Duration","Obj","timelinelegendClick","ViewDrillableComponent","ngAfterViewInit","getComponentData","chartInputArray","barchartinput","queryBarchartinput","toArray","groupbarchartinput","QueryGroupbarchartinput","linechartinput","QueryLinechartinput","donutchartinput","QueryDonutchartinput","piechartinput","QueryPiechartinput","barstackchartinput","QueryBarStackchartinput","combochartinput","QueryCombochartinput","histogramchartinput","QueryHistogramchartinput","scatterchartinput","QuerySatterchartinput","multiareachartinput","QueryMultiareachartinput","candlestickchartinput","QueryCandlestickchartinput","bubblechartinput","QueryBubblechartinput","timelinechartinput","QueryTimechartinput","concat","ContentChildren","descendants","DrillableComponent","mouseLocation","componentcounter","disableFlag","ComponentDataArray","getData","eventdata","hideUI","sameLevelChart","ShowUI","eventRef","eventData","target","arrayofsameLevel","contextmenuFlag","clientX","clientY","contextStyle","getContextMenuStyle","previouschartClick","chartLevel","cursor","position","display","box-shadow","getListPosition","elementRef","getBoundingClientRect","onContextNodeClick","onCloseClick","D3_COMPONENTS","AmexioChartD3Module","NgModule","imports","FormsModule","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Input, Output, EventEmitter } from \"@angular/core\";\n\nexport class AmexioD3BaseChartComponent{\n\n    @Output() onLegendClick: any = new EventEmitter<any>();\n\n    @Output() onChartClick: any = new EventEmitter<any>();\n\n    @Output() onLineClick: any = new EventEmitter<any>();\n   \n    @Output() drillableEvent = new EventEmitter();\n    \n    @Input('data') data: any = [];\n\n    @Input('http-url') httpurl: any;\n    \n    @Input('http-method') httpmethod: any;\n\n    @Input('legend') legend: boolean = true ;\n\n    @Input('color') colors: any;\n\n    @Input('height') height: any = \"300\";\n\n    @Input('width') width : any = \"300\";\n\n    @Input('title') title: any = \"\";\n\n    @Input('label-color') labelcolor: string = \"black\";\n\n    @Input('label') labelflag: boolean = false;\n    \n    // -------------- added later on\n    @Input('data-reader') datareader: string;\n    @Input('level') level: number = 0;\n    @Input('target') target: number;\n    @Input('drillable-data') drillabledatakey: any[] = [];\n    @Input('horizontal-scale') hScale: boolean = true;   \n    @Input('vertical-scale')   vScale : boolean = false;\n\n    resizeflag: boolean = false;\n    //-------------------\n\n    drillableFlag: boolean = true;\n\n\n    predefinedcolors: string[];\n    \n    componentId : string;\n\n    private  possible : string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcddefghijklmonpqrstuvwxyz\";\n\n    colorIndex: number = 0;\n\n    charttype : string;\n\n    constructor(charttype:string) {\n        this.colors = [];\n        this.charttype = charttype;\n        this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n        this.componentId = this.charttype  + \"-\" + this.generateId();\n    }\n  \n    protected initializeData() {\n        \n        \n            this.data.forEach(element => {\n             element.color = this.getColor(element);\n           });\n     }\n\n      protected getMultipleDrillbleKeyData(data:any,drillablekeys:any)\n      {\n       \n          let nodeObject={};\n          if(data)\n          {\n      for (let index = 0; index < drillablekeys.length; index++) {\n                \n           let element = drillablekeys[index];\n           for (let [key,value] of Object.entries(data)) {\n                   if (key == element) \n                      {\n                            nodeObject[key] = value;\n                       }\n                   };\n              }\n              return nodeObject;\n            }\n       \n }\n     \n private generateId(){\n       let id = \"\";\n       for(let i = 0; i<5; i++){\n        id = id + this.possible\n                           .charAt(Math.floor(Math.random()*this.possible.length));\n       }\n       id = id + \"-\"+new Date().getTime();\n       return id;\n    }\n\n    private  getColor(object : any){\n        if (object.color) {\n            return object.color;\n        }\n        else if (this.colors.length > this.colorIndex) {\n            const color = this.colors[this.colorIndex];\n            this.colorIndex++;\n            return color;\n        }\n        else if ((this.colors.length > 0) && (this.colors.length <= this.colorIndex)) {\n            this.colorIndex = 0;\n            const color = this.colors[this.colorIndex];\n            return color;\n        }\n        else {\n            const color = this.predefinedcolors[this.colorIndex];\n            this.colorIndex++;\n            return color;\n        }\n    }\n\n\n    legendClick(node:any){\n        this.onLegendClick.emit(node);\n    }\n\n    chartClick(node:any){\n        this.onChartClick.emit(node);\n    }\n    \n    comboLineClick(node: any){\n        this.onLineClick.emit(node);\n    }\n    fordrillableClick(ref: any,node: any,event: any)\n     {\n        this.drillableEvent.emit({ref: ref,node: node,event: event});\n    }\n    protected toolTip (d3:any) :any{\n       return  d3.select(\"body\")\n                      .append(\"div\")\n                      .attr('id','tooltipid')\n                      .attr('class','amexiod3tooltip')\n                      .style(\"position\", \"absolute\")\n                      .style(\"z-index\", \"10\")\n                      .style(\"fill\",\"black\")\n                      .style(\"visibility\", \"hidden\");\n    }\n\n    protected toolTipContent(tooltipdata:any) :any{\n       let tooltiphtml = \"<table>\";\n      for (const key in tooltipdata) {\n        if (tooltipdata.hasOwnProperty(key)) {\n          const value = tooltipdata[key];\n          tooltiphtml = tooltiphtml + \"<tr>\";\n//------------------\n        //   tooltiphtml = tooltiphtml + \"<td>\";\n        //   tooltiphtml = tooltiphtml + key+':';\n        //   tooltiphtml = tooltiphtml + \"</td>\";\n//------------------\n          tooltiphtml = tooltiphtml + \"<td>\";\n          tooltiphtml = tooltiphtml + value;\n          tooltiphtml = tooltiphtml + \"</td>\";\n          tooltiphtml = tooltiphtml + \"</tr>\";\n        }\n      }\n      tooltiphtml = tooltiphtml + \"</table>\";\n\n      return tooltiphtml;\n    }\n\n    protected toolTipWithLegendandAxis(legend: string, xaxis:string, yaxis: string) :any{\n        let tooltiphtml = \"<div>\";\n        tooltiphtml = tooltiphtml + \"<b>\"+xaxis+\"</b>, \";\n        tooltiphtml = tooltiphtml + legend+\"</b> \";\n        tooltiphtml = tooltiphtml + \"<b>\"+yaxis+\"</b> \";\n        tooltiphtml = tooltiphtml + \"</div>\";\n        return tooltiphtml;\n    }\n\n    protected toolTipForBar(tooltipData: any): any{\n         let tooltiphtml= \"<div>\";\n        for (let [key, value] of Object.entries(tooltipData)) {\n            let sideStyle=\"float:left\";\n            tooltiphtml = tooltiphtml + \"<div>\";\n         tooltiphtml = tooltiphtml + \"<span style =\"+sideStyle+\" ><b>\" + key +\" \"+ \"</b>\" +value + \"</br></span>\";\n         tooltiphtml = tooltiphtml + \"</div>\";\n        }\n\n         return tooltiphtml;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpClientModule,HttpHeaders } from '@angular/common/http';\n\nimport {Observable} from 'rxjs/index';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommanDataService {\n\n  constructor(private http:HttpClient) { }\n  serviceUrl: string;\n\n  fetchUrlData(serviceUrl: string, methodType: string): Observable<any> {\n    const requestJson = {};\n    const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n    if (methodType === 'post') {\n    return this.http.post(serviceUrl, requestJson, {headers});\n    }else if (methodType === 'get') {\n    return this.http.get(serviceUrl, {headers});\n    }\n}\n\n\npostfetchData(serviceUrl: string, methodType: string,requestJson:any): Observable<any> {\n \n  const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n  if (methodType === 'post') {\n  return this.http.post(serviceUrl, requestJson, {headers});\n  }else if (methodType === 'get') {\n  return this.http.get(serviceUrl, {headers});\n  }\n}\n\n\n\n\n\n\n}","\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpClient,HttpClientModule,HttpHeaders } from '@angular/common/http';\n\n\n@Injectable()\nexport class DeviceQueryService {\n\n  constructor( @Inject(PLATFORM_ID) private platformId: any) {\n\n  }\n\n  rules = {\n    print: 'print',\n    screen: 'screen',\n    phone: '(max-width: 767px)',\n    tablet: '(min-width: 768px) and (max-width: 1024px)',\n    desktop: '(min-width: 1025px)',\n    portrait: '(orientation: portrait)',\n    landscape: '(orientation: landscape)',\n    retina: '(-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)',\n  };\n\n  Check = function(mq: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!mq) {\n        return;\n      }\n      return window.matchMedia(mq).matches;\n    } else {\n      return;\n    }\n  };\n\n  /**********************************************\n   METHODS FOR CHECKING TYPE\n   **********************************************/\n  IsPhone() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.phone).matches;\n    } else {\n      return null;\n    }\n  }\n\n  IsTablet = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.tablet).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsDesktop = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.desktop).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsPortrait = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.portrait).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsLandscape = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.landscape).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsRetina = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.retina).matches;\n    } else {\n      return null;\n    }\n  };\n\n  browserWindow = () => {\n    return window;\n  }\n\n  /**********************************************\n   EVENT LISTENERS BY TYPE\n   **********************************************/\n  OnPhone(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.phone);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnTablet(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.tablet);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnDesktop(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.desktop);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnPortrait(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.portrait);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnLandscape(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.landscape);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  mqlMethod(callBack: any, mql: any) {\n    mql.addListener((mql1: MediaQueryList) => {\n      if (mql1.matches) {\n        callBack(mql);\n      }\n    });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { PlotCart } from '../base/chart.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\n\n@Component({\n  selector: 'amexio-d3-chart-donut',\n  template: `<div *ngIf=\"drillableFlag\" #chartId (window:resize)=\"resize($event)\">\n    <div *ngIf=\"data.length > 0\">\n\n  \n    <div colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \">\n        {{title}}\n    </div>\n    <div [ngClass]=\"'donutcss'\">\n        <svg preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 300 300\" [attr.height]=\"height\" [attr.width]=\"width\" [attr.id]=\"componentId\">\n        </svg>\n        <div>\n\n            <div style=\"display: block; padding: 1%;\">\n                <div *ngIf=\"desktoplegend\">\n                    <amexio-d3-legend *ngIf=\"legend\" (onClick)=\"onDonutLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\"></amexio-d3-legend>\n                </div>\n                <div *ngIf=\"mobilelegend\">\n                    <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onDonutLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\"></amexio-d3-legend>\n                </div>\n            </div>\n        </div>\n        <!--  -->\n        <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n            </div>\n\n        </div>`,\n  styles: [`.donutcss{display:flex;flex-direction:row}@media screen and (max-width:1024px){.donutcss{display:flex;flex-direction:column}}`]\n})\nexport class AmexioD3DounutChartComponent extends AmexioD3BaseChartComponent implements PlotCart {\n\n  @Input('pie') pie: boolean = false;\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  desktoplegend: boolean = false;\n  mobilelegend: boolean = false;\n  @Input() drillData: any;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  legendArray: any[] = [];\n  response: any;\n  svg: any;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('DONUTCHART');\n  }\n\n  ngOnInit() {\n\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n        }, (error) => {\n        }, () => {\n\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.drawChart();\n\n            // this.data = this.getResponseData(resp);\n            this.transformData(this.data);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n        });\n\n      } else\n        if (this.data) {\n\n\n          setTimeout(() => {\n            this.data = this.getResponseData(this.data);\n            this.transformData(this.data);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n        }\n    } else {\n\n      this.fetchData(this.drillData);\n    }\n  }\n\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.response = resp;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.data = this.getResponseData(resp);\n\n          this.drawChart();\n\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.drillableFlag = true;\n      this.initializeData();\n      this.plotD3Chart();\n    }, 0);\n\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n  plotD3Chart() {\n    this.formLegendData();\n    //this.transformData(this.data);\n    //  this.data = this.transformeddata;\n    let outerRadius = 0;\n    let innerRadius = 0;\n\n    outerRadius = this.svgwidth / 2;\n    innerRadius = this.svgwidth / 4;\n\n    if (this.pie) {\n      innerRadius = 0;\n    }\n\n    const tooltip = this.toolTip(d3);\n\n    const arc = d3.arc()\n      .outerRadius(outerRadius)\n      .innerRadius(innerRadius);\n\n    const pie = d3.pie()\n      .value((d) => {\n        return d[Object.keys(d)[1]];\n        //  return d.value\n      });\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .append('g')\n      .attr('transform', 'translate(' + this.svgwidth / 2 + ',' + this.svgheight / 2 + ')')\n      .selectAll('path')\n      .data(pie(this.data))\n      .enter();\n\n    if (this.device.IsDesktop() == true) {\n      this.desktoplegend = true;\n      this.mobilelegend = false;\n    }\n    // else{\n    //        if(this.device.IsPhone()==true && this.device.IsTablet()==true)\n    //        {\n    //             this.desktoplegend=false;\n    //             this.mobilelegend=true;\n    //        }\n    // }\n\n    const path = this.svg.append('path')\n      .attr('d', arc)\n      .attr('fill', (d, i) => {\n        if (d.data.color) {\n          return d.data.color;\n        }\n        else {\n          return \"black\";\n        }\n        //  return (d && d.data && d.data.color) ? d.data.color : \"black\"\n      })\n      .attr('cursor', 'pointer')\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.formTooltipData(d.data)\n\n          //  this.formLegendData(d.data)\n          // this.toolTipContent(d.data)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.DonutChartClick(d.data);\n        this.fordrillableClick(this, d.data, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        //this.chartClick(d.data);\n      });\n    if (this.labelflag) {\n      const text = this.svg.append(\"text\")\n        .transition()\n        .duration(200)\n        .attr(\"transform\", (d) => {\n          return \"translate(\" + arc.centroid(d) + \")\";\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .text((d) => {\n\n          return d.data[Object.keys(d.data)[1]]\n\n          //return d.data.value;\n        })\n        .style('fill', (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n          // return (d && d.data && d.data.textcolor) ? d.data.textcolor : \"black\";\n        })\n        .style('font-size', '12px');\n    }\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.data.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element[Object.keys(element)[0]];\n      legendobject['value'] = element[Object.keys(element)[1]];\n      legendobject['color'] = element.color;\n      this.legendArray.push(legendobject);\n    });\n  }\n\n  onDonutLegendClick(legendevent: any) {\n    let obj = {};\n\n    //  obj['label'] = legendevent.label;\n    //  obj['value'] = legendevent.value \n    obj[this.keyArray[0]] = legendevent.label;\n    obj[this.keyArray[1]] = legendevent.value;\n    //delete event.color;\n    this.legendClick(obj);\n  }\n\n  transformData(data: any) {\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends\n    this.data = this.transformeddata;\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color' && key != 'textcolor') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  DonutChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    this.chartClick(object);\n  }\n\n  resize(data: any) {\n\n    this.desktoplegend = false;\n    this.mobilelegend = true;\n    this.plotD3Chart();\n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\n@Component({\n  selector: 'amexio-d3-chart-pie',\n  template: `<div   *ngIf=\"drillableFlag\">\n<amexio-d3-chart-donut #id (onLegendClick)=\"legendClick($event)\" \n                       (onChartClick)=\"chartClick($event)\" \n                       (drillableEvent)=\" fordrillableClick($event)\"\n                        [height]=\"height\"\n                        [width]=\"width\"\n                        [title]=\"title\"\n                        [data] = \"data\"\n                        [pie]  = \"true\"\n                        [color]=\"colors\"\n                        [http-url]=\"httpurl\"\n                        [http-method]=\"httpmethod\"\n                        [data-reader]=\"datareader\"\n                        [label]=\"labelflag\"\n                        [label-color]=\"labelcolor\"\n                        [level]=\"level\"\n                        [target]=\"target\"\n                        [drillable-data]=\"drillabledatakey\"\n                        [drillData]=\"drillData\">\n</amexio-d3-chart-donut>\n</div>\n`\n})\nexport class AmexioD3PieChartComponent implements OnInit {\n\n  @Input('data') data: any = [];\n\n  @Output() onLegendClick: any = new EventEmitter<any>();\n\n  @Output() onChartClick: any = new EventEmitter<any>();\n\n  @Output() drillableEvent = new EventEmitter();\n\n  @ViewChild('id') donutref: any;\n\n  @Input() legend: boolean = true;\n\n  @Input('color') colors: any = [];\n\n  @Input('width') width: any = \"300\";\n\n  @Input('height') height: any = \"300\";\n\n  @Input() title: any = \"\";\n\n  @Input('http-url') httpurl: any;\n\n  @Input('http-method') httpmethod: any;\n\n  @Input('data-reader') datareader: string;\n\n  @Input('level') level = 0;\n\n  @Input('target') target: number;\n\n  @Input('drillable-data') drillabledatakey: any\n\n  @Input('label-color') labelcolor: string = \"black\";\n\n  @Input('label') labelflag: boolean = false;\n\n  drillableFlag: boolean = true;\n\n  drillData: any;\n\n\n  ngOnInit() {\n\n  }\n\n  legendClick(node: any) {\n    this.onLegendClick.emit(node);\n  }\n\n  chartClick(node: any) {\n    this.onChartClick.emit(node);\n  }\n\n\n  fordrillableClick(ref: any) {\n    this.drillableEvent.emit(ref);\n  }\n\n  fetchData(data: any) {\n    this.drillData = data;\n  }\n\n  drawChart() {\n\n    this.donutref.drillableFlag = true;\n    this.donutref.drawChart();\n\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, OnInit } from \"@angular/core\";\n\n@Component({\n    selector : 'amexio-d3-legend',\n    template: `<div style =\" width: 100% ; padding-left: 20px; padding-top: 8px; \">\n<table *ngIf=\"!horizontal\" style=\"height: 100%;\">\n    <tr *ngFor = \"let node of data\" style=\"cursor: pointer;\" (click)=\"onLegendClick(node)\">\n        <td style=\"height: 10px; width: 23px; padding-left: 2px;\"\n            [ngStyle]=\"{'background-color': node.color}\"></td>\n        <td>{{node.label}}</td>\n    </tr>\n</table>\n</div>\n\n<table *ngIf=\"horizontal\" style=\"height: 100%;\">\n    <tr>\n        <td *ngFor = \"let node of data\" \n                    (click)=\"onLegendClick(node)\" \n                    style=\"cursor: pointer;\">\n            \n            <div style=\" display: inline-block; display: inline-block; padding: 2px;\">\n                    <div style=\" width: 10px; display: inline-block; padding: 2px; \" \n                    [ngStyle]=\"{'background-color': node.color}\"></div>\n                {{node.label}}\n            </div>\n        </td>\n        \n    </tr>\n</table>\n\n<br>\n `\n})\nexport class AmexioD3Legend implements OnChanges, OnInit\n{\n\n    @Input('data') data : any;\n\n    @Input('horizontal') horizontal : boolean = false;\n    temparr: any[] = [];\n    @Output() onClick : any = new EventEmitter<any>();\n\n    constructor(){\n   \n    }\n\n    ngOnInit() {\n\n        this.data = this.data;\n        this.temparr = this.data;\n    }\n    ngOnChanges() {\n        // debugger;\n        // window.location.reload();\n        this.data = this.data;\n        this.temparr = this.data;\n    }\n\n    onLegendClick(node:any){\n        this.onClick.emit(node);\n    }\n}","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, OnChanges, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\n\nimport * as d3 from 'd3';\nimport { debug } from \"util\";\n\n@Component({\n  selector: 'amexio-d3-chart-bar',\n  template: `<div #chartId *ngIf=\"drillableFlag \" #divid (window:resize)=\"validateresize()\">\n    <table [ngClass]=\"validateData()\" style=\"width: 100%;\" position=\" relative\">\n        <ng-container *ngIf=\"title.length > 0\">\n            <tr>\n                <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n            </tr>\n        </ng-container>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr *ngIf=\"legend\">\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onBarLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n                </amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n    <!-- <table *ngIf=\"!(data && data.length >0)\" class=\"lmask\">\n        \n    </table > -->\n    <!-- <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div> -->\n\n</div>`\n})\n\nexport class AmexioD3BarChartComponent extends AmexioD3BaseChartComponent implements PlotCart, OnChanges {\n\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input() horizontal: boolean = false;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  @ViewChild('domref') DOM: ElementRef;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = [];\n  @Input('horizontal-scale') hScale: boolean = true;\n  @Input('yaxis-interval') tickscount: number;\n  @Input('xaxis-interval') xtickscount: number;\n  @Input('show-zero-values') showzeroflag: boolean = true;\n  @Input('data') _data: any = [];\n\n  wt: number;\n  resizeflag: boolean = false;\n  checkmob: boolean;\n  resizeg: any;\n  drillableFlag: boolean = true;\n  // data: any;\n  xaxis: any;\n  yaxis: any;\n  svg: any;\n  colorflag: boolean = false;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  object: any;\n  legendArray: any[] = [];\n  firstloading = false;\n  inc = 0\n  // private _data: any = [];\n  set data(v: any) {\n\n    if (v && (v.length > 0)) {\n      this._data = v;\n      // if(this.isChartInit){\n      //   this.resize();\n      // }\n      // if (this.data) {\n\n      // setTimeout(() => {\n      //   this.data = this.getResponseData(this.data);\n      //   this.transformData(this.data)\n      //   this.initializeData();\n      //   this.plotD3Chart();\n      // }, 0);\n      // }\n      // this.cdf.detectChanges();\n\n      // this.formLegendData();\n    }\n\n  }\n\n  get data() {\n    return this._data;\n  }\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('bar');\n  }\n\n  isChartInit: boolean = false;\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            // this.drawChart();\n            this.transformData(this.data)\n            this.initializeData();\n            this.plotD3Chart();\n\n            this.isChartInit = true;\n          }, 0);\n        });\n\n      } else if (this.data) {\n\n        setTimeout(() => {\n          this.data = this.getResponseData(this.data);\n          this.transformData(this.data)\n          this.initializeData();\n          this.plotD3Chart();\n          this.isChartInit = true;\n        }, 0);\n      }\n    }\n  }\n\n  // Fetch Data\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n\n\n      });\n\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n\n      this.initializeData();\n      this.plotD3Chart();\n    }, 0);\n\n  }\n\n  ngOnChanges() {\n    // console.log(\"repeat\");\n    if (this.inc > 1) {\n      if (this.data) {\n\n        setTimeout(() => {\n          this.data = this.getResponseData(this.data);\n          this.transformData(this.data)\n          this.initializeData();\n          this.plotD3Chart();\n        }, 500);\n\n      }\n\n      this.formLegendData();\n    } this.inc++\n\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  plotD3Chart(): any {\n    this.formLegendData();\n    if (this.resizeflag == false) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n    }\n\n    const tooltip = this.toolTip(d3);\n\n    const margin = { top: 20, right: 60, bottom: 40, left: 60 };\n\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n    //RESIZE STEP 2 START\n    // this.svg.selectAll(\"*\").remove();\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight);\n    this.svg.selectAll(\"*\").remove();\n    // this.svg.exit().remove();//remove unneeded circles\n    //RESIZE STEP 2 ENDS HERE\n    let x, y;\n    const g = this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    // vertical bar\n    if (this.horizontal == false) {\n      // this.svg.selectAll(\"*\").remove();\n      // -----------------------------\n      if (this.data) {\n        x = d3.scaleBand()\n          .rangeRound([0, width])\n          .padding(0.1);\n\n        //setting content for x and y axis\n        x.domain(this.data.map((d) => {\n\n          return d[Object.keys(d)[0]];\n          //    return d.label\n        }));\n      }\n      //-----------------------------\n      if (this.data) {\n        y = d3.scaleLinear()\n          .rangeRound([height, 0]);\n        y.domain([0, d3.max(this.data, (d) => {\n          return d[Object.keys(d)[1]];\n          //return d.value;\n        })]);\n\n      }\n      // add x axis to svg\n      if (this.device.IsDesktop() == true) {\n        if (this.svgwidth <= 400) {\n          g.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x)).\n            selectAll(\"text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", 9)\n            .attr(\"dy\", \".35em\")\n            .attr(\"transform\", \"rotate(60)\")\n            .style(\"text-anchor\", \"start\");\n        }\n        else {\n          g.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x))\n        }\n      }\n\n      else {\n        g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n\n      }\n\n      //add y axis to svg\n      g.append(\"g\")\n        .call(d3.axisLeft(y)\n          .ticks(this.tickscount))\n\n      this.plotLine(g, x, y, height, width);\n\n      //add bar chart\n      g.selectAll(\".bar\")\n        .data(this.data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", (d) => {\n          return x(d[Object.keys(d)[0]]);\n          // return x(d.label); \n        })\n        .attr(\"y\", (d) => {\n          return y(d[Object.keys(d)[1]]);\n          // return y(d.value); \n        })\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", (d) => { return height - y(d[Object.keys(d)[1]]); })\n\n        .style(\"fill\", (d) => {\n          // return \"blue\";\n          return d.color;\n        })\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n            //  this.toolTipForBar(d)\n            // this.toolTipContent(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.barChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n          //this.chartClick(d);\n        });\n\n      if (this.labelflag) {\n        var yTextPadding = 40;\n        this.svg.selectAll(\".label\")\n          .data(this.data)\n          .enter()\n          .append(\"text\")\n          .style(\"font-weight\", \"bold\")\n          .style(\"font-size\", \"1vw\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              if ((this.labelcolor.length > 0) && d[Object.keys(d)[1]] > 0) {\n                return this.labelcolor;\n              }\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", (d, i) => {\n            return x(d[Object.keys(d)[0]]) + margin.left + x.bandwidth() / 2;\n          })\n          .attr(\"y\", (d, i) => {\n            return y(d[Object.keys(d)[1]]) + yTextPadding;\n          })\n          .text((d) => {\n            // if (d[Object.keys(d)[1]] > 0) {\n            //   return d[Object.keys(d)[1]];\n            // }.\n            if (this.showzeroflag) {\n              return d[Object.keys(d)[1]];\n            }\n            else if (!this.showzeroflag) {\n              if (d[Object.keys(d)[1]] > 0) {\n                return d[Object.keys(d)[1]];\n              }\n            }\n          })\n          .attr(\"cursor\", \"pointer\")\n          .on(\"mouseover\", (d) => {\n            return tooltip.style(\"visibility\", \"visible\");\n          })\n          .on(\"mousemove\", (d) => {\n            return tooltip.html(\n              this.formTooltipData(d)\n              //  this.toolTipForBar(d)\n              // this.toolTipContent(d)\n            )\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n          })\n          .on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n          .on(\"click\", (d) => {\n            this.barChartClick(d);\n            this.fordrillableClick(this, d, event);\n            return tooltip.style(\"visibility\", \"hidden\");\n            //this.chartClick(d);\n          });\n      }//if ends fr \n    }\n    // horizontal bar\n    else if (this.horizontal == true) {\n      if (this.data) {\n        x = d3.scaleLinear()\n          .rangeRound([0, width])\n          ;\n\n\n        //setting content for x and y axis\n        x.domain([0, d3.max(this.data,\n          (d) => {\n            return parseInt(\n              d[Object.keys(d)[1]]\n              // d.value\n            );\n          })]);\n        // d[Object.keys(d)[1]]\n        y = d3.scaleBand()\n          .rangeRound([height, 0]).padding(0.1);\n        y.domain(this.data.map((d) => {\n          return d[Object.keys(d)[0]]\n          //return d.label;\n        }))\n      }\n      // add x axis to svg\n      g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x).ticks(this.xtickscount));\n\n      //add y axis to svg\n      g.append(\"g\")\n        .call(d3.axisLeft(y).ticks(this.tickscount))\n\n      this.plotLine(g, x, y, height, width);\n      //add bar chart\n      g.selectAll(\".bar\")\n        .data(this.data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => {\n          return y(\n            d[Object.keys(d)[0]]\n            // d.label\n          );\n        })\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"width\", (d) => {\n          return x(\n            d[Object.keys(d)[1]]\n            // d.value\n          )\n        })\n        .attr(\"height\", y.bandwidth())\n        .style(\"fill\", (d) => { return d.color; })\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n            // this.formLegendData(d)\n            // this.toolTipContent(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.barChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n          //this.chartClick(d);\n        });\n\n      if (this.labelflag) {\n        let yTextPadding = 40;\n        this.svg.selectAll(\".label\")\n          .data(this.data)\n          .enter()\n          .append(\"text\")\n          .style(\"font-weight\", \"bold\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"vertical-align\", \"middle\")\n          .attr(\"margin-top\", margin.top)\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              return this.labelcolor;\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", (d, i) => {\n            return x(d[Object.keys(d)[1]]) + yTextPadding;\n          })\n          .attr(\"y\", (d, i) => {\n            return y(d[Object.keys(d)[0]])\n              + margin.top + y.bandwidth() / 2;\n          })\n          .text((d) => {\n            // return d[Object.keys(d)[1]];\n            if (this.showzeroflag) {\n              return d[Object.keys(d)[1]];\n            }\n            else if (!this.showzeroflag) {\n              if (d[Object.keys(d)[1]] > 0) {\n                return d[Object.keys(d)[1]];\n              }\n            }\n          })\n          .attr(\"cursor\", \"pointer\")\n          .on(\"mouseover\", (d) => {\n            return tooltip.style(\"visibility\", \"visible\");\n          })\n          .on(\"mousemove\", (d) => {\n            return tooltip.html(\n              this.formTooltipData(d)\n              // this.formLegendData(d)\n              // this.toolTipContent(d)\n            )\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n          })\n          .on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n          .on(\"click\", (d) => {\n            this.barChartClick(d);\n            this.fordrillableClick(this, d, event);\n            return tooltip.style(\"visibility\", \"hidden\");\n            //this.chartClick(d);\n          });\n      }\n\n    }\n    //else ends(horizontal bar logic ends)\n\n  }\n\n  plotLine(g, x, y, height, width) {\n\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y).ticks(this.tickscount)\n          .tickSize(-width).tickFormat(''));\n    }\n    if (this.vScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).\n          tickSize(-this.width).tickFormat('').ticks(this.xtickscount)\n        );\n    }\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  transformData(data: any) {\n    if (data && (data.length > 0)) {\n      this.transformeddata = [];\n      this.keyArray = data[0];\n      if (data && (data.length > 0)) {\n\n        data.forEach((element, index) => {\n          if (index > 0) {\n            let DummyObject = {};\n            element.forEach((individualvalue, keyindex) => {\n              DummyObject[this.keyArray[keyindex]] = individualvalue;\n            });//inner for loop ends\n            this.transformeddata.push(DummyObject);\n          }//if ends\n        });//outer for loop ends\n      }\n      this.data = this.transformeddata;\n    }//\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.data.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element[Object.keys(element)[0]];\n      legendobject['value'] = element[Object.keys(element)[1]];\n      legendobject['color'] = element.color;\n      this.legendArray.push(legendobject);\n    });\n    this.legendArray;\n  }\n\n  onBarLegendClick(legendevent: any) {\n    let obj = {};\n    //  obj['label'] = legendevent.label;\n    //  obj['value'] = legendevent.value;\n    obj[this.keyArray[0]] = legendevent.label;\n    obj[this.keyArray[1]] = legendevent.value;\n    //obj[legendevent.label] = legendevent.value;\n    //delete event.color;\n    this.legendClick(obj);\n  }\n\n  barChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    this.chartClick(object);\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n      if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  //RESIZE STEP 5 STARTS\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotD3Chart();\n  }\n  // //RESIZE STEP 5 STARTS\n  //   initialresize() {\n  //     if (this.wt) {\n  //       //RESIZE STEP 3 START\n  //       // if(this.firstloading)\n  //       // this.svg.selectAll(\"*\").remove();\n\n  //       this.resizeflag = true;\n  //       if (this.svgwidth) {\n  //         this.svgwidth = this.svgwidth;\n\n  //       } else if (this.chartId) {\n  //         this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n  //       }\n  //       //RESIZE STEP 3 ENDS\n  //       // this.svgwidth = this.divid.nativeElement.offsetWidth;\n\n  //       this.cdf.detectChanges();\n  //       this.plotD3Chart();\n\n  //     }\n  //     this.firstloading = false;\n  //   }\n  // //RESIZE STEP 5 ENDS\n  validateData() {\n    if (this.data) {\n\n    } else {\n      return \"lmask\"\n    }\n  }\n\n\n}","import { Input } from \"@angular/core\";\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { DeviceQueryService } from '../services/device.query.service';\nimport { nearer } from \"q\";\n\nexport class AmexioD3BaseLineComponent extends AmexioD3BaseChartComponent {\n    @Input('width') svgwidth: number;\n    private _data: any = [];\n    private xaxisdata: any[];\n    private xaxisdata1: any[];\n    private yaxisdata: any[];\n    private legenddata: any[];\n    legends: any[];\n    linelegends: any[];\n    xarr: any[] = [];\n    protected xaxisname: any;\n    protected multiseriesdata: any[];\n    svg: any;\n    displayindex: number = 0;\n    @Input('height') svgheight = 300;\n\n    @Input('data')\n\n    @Input('xaxis-interval') xinterval: number;\n\n    @Input('http-url') httpurl: any;\n\n    @Input('http-method') httpmethod: any;\n\n    @Input('yaxis-interval') tickscount: number;\n    // @Input('xaxis-interval') xtickscount: number = 3;\n    @Input('color') linecolor = [];\n\n    @Input('display-field') displayfield: string;\n\n    @Input('rotate') slant = false;\n\n    constructor(public deviceQueryService: DeviceQueryService) {\n        super('line');\n    }\n\n    set data(v: any) {\n        this._data = v;\n        if (this._data && (this._data.length > 0)) {\n            this.createXYAxisData();\n        }\n\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    protected createXYAxisData(): void {\n        this.labelcolor\n        this.xaxisdata = [];\n        this.yaxisdata = [];\n        this.multiseriesdata = [];\n        this.legenddata = [];\n        this.legends = [];\n        this.xaxisname = this.data[0][0].label;\n        const msdarray: any[] = [];\n        let count = 0\n        // ************************************************\n        if (this.displayfield) {\n            // find displayfield index\n\n            this._data[0].forEach((element, index) => {\n\n                if (element.label == this.displayfield) {\n                    this.displayindex = index;\n                }\n            });\n        }\n\n        // ***********************************************\n\n        for (let index = 0; index < this._data[0].length; index++) {\n            const legend = this._data[0][index];\n            msdarray[index] = [];\n            let obj = {};\n            obj['label'] = legend.label;\n            if ((this.linecolor.length > 0) && this.linecolor[index]) {\n                obj['color'] = this.linecolor[index];\n            }\n            else {\n                obj['color'] = this.predefinedcolors[index];\n            }\n            this.legenddata.push(obj);\n            // this.legenddata.push({'label':legend.label,'color':this.predefinedcolors[index+1]});\n            if (index > 0) {\n                let obj = {};\n                obj['label'] = legend.label;\n                if ((this.linecolor.length > 0) && this.linecolor[count]) {\n                    obj['color'] = this.linecolor[count];\n                } else {\n                    obj['color'] = this.predefinedcolors[count];\n                }\n                this.legends.push(obj);\n                count++;\n                // this.legends.push({'label':legend.label,'color':this.predefinedcolors[index]});\n            }\n        }\n\n\n        let i = 0;\n        // xaxisdata yaxisdata msdarray is formed here\n\n        this._data.forEach(object => {\n\n            if (i > 0) {\n                let j = 0;\n                let xobj = {};\n                object.forEach(a => {\n\n                    // if (j === 0) {\n                    //     this.xaxisdata.push({ 'label': a, 'value': a });\n                    // } else {\n                    //     this.yaxisdata.push({ 'label': a, 'value': a });\n                    // }\n\n                    if ((j > 0) && (j !== this.displayindex)) {\n                        this.yaxisdata.push({ 'label': a, 'value': a });\n                    }\n\n                    if (j == 0) {\n                        xobj['value'] = a;\n                    }\n\n                    if (j == this.displayindex) {\n                        xobj['label'] = a;\n                    }\n\n\n                    msdarray[j].push(a);\n                    j++;\n                });\n\n                this.xaxisdata.push(xobj);\n\n\n\n            }\n            i++;\n        });\n\n        for (let index = 0; index < msdarray.length; index++) {\n\n            const element = msdarray[index];\n\n            if ((index > 0) && (index !== this.displayindex)) {\n\n                let md: any[] = [];\n                for (let j = 0; j < element.length; j++) {\n\n                    const v = element[j];\n                    md.push({ 'legend': this.legenddata[index].label, 'label': this.xaxisdata[j].label, 'value': v });\n                }\n\n                this.multiseriesdata.push(md);\n                this.legends[index - 1].data = md;\n            }\n        }\n    }\n\n    recalculatescale(width: any) {\n\n        // consider fontsize to be 10\n        this.xaxisdata;\n        let summationwidth = 0;\n        if (!this.displayfield) {\n            this.xaxisdata.forEach(element => {\n                if (typeof (element.label) == 'string') {\n                    summationwidth = summationwidth + (element.label.length * 10);\n                }\n                if (typeof (element.label) == 'number') {\n                    let n = this.findDigitCount(element.label);\n                    summationwidth = summationwidth + (n * 10);\n                }\n            });\n        }\n\n        if (this.displayfield) {\n            this.xaxisdata.forEach(element => {\n                // if (typeof (element.label) == 'string') {\n                summationwidth = summationwidth + (element.label.length * 10);\n                // }\n            });\n        }\n\n        if (this.displayfield && this.slant) {\n            summationwidth = this.xaxisdata.length * 10;\n        }\n\n        if (summationwidth > width) {\n            //  function call\n\n            this.calculatexaxisarray(summationwidth, width);\n        }\n\n    }\n\n    calculatexaxisarray(summationwidth: any, width: any) {\n\n        let interval = Math.round(summationwidth / width);\n         this.generateNewAxis(interval, width);\n    }\n\n    generateNewAxis(interval, avlwidth) {\n        this.xaxisdata\n\n        let arr = [];\n        let newarr = [];\n        let min;\n        let max;\n        //    make Array out of this.xaxisdata\n        this.xaxisdata.forEach(element => {\n            // if (typeof (element.label) == 'number') {\n            arr.push(element.label);\n            // }\n        });\n\n        //null check on arr\n        if (arr.length > 0) {\n            // find min\n\n            min = Math.min.apply(null, arr);\n            //find max\n            max = Math.max.apply(null, arr);\n\n            let temp = Math.round(avlwidth / 10)\n            let differential = (temp - (temp * 0.2)) / 4;\n\n            //form new arr\n\n            let j = Math.round(differential);\n            //   hjlkllll\n            let i;\n            let isredundant = false;\n\n            if (!this.displayfield) {\n                newarr[0] = min;\n\n                for (i = 1; j < this.xaxisdata.length; i++) {\n                    j = Math.round((differential * i) + i);\n\n                    isredundant = this.checkArrayRedundancy(newarr, Math.round(j));\n                    if (isredundant) {\n                        newarr[i] = Math.round(j + 1);\n                    } else {\n                        newarr[i] = Math.round(j);\n                    }\n                }\n\n                this.sortarr(newarr);\n            }\n\n            if (this.displayfield) {\n                for (i = 0; j < this.xaxisdata.length; i++) {\n\n                    j = Math.round((differential * i) + i);\n\n                    if (this.xaxisdata[j]) {\n                        newarr[i] = this.xaxisdata[j].label;\n                    }\n                    else {\n                        if (this.xaxisdata[j + 1]) {\n                            newarr[i] = this.xaxisdata[j + 1].label;\n                        }\n                    }\n                }\n\n                this.xarr = newarr;\n\n            }\n        }\n    }\n\n    checkArrayRedundancy(newarr, chknum) {\n        let inc = 0\n        newarr.forEach(element => {\n            if (chknum == element) {\n                inc++;\n            }\n        });\n\n        if (inc > 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    sortarr(newarr: any) {\n        let i;\n        let j;\n        let temp;\n        for (i = 0; i < newarr.length; ++i) {\n\n            for (j = i + 1; j < newarr.length; ++j) {\n\n                if (newarr[i] > newarr[j]) {\n\n                    temp = newarr[i];\n                    newarr[i] = newarr[j];\n                    newarr[j] = temp;\n\n                }\n\n            }\n\n        }\n\n        //    newarr;\n        this.setXaxisData(newarr)\n    }\n\n    setXaxisData(newarr: any) {\n\n        this.xarr = newarr;\n\n        // this.xaxisdata.push({label: 125, value: 125});\n\n        // chk if newarr elements are present in xaxisdata\n        let ispresent = false;\n        newarr.forEach(arrelement => {\n            this.xaxisdata.forEach(xaxiselement => {\n                if (arrelement == xaxiselement.label) {\n                    ispresent = true;\n                }\n            });\n\n            if (!ispresent) {\n                //create & push an obj in xaxisdata\n                let obj = { label: arrelement, value: arrelement };\n                this.xaxisdata.push(obj);\n            }\n\n            ispresent = false;\n        });\n\n        //  \n\n        // change arr to arr of objs\n        let xdata = [];\n        newarr.forEach((element: any) => {\n            let obj = { label: element, value: element }\n            xdata.push(obj);\n        });\n        this.xaxisdata;\n        this.xaxisdata1 = xdata;\n        //initialize xaxis data\n    }\n\n    findDigitCount(n: number) {\n        let count = 0;\n        if (n >= 1)++count;\n\n        while (n / 10 >= 1) {\n            n /= 10;\n            ++count;\n        }\n        return count;\n    }\n\n    setXinterval(width: number) {\n        let interval = Math.round(this.xaxisdata.length / this.xinterval);\n\n        let arr = [];\n        let newarr = [];\n        //    make Array out of this.xaxisdata\n        this.xaxisdata.forEach(element => {\n            if (typeof (element.label) == 'number') {\n                arr.push(element.label);\n            }\n        });\n\n\n        let min = Math.min.apply(null, arr);\n        //find max\n        let max = Math.max.apply(null, arr);\n        let j = interval;\n        let i;\n        let ispresent = false;\n        newarr[0] = min;\n        // assa\n        for (i = 1; j < max; i++) {\n            j = interval * i;\n            newarr[i] = j;\n        }\n\n        // newarr[i] = max;\n\n        //inset numbers which are not present in xaxis domain but present in newarr\n\n        newarr.forEach(arrelement => {\n\n            this.xaxisdata.forEach(xaxiselement => {\n\n                if (xaxiselement.label == arrelement) {\n\n                    ispresent = true\n                }\n            });\n\n            if (!ispresent) {\n\n                let obj = { label: arrelement, value: arrelement }\n                this.xaxisdata.push(obj);\n            }\n\n            ispresent = false;\n        });\n\n        // this.sortarr(newarr);\n\n        // newarr;\n        // this.xaxisdata;\n        this.xarr = newarr;\n\n    }\n\n    setDisplayfieldXinterval(width) {\n        let interval = Math.round(this.xaxisdata.length / this.xinterval);\n\n        let arr = [];\n        let newarr = [];\n        //    make Array out of this.xaxisdata\n        this.xaxisdata.forEach(element => {\n            arr.push(element.label);\n        });\n        let min = 0;\n        let max = this.xaxisdata.length - 1;\n        let j = interval;\n        let i;\n        newarr[0] = this.xaxisdata[min].label;\n        for (i = 1; j < max; i++) {\n            newarr[i] = this.xaxisdata[j].label;\n            j = interval * i;\n        }\n        newarr.push(this.xaxisdata[max].label)\n        this.xarr = newarr;\n    }\n\n    // formatxaxisarr() {\n    //     let formattedarr = [];\n    //     let temp = '';\n\n    //     if(this.xarr) {\n\n    //     if (typeof (this.xarr[0]) == 'string') {\n    //         // treat string\n    //         this.xarr.forEach(element => {\n        \n    //             if (typeof (element) == 'string') {\n    //                 temp = '';\n    //                 temp = element[0] + element[1] + '..'\n    //                 formattedarr.push(temp)\n    //             }\n    //         });\n    //          this.xarr = formattedarr;\n    //     }\n\n    //     if (typeof (this.xarr[0]) == 'number') {\n    //         // treat numerials\n    //         // wrap numbers\n\n    //     }\n    //              }\n    // }\n\n\n    protected initChart(): any {\n        const tooltip = this.toolTip(d3);\n        //RESIZE STEP 2 START\n        this.svg = d3.select(\"#\" + this.componentId)\n            .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight);\n        this.svg.selectAll(\"*\").remove();\n\n        const margin = { top: 40, right: 20, bottom: 30, left: 40 };\n        //RESIZE STEP 2 ENDS HERE\n        const width = +this.svgwidth - margin.left - margin.right;\n        // this.xaxisdata;\n\n        if (this.xinterval) {\n            if (!this.displayfield) {\n                this.setXinterval(width);\n            }\n            if (this.displayfield) {\n                this.setDisplayfieldXinterval(width);\n\n            }\n\n        } else {\n            this.recalculatescale(width);\n        }\n\n        const height = +this.svgheight - margin.top - margin.bottom;\n        const g = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const x = d3.scalePoint()\n            .rangeRound([0, width])\n            .padding(0.1);\n\n        const y = d3.scaleLinear()\n            .rangeRound([height, 0]);\n        let xdomain;\n        if (this.xaxisdata) {\n\n            x.domain(this.xaxisdata.map((d) => {\n\n                if (typeof (d.label) == 'string') {\n                    return d.label;\n                }\n                else {\n                    return parseInt(d.value)\n                }\n            }))\n        }\n        if (this.yaxisdata) {\n            y.domain([0, d3.max(this.yaxisdata, (d) => { return d.value; })]);\n        }\n        //add axis\n        let xaxisbottom = d3.axisBottom(x);\n        if (this.xarr.length > 0) {\n            // if(this.slant) {\n            // this.formatxaxisarr();\n            //  }\n             xaxisbottom.tickValues(this.xarr)\n        }\n        if (this.deviceQueryService.IsDesktop() == true) {\n            if (this.svgwidth <= 400) {\n\n                g.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xaxisbottom\n                        // d3.axisBottom(x)\n                        // .tickValues(this.xarr)\n                    ).\n                    selectAll(\"text\")\n\n                    .attr(\"y\", 0)\n                    .attr(\"x\", 9)\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"transform\", \"rotate(60)\")\n                    .style(\"text-anchor\", \"start\");\n            }\n            else {\n                let bottomaxis = g.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(xaxisbottom)\n\n                if (this.slant) {\n                    // this.formatxaxisarr(); \n\n                    bottomaxis.selectAll(\"text\")\n\n                        .attr(\"cursor\", \"pointer\")\n                        .on(\"mouseover\", (d) => {\n                            return tooltip.style(\"visibility\", \"visible\");\n                        })\n                        .on(\"mousemove\", (d) => {\n                            return tooltip.html(\n                                this.callXaxisTooltip(d))\n                                .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                                .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                        })\n                        .on(\"mouseout\", (d) => {\n                            return tooltip.style(\"visibility\", \"hidden\");\n                        })\n                        .on(\"click\", (d) => {\n                            return tooltip.style(\"visibility\", \"hidden\");\n                        })\n\n\n\n                        .attr(\"y\", 0)\n                        .attr(\"x\", 9)\n                        .attr(\"dy\", \".35em\")\n                        .attr(\"transform\", \"rotate(90)\")\n                        .style(\"text-anchor\", \"start\")\n                        .style(\"font-size\", 10);\n                }\n            }\n        }\n        else {\n            g.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                //   .attr(\"color\", \"grey\")\n                .call(xaxisbottom).\n                selectAll(\"text\")\n                .attr(\"y\", 0)\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\")\n                .attr(\"transform\", \"rotate(60)\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-size\", 10);\n            ;\n        }\n\n        g.append(\"g\")\n            // .attr(\"color\", \"grey\")\n            .call(d3.axisLeft(y).ticks(this.tickscount))\n        // tickSize(0,10));\n        let rawdata = this._data;\n\n\n        // call function to alter legends if displayfield condn satisfy\n        this.alterLegend();\n\n        return {\n            g, x, y, height, width, rawdata\n        }\n        // \n\n    }\n\n\n    protected plotScale(g: any, x: any, y: any, height: any, width: any): void {\n        if (this.vScale) {\n            g.append('g')\n                .attr(\"color\", \"lightgrey\")\n                .attr('transform', 'translate(0,' + height + ')')\n                .call(d3.axisBottom(x).\n                    tickSize(-this.width).tickFormat('')\n                );\n        }\n        if (this.hScale) {\n            g.append('g')\n                .attr(\"color\", \"lightgrey\")\n                .call(d3.axisLeft(y).ticks(this.tickscount)\n                    .tickSize(-width).tickFormat(''));\n        }\n    }\n\n    legendClick(node: any) {\n\n        // const legendNode = JSON.parse(JSON.stringify(node));\n        // delete legendNode.color;\n        // legendNode.data.forEach(element => {\n        //     delete element.legend;\n        // });\n\n        let obj = {};\n        obj[\"label\"] = node.label;\n        let data = [];\n        node.data.forEach(element => {\n            let object = {};\n\n            object[element.legend] = element.value;\n            object[this.xaxisname] = element.label;\n            //   object[element.label] = element.value;\n            data.push(object);\n        });\n        obj[\"data\"] = data;\n        this.onLegendClick.emit(obj);\n\n        // this.onLegendClick.emit(legendNode);\n    }\n\n\n    alterLegend() {\n        this.linelegends = [];\n        if (this.displayfield) {\n\n            this.legends.forEach(element => {\n                if (element.label !== this.displayfield) {\n                    this.linelegends.push(element);\n                }\n            });\n        } else {\n            this.linelegends = this.legends;\n        }\n    }\n\n    callXaxisTooltip(tooltipdata: any) {\n        var obj = {};\n        obj['x-axis'] = tooltipdata;\n        return this.toolTipForBar(obj);\n    }\n}","import { Component, ViewChild, ElementRef, Input, ChangeDetectorRef, OnChanges } from \"@angular/core\";\nimport * as d3 from 'd3';\nimport { AmexioD3BaseLineComponent } from \"./baseline.component\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from \"../services/device.query.service\";\n\n@Component({\n    selector: 'amexio-d3-chart-line',\n    template: `<div  #chartId *ngIf=\"drillableFlag\" #divid (window:resize)=\"validateresize()\"> \n    <table [ngClass]=\"validateData()\"  style=\"width: 100%;\" > \n            <ng-container *ngIf = \"title.length > 0\">\n            <tr><td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td></tr>\n            </ng-container>\n            <tr>\n                <td>\n                    <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                    </svg>            \n                </td>\n            </tr>\n            <tr  *ngIf=\"legend\">\n                <td style=\"display: block; padding: 5px;\">\n                        <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" \n                                            [data]=\"linelegends\" style=\"height:100%;\">\n                        </amexio-d3-legend>\n                </td>\n            \n            </tr>\n    </table>\n    <!-- <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n        </div> -->\n    </div>\n    \n    <!-- {{legends | json}} -->`\n})\nexport class AmexioD3LineComponent extends AmexioD3BaseLineComponent implements PlotCart, OnChanges {\n    @Input('label-color') labelcolor = '';\n    @ViewChild('chartId') chartId: ElementRef;\n    @ViewChild('divid') divid: ElementRef;\n    @ViewChild('drillid') drillid: any;\n    wt: number;\n    rawdata: any;\n    constructor(public deviceQueryService: DeviceQueryService, private cdf: ChangeDetectorRef, public myservice: CommanDataService) {\n        super(deviceQueryService);\n    }\n\n    ngOnInit() {\n        this.wt = this.svgwidth;\n        if (this.level <= 1) {\n            let resp: any\n            if (this.httpmethod && this.httpurl) {\n                this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n                    resp = response;\n                }, (error) => {\n                }, () => {\n                    setTimeout(() => {\n                        this.data = this.getResponseData(resp);\n                        this.plotD3Chart();\n                    }, 0);\n                });\n            } else\n                if (this.data) {\n                    setTimeout(() => {\n                        this.data = this.getResponseData(this.data);\n                        this.plotD3Chart();\n                    }, 0);\n                }\n        }\n    }\n\n\n    ngOnChanges() {\n        if (this.data) {\n            setTimeout(() => {\n                this.data = this.getResponseData(this.data);\n                this.plotD3Chart();\n            }, 0);\n        }\n    }\n\n    validateData() {\n        if (this.data) {\n\n        } else {\n            return \"lmask\"\n        }\n    }\n\n    fetchData(data: any) {\n\n        let requestJson;\n        let key = this.drillabledatakey;\n        let resp: any;\n        if (this.drillabledatakey.length) {\n            let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n            requestJson = drillabledata;\n        }\n        else {\n            requestJson = data;\n        }\n\n        if (this.httpmethod && this.httpurl) {\n            this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n                resp = response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                    this.data = this.getResponseData(resp);\n                    this.drawChart();\n                }, 0);\n            });\n        }\n    }\n\n    drawChart() {\n        setTimeout(() => {\n            this.plotD3Chart();\n        }, 0);\n    }\n\n    //RESIZE STEP 5 STARTS\n    resize() {\n        this.svg.selectAll(\"*\").remove();\n        this.resizeflag = true;\n        if (this.wt) {\n            this.svgwidth = this.wt;\n        } else if (this.chartId) {\n            // this.resizewt = this.chartId.nativeElement.offsetWidth;\n            this.svgwidth = this.chartId.nativeElement.offsetWidth;\n        }\n        this.cdf.detectChanges();\n        this.plotD3Chart();\n    }\n    getResponseData(httpResponse: any) {\n        let responsedata = httpResponse;\n        if (this.datareader != null) {\n            const dr = this.datareader.split('.');\n            for (const ir of dr) {\n                responsedata = responsedata[ir];\n            }\n        } else {\n            responsedata = httpResponse;\n        }\n        return responsedata;\n    }\n\n    plotD3Chart(): void {\n        if (this.resizeflag == false) {\n            //RESIZE STEP 1\n            if (this.wt) {\n                this.svgwidth = this.wt;\n\n            } else if (this.chartId) {\n                this.svgwidth = this.chartId.nativeElement.offsetWidth;\n            }\n            //RESIZE STEP 1 ENDS HERE \n        }\n        const tooltip = this.toolTip(d3);\n\n        const linechart = this.initChart();\n\n        this.rawdata = linechart.rawdata;\n        // this.svgwidth = linechart.width;\n        this.plotScale(linechart.g, linechart.x, linechart.y, linechart.height, linechart.width);\n\n        this.plotLine(linechart.g, linechart.x, linechart.y, linechart.height,\n            linechart.width, [], tooltip, (1));\n          \n        if (this.multiseriesdata) {\n            for (let index = 0; index < this.multiseriesdata.length; index++) {\n                this.plotLine(linechart.g, linechart.x, linechart.y, linechart.height,\n                    linechart.width, this.multiseriesdata[index], tooltip, (index + 1));\n            }\n        }\n          \n\n    }\n\n\n    //RESIZE STEP 4 STARTS\n    validateresize() {\n        setTimeout(() => {\n            if (this.wt) {\n\n            } else {\n                this.resize();\n            }\n        }, 0)\n    }\n    //RESIZE STEP 4 ENDS\n\n    private plotLine(g: any, x: any, y: any, height: any, width: any, data: any, tooltip: any, i: number): void {\n\n        const line = d3.line()\n            .x((d) => { return x(d.label); })\n            .y((d) => { return y(d.value); });\n        const tempcolor = \"black\";\n        g.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", (d) => {\n                if (this.linecolor.length > 0) {\n                    if (this.linecolor[i - 1]) {\n                        return this.linecolor[i - 1];\n                    }\n                    else {\n                        return this.predefinedcolors[i - 1];\n                    }\n                }\n                else if (this.linecolor.length < 1) {\n                    return this.predefinedcolors[i - 1];\n                    //  return tempcolor;\n\n                }\n            })\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", line)\n            // .attr(\"transform\", \"translate(\" + 37 + \",\" + 0 + \")\")\n            ;\n              \n        g.selectAll('dot')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr(\"cx\", (d) => {  return x(d.label); })\n            .attr(\"cy\", (d) => {  return y(d.value); })\n            .attr('r', 2)\n            .attr(\"fill\", (d) => {\n                if (this.linecolor.length > 0) {\n                    if (this.linecolor[i - 1]) {\n                        return this.linecolor[i - 1];\n                    }\n                    else {\n                        return this.predefinedcolors[i - 1];\n                    }\n                }\n                else if (this.linecolor.length < 1) {\n                    //  return tempcolor;\n                    return this.predefinedcolors[i - 1];\n                }\n            })\n            .attr(\"cursor\", \"pointer\")\n            // .attr(\"transform\", \"translate(\" + 37 + \",\" + 0 + \")\")\n            .on(\"mouseover\", (d) => {\n                return tooltip.style(\"visibility\", \"visible\");\n            })\n            .on(\"mousemove\", (d) => {\n                return tooltip.html(\n                    this.callTooltip(d))\n                    .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                    .style(\"left\", (d3.event.pageX + 10) + \"px\");\n            })\n            .on(\"mouseout\", (d) => {\n                return tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (d) => {\n                this.lineChartClick(d);\n                this.fordrillableClick(this, d, event);\n                return tooltip.style(\"visibility\", \"hidden\");\n            });\n\n        //lets plot labels here\n        if (this.labelflag) {\n            g.selectAll('label')\n                .data(data)\n                .enter()\n                .append('text')\n                .style(\"font-weight\", \"bold\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"fill\", (d) => {\n                    // if (this.labelcolor && this.labelcolor.length > 0) {\n                    //   return this.labelcolor;\n                    // } else {\n                    //   return \"black\";\n                    // }\n                    if (this.labelcolor.length > 0) {\n                        return this.labelcolor;\n                    }\n                    else if (this.linecolor.length > 0) {\n                        if (this.linecolor[i - 1]) {\n                            return this.linecolor[i - 1];\n                        }\n                        else {\n                            return this.predefinedcolors[i - 1];\n                        }\n                    }\n                    else if (this.linecolor.length < 1) {\n                        //  return tempcolor;\n                        return this.predefinedcolors[i - 1];\n                    }\n                })\n                .attr(\"x\", (d, i) => {\n                    return x(d.label);\n                })\n                .attr(\"y\", (d, i) => {\n                    return y(d.value) - 10;\n                })\n                .text((d) => {\n                    return d.value;\n                })\n                //   .attr(\"transform\", \"translate(\" + 37 + \",\" + 0 + \")\")\n                .attr(\"cursor\", \"pointer\")\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.callTooltip(d))\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n                    this.lineChartClick(d);\n                    this.fordrillableClick(this, d, event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                });\n        }\n\n    }\n\n    lineChartClick(d: any) {\n        let obj = {};\n        obj[d.legend] = d.value;\n        obj[this.xaxisname] = d.label;\n        this.chartClick(obj);\n    }\n\n    callTooltip(tooltipdata: any) {\n        let obj = {};\n        obj[tooltipdata.legend] = tooltipdata.value;\n        obj[this.xaxisname] = tooltipdata.label;\n        return this.toolTipForBar(obj);\n    }\n\n\n  \n}","import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\n\n@Component({\n  selector: 'amexio-d3-chart-barstack',\n  template: `<div #chartId *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\">\n    <table *ngIf=\"data1.length > 0\" style=\"width: 100%;\">\n            <ng-container *ngIf = \"title.length > 0\">\n        <tr>\n            <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n        </tr>\n            </ng-container>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr *ngIf=\"legend\">\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\"\n                    style=\"height:100%;\">\n                </amexio-d3-legend>\n            </td>\n\n        </tr>\n    </table>\n    <div *ngIf=\"data1.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div>\n</div>`,\n  styles: [``]\n})\nexport class BarstackComponent extends AmexioD3BaseChartComponent implements OnInit {\n  legendArray: any[];\n  maxYValue: number = 0;\n  keyArray: any[];\n  predefinedcolors: any[];\n  legends: any[];\n  charttype: string;\n  data: any = [];\n  datareaderdata: any[];\n  xaxis: any;\n  wt: number;\n  @Input('data') data1: any\n  @Input() barwidth: number = 0;\n  @Input() title: String = \"\";\n  @Input() legend: boolean = true;\n  @Input() color: string[] = [];\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input('yaxis-interval') tickscount: number;\n \n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  httpresponse: any;\n  svg: any;\n  offsetheight: any;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('barstack');\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    if (this.level <= 1) {\n      let res;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          this.httpresponse = response;\n          this.data = this.getResponseData(response);\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.transformData(this.data);\n            this.plotChart();\n          }, 0);\n        });\n      } else if (this.data1) {\n        setTimeout(() => {\n          this.transformData(this.data1);\n          this.plotChart();\n        }, 0);\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData(this.data);\n      this.plotChart();\n    }, 0);\n  }\n\n\n  transformData(data1: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n\n    data1.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n          else if (index == 0) {\n            this.xaxis = innerelement;\n          }\n        });\n      }\n    });\n\n    let tempinnerarray: any[];\n    tempinnerarray = [];\n    data1.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n        });\n        tempinnerarray.push(obj);\n      }\n\n    });\n    this.data = [];\n    tempinnerarray.forEach(element => {\n      this.data.push(element);\n    });\n    let maxY: any = 0;\n    let yaxismaxArray = [];\n    //find max for yaxis\n    this.data.forEach((element) => {\n      for (let [key, value] of Object.entries(element)) {\n\n        this.keyArray.forEach(key1 => {\n          if (key == key1) {\n            maxY = maxY + value;\n          }\n        });//keyarray loop ends here\n\n      }//for ends here\n      yaxismaxArray.push(maxY);\n      maxY = 0;\n    });// foreach ends\n    let tempLarge = 0, i;\n    for (i = 0; i < yaxismaxArray.length; i++) {\n      if (yaxismaxArray[i] > tempLarge) {\n        this.maxYValue = yaxismaxArray[i];\n      }//if ends\n    }// for ends\n\n    this.legends = []\n    this.keyArray.forEach((element, index) => {\n      const legenddata = this.legendArray[element];\n      if (this.color.length > 0) {\n        let object = { 'label': element, 'color': this.color[index], 'data': legenddata.data };\n        this.legends.push(object);\n      } else {\n        let object = { 'label': element, 'color': this.predefinedcolors[index], 'data': legenddata.data };\n        this.legends.push(object);\n      }\n    });\n  }\n\n  plotChart() {\n    const tooltip = this.toolTip(d3);\n    let margin = { top: 30, right: 30, bottom: 90, left: 60 };\n    let colors = this.predefinedcolors;\n    if (this.device.IsDesktop()) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n    }\n    //this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    let data;\n    data = this.data;\n    let keysetarray: string[] = [];\n    if (this.httpmethod && this.httpurl) {\n      for (let [key, value] of Object.entries(this.data[0])) {\n        keysetarray.push(key);\n      }\n      this.keyArray = keysetarray;\n      this.keyArray.splice(0, 1);\n    }\n \n\n    let series = d3.stack().keys(this.keyArray)\n      .offset(d3.stackOffsetDiverging)\n      (this.data);\n\n     let width = this.svgwidth - margin.left - margin.right;\n    let height\n    //  = this.svgheight - margin.bottom - margin.top;\n    this.svg = d3.select(\"#\" + this.componentId)\n                 .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n                \n    if (this.device.IsDesktop()) {\n\n      this.offsetheight = this.chartId.nativeElement.offsetHeight\n      //  - margin.bottom -margin.top;\n      height = this.offsetheight;\n    }\n    else {\n      height = this.chartId.nativeElement.offsetHeight - 10;\n    }\n\n    let x = d3.scaleBand()\n      .domain(data.map((d) => {\n        return d[Object.keys(d)[0]];\n      }))\n      .rangeRound([margin.left, this.svgwidth-margin.right])\n      .padding(0.35);\n\n    let y = d3.scaleLinear()\n      .domain([d3.min(this.stackMin(series)),\n      this.maxYValue\n        // d3.max(this.stackMax(series))\n      ])\n      .rangeRound([height - margin.bottom, margin.top]);\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n          .call(d3.axisBottom(x)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      } else {\n        this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n        .call(d3.axisBottom(x));\n      }\n\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n        .call(d3.axisBottom(x)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n    }\n\n    this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      .call(d3.axisLeft(y).ticks(this.tickscount));\n\n    this.plotLine(this.svg, x, y, height, width, margin.left)\n\n    let svgRect = this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(series)\n      .enter().append(\"g\")\n      .attr(\"fill\", (d, index) => {\n        if (this.color.length > 0) {\n          if (this.color[index]) {\n            return this.color[index];\n          }\n          else {\n            return colors[index];\n          }\n        }\n        else {\n          return colors[index];\n        }\n      })\n      .selectAll(\"rect\")\n      .data((d) => {\n        return d;\n      })\n\n    svgRect.enter().append(\"rect\")\n      .attr(\"width\", x.bandwidth()).attr('id', (d, i) => {\n        return d.data[i];\n      })\n      .attr(\"x\", (d) => {\n        return x(+d.data[Object.keys(d.data)[0]]);\n      })\n      .attr(\"y\", (d, index) => {\n        return y(d[1]);\n      })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"height\", (d, index) => {\n        return y(d[0]) - y(d[1]);\n      })\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d: any) => {\n        return tooltip.html(this.setKey(d))\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.setBarClickText(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        // this.chartClick(d);\n      });\n    // -------------------------\n    if (this.labelflag) {\n      svgRect.enter()\n        .append(\"text\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"font-size\", \"1vw\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"x\", (d) => {\n          return x(+d.data[Object.keys(d.data)[0]]) + x.bandwidth() / 2;\n        })\n        .attr(\"y\", (d, index) => {\n          return y(d[1]) + 20;\n        })\n        .text((d) => {\n          if((d[Object.keys(d)[1]] - d[Object.keys(d)[0]]) > 0) {\n          return d[Object.keys(d)[1]] - d[Object.keys(d)[0]];\n          }\n        })\n        .attr(\"cursor\", \"pointer\")\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d: any) => {\n          return tooltip.html(this.setKey(d))\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.setBarClickText(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n          // this.chartClick(d);\n        });\n    }\n  }\n\n  stackMin(serie) {\n    return d3.min(serie, (d) => { return d[0]; });\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n      if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotChart();\n  }\n\n  plotLine(svg, x, y, height, width, m) {\n    if (this.hScale) {\n      svg.append('g')\n        .attr(\"transform\", \"translate(\" + m + \",0)\")\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y).ticks(this.tickscount)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n  legendClick(event: any) {\n    let obj = {};\n    obj[\"label\"] = event.label;\n    let data = [];\n    event.data.forEach(element => {\n      let object = {};\n      object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n  }\n\n  setKey(d: any) {\n    let diff = d[0] - d[1];\n    if (diff < 0) {\n      diff = (diff * (-1));\n    }\n    for (let [key, value] of Object.entries(d.data)) {\n      if (value == diff) {\n        let object = {};\n        object[key] = value;\n        object[this.xaxis] = d.data[Object.keys(d.data)[0]];\n        return (this.toolTipForBar(object));\n      }\n    }\n  }\n\n  setBarClickText(d: any) {\n    let diff = d[0] - d[1];\n    if (diff < 0) {\n      diff = (diff * (-1));\n    }\n    let object = {};\n    for (let [key, value] of Object.entries(d.data)) {\n      if (value == diff) {\n        object[key] = value;\n        object[this.xaxis] = d.data[Object.keys(d.data)[0]];\n      }\n    }\n    this.chartClick(object);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n}\n","\nimport { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { CommanDataService } from '../services/comman.data.service'\nimport { DeviceQueryService } from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-multiseries',\n  template: `<div  #chartId *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\"> \n<table *ngIf=\"data.length > 0\"  style=\"width: 100%;\">\n    <tr *ngIf = \"title.length > 0\" >\n        <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n    </tr>\n    <tr>\n        <td>\n            <svg [attr.height]=\"height\" [attr.width]=\"width\" [attr.id]=\"componentId\">\n            </svg>\n        </td>\n    </tr>\n    <tr *ngIf=\"legend\">\n        <td style=\"display: block; padding: 5px;\">\n            <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n        </td>\n    </tr>\n</table>\n<div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div>\n</div>\n\n\n`,\n  styles: [``]\n})\nexport class GroupbarComponent extends AmexioD3BaseChartComponent implements OnInit {\n\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  @Input('data') data: any = [];\n  @Input() legend: boolean = true;\n  @Input() barwidth: number = 0;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input('yaxis-interval') tickscount: number;\n  @Input('show-zero-values') showzeroflag: boolean = true;\n  groupbarchartArray: any[] = [];\n  legendArray: any;\n  xaxisData: any;\n  keyArray: any;\n  legends: any;\n  years: any;\n  urllegendArray = [];\n  svg: any;\n  wt: any;\n  defualtColors: any = [];\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('multibar');\n    this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    if (this.level <= 1) {\n      let res: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          res = response;\n\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n\n            this.data = this.getResponseData(res);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n\n        });\n\n      } else if (this.data) {\n\n\n        setTimeout(() => {\n          this.data = this.getResponseData(this.data);\n          this.initializeData();\n          this.plotD3Chart();\n        }, 0);\n\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n\n      this.initializeData();\n      this.plotD3Chart();\n\n    }, 0);\n\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  plotD3Chart(): void {\n    this.convertToJSON();\n    this.plotGroupBarChart();\n    this.transformData(this.data);\n  }\n\n  private plotGroupBarChart(): void {\n    const tooltip = this.toolTip(d3);\n    this.defualtColors = this.predefinedcolors;\n    // this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    if (this.resizeflag == false) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n    }\n    const margin = { top: 20, right: 20, bottom: 50, left: 40 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    const x0 = d3.scaleBand()\n      .rangeRound([0, width])\n      .padding(0.2);\n\n    const x1 = d3.scaleBand().padding(0.1);\n\n    const y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    //setting x and y domains\n    this.years = this.groupbarchartArray.map((d) => { return d.labels; });\n    let label = this.groupbarchartArray[0].values.map((d) => { return d.label; });\n\n    x0.domain(this.years);\n    x1.domain(label).rangeRound([0, x0.bandwidth()]);\n    y.domain([0, d3.max(this.groupbarchartArray, (labels) => { return d3.max(labels.values, (d) => { return d.value; }); })]);\n\n    //dynamic barwidth\n    if (this.barwidth > 0) {\n      this.barwidth = this.barwidth;\n    }\n    else {\n      this.barwidth = x0.bandwidth;\n    }\n\n    // add x axis to svg\n\n\n\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x0)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      } else {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x0))\n      }\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x0)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n\n    }\n\n\n\n    //add y axis to svg\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(y)\n        .ticks(10).ticks(this.tickscount))\n\n    this.plotLine(this.svg, y, height, width);\n\n    // svg.select('.y').transition().duration(500).delay(1300).style('opacity', '1');\n    //adding bars\n \n    let slice = this.svg.selectAll(\".slice\")\n      .data(this.groupbarchartArray)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", (d) => { \n         let flag = false;\n        (d.values).forEach((element,index) => {\n          //splice 0 \n          if(element.value && (element.value < 1)) {\n          d.values.splice(0,index);\n          } \n        });\n        return \"translate(\" + x0(d.labels) + \",0)\"; });\n\n     slice.selectAll(\"rect\")\n      .data((d) => { return d.values; })\n      .enter().\n      append(\"rect\")\n      .attr(\"width\", x1.bandwidth\n    )\n      .attr(\"x\", (d) => {\n        return x1(d.label)\n      })\n      .style(\"fill\", (d, index) => {\n        if (this.colors.length > 0) {\n          if (this.colors[index]) {\n            return this.colors[index];\n          }\n          else {\n            return this.defualtColors[index];\n          }\n        }\n        else {\n          return this.defualtColors[index];\n        }\n       })\n      .attr(\"y\", (d) => { return y(0); })\n      .attr(\"height\", (d) => { return height - y(0); })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.setKey(d))\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      }).on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.groupbarClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n       })\n\n    // -------------------------------------------------------\n    if (this.labelflag) {\n      slice.selectAll(\"text\")\n        .data((d) => { return d.values; })\n        .enter().append(\"text\")\n        .attr(\"width\", x1.bandwidth)\n        .attr(\"x\", (d) => {\n          return x1(d.label) + x1.bandwidth() / 2\n        })\n        .attr(\"y\", (d) => { return y(d.value); })\n        .attr(\"height\", (d) => { return height - y(0); })\n        .style(\"font-weight\", \"bold\")\n        .style(\"font-size\", \"1vw\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .text((d) => {\n          // if((d.value > 0) ) {\n          // return d.value;\n          // }\n          if(this.showzeroflag) {\n          return d.value;\n          }\n          else if(!this.showzeroflag) {\n            if(d.value > 0) {\n              return d.value;\n            }\n          }\n        })\n        .attr(\"cursor\", \"pointer\")\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.setKey(d)\n            //  this.toolTipContent(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        }).on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.groupbarClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n          // this.chartClick(d);\n        })\n    }\n    slice.selectAll(\"rect\")\n      .attr(\"y\", (d) => {\n        return y(d.value);\n      })\n      .attr(\"height\", (d) => { return height - y(d.value); });\n  }\n\n  groupbarClick(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    this.chartClick(object);\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n      if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotGroupBarChart();\n  }\n\n  legendClick(event: any) {\n    let obj = {};\n    obj[\"label\"] = event.label;\n    let data = [];\n    event.data.forEach(element => {\n      let object = {};\n      object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj); \n  }\n\n  //2d array to json conversion\n  convertToJSON() {\n    let groupChartObj = { \"labels\": \"\", values: [] };\n    let firstRowOfData = this.data[0];\n    this.xaxisData = this.data[0][0];\n\n    for (let i = 1; i < this.data.length; i++) {\n      let multiSeriesArray = [];\n      let valueOfJ: any;\n\n      for (let j = 1; j < this.data[i].length; j++) {\n\n        valueOfJ = this.data[i][0];\n        let singleBarObj = {};\n        singleBarObj[\"value\"] = this.data[i][j];\n        singleBarObj[\"label\"] = firstRowOfData[j];\n        singleBarObj[\"xaxis\"] = this.data[i][0];\n        multiSeriesArray.push(singleBarObj);\n      }\n      if (multiSeriesArray.length) {\n        groupChartObj[\"values\"] = multiSeriesArray;\n        let newLabelsValues: any = valueOfJ;\n        let newGroupDataObj = Object.assign({}, groupChartObj);\n        newGroupDataObj['labels'] = newLabelsValues + '';\n        this.groupbarchartArray.push(newGroupDataObj);\n      }\n    }\n\n  }\n\n\n  transformto2dArray() {\n    let i = 0\n    let result = [];\n    result.push(\"years\");\n    this.data.forEach((element, i) => {\n      if (i == 0) {\n        element.values.forEach(element2 => {\n          result.push(element2.label);\n\n        });\n      }\n\n    });\n    this.urllegendArray.push(result);\n\n    let temparray = [];\n    this.data.forEach(element => {\n      temparray = [];\n      let values: any;\n      let year = element.labels;\n      temparray.push(year);\n      element.values.forEach(element2 => {\n        values = element2.value;\n        temparray.push(values);\n      });\n      this.urllegendArray.push(temparray);\n    })\n  }\n\n  transformData(data: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n    data.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n        });\n      }\n    });\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n\n        });\n      }\n    });\n\n    this.legends = [];\n    this.keyArray.forEach((element, index) => {\n      const legenddata = this.legendArray[element];\n      let object;\n      if (this.colors.length > 0) {\n        object = { 'label': element, 'color': this.colors[index], 'data': legenddata.data };\n       } else {\n         object = { 'label': element, 'color': this.predefinedcolors[index], 'data': legenddata.data };\n       }\n      this.legends.push(object);\n    });\n  }\n\n  setKey(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    return (this.toolTipForBar(object));\n  }\n\n  plotLine(g, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport * as d3 from 'd3';\nimport { stringify } from \"@angular/core/src/render3/util\";\nimport { DeviceQueryService } from '../services/device.query.service';\n@Component({\n  selector: 'amexio-d3-combochart',\n  template: ` \n<div #chartId *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\">\n    <table *ngIf=\"data.length > 0\" style=\"width: 100%;\">\n      <tr *ngIf = \"title.length > 0\">\n          <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n      </tr>\n      <tr>\n          <td>\n              <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n              </svg>\n          </td>\n      </tr>\n      <tr *ngIf=\"legend\">\n          <td style=\"display: block; padding: 5px;\">\n              <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\" style=\"height:100%;\">\n              </amexio-d3-legend> \n          </td>\n      </tr>\n    </table>\n    <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div>\n    </div>`,\n  styles: [``]\n})\nexport class CombochartComponent extends AmexioD3BaseChartComponent implements PlotCart {\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input('line-color') lineColor: string = \"black\";\n  @Input() label: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() barwidth: number = 0;\n  //   @Input('line-data-index') lineInput: any;\n  @Input('line-data-index') lineInput: any[] = [];\n  @Input('bar-data-index') barInput: any[] = [];\n  @Input('yaxis-interval') tickscount: number;\n  @Input('show-zero-values') showzeroflag: boolean = true;\n\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  simpleComboFlag: boolean = false;\n  completeconverteddata: any[] = [];\n  simpleCombodata: any[] = [];\n  firstrow: any[];\n  years: any;\n  data: any;\n  svg: any;\n  totalColumns: number;\n  groupbarchartArray: any[] = [];\n  highercolorindex: number = 0;\n  legendcolorindex: any;\n  xaxisData: any;\n  colorflag: boolean = false;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  object: any;\n  legendArray: any[] = [];\n  httpresponse: any;\n  offsetheight: any;\n  lineRange: any;\n  legends: any[] = [];\n\n  totalcolumns\n  sc1: boolean;\n  sc2: boolean;\n  sc2barflag: boolean;\n  sc3: boolean;\n  sc4: boolean;\n  LineArray: any = [];\n  outputData: any = [];\n  lineflag: boolean;\n  higherdot1colorindex = 0;\n  wt: number;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('combochart');\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n          this.httpresponse = response;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.transformData()\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n        });\n\n      } else if (this.data) {\n        setTimeout(() => {\n          this.data = this.getResponseData(this.data);\n          this.transformData()\n          this.initializeData();\n          this.plotD3Chart();\n        }, 0);\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          // this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData()\n      this.initializeData();\n      this.plotD3Chart();\n    }, 0);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  transformData() {\n    this.formDatastructure();\n    this.tranasforsimplejson();\n  }\n\n  formDatastructure() {\n\n    // for line\n    //call createjson() for complete data for line\n    this.lineflag = true;\n    this.createjson(this.data);\n\n    //validate scenarios\n    //validate scenario1: bar + line + data\n    if ((this.barInput.length > 0) && (this.lineInput.length > 0) &&\n      (this.data[0].length > 2)) {\n      this.sc1 = true;\n      this.createData1(this.barInput, this.data);\n    }\n    //validate scenario2: line + data\n    //validate scenario2.1 line + data columns only two then only line will be plot\n    else if ((this.lineInput.length > 0) &&\n      //##get it checked\n      (this.data[0].length > 1)) {\n      this.sc2 = true;\n      //decide whether only line will be plot or bar also\n\n      //chk if data[0] has any extra column leaving lineinput array\n      let barflag: boolean;\n      //if so set sc2barflag\n      this.data[0].forEach(column => {\n        this.lineInput.forEach(linename => {\n          if (column !== linename) {\n            this.sc2barflag = true;\n            // u can plot bar now\n          }\n        });\n      });\n\n      this.createData1(null, this.data);\n\n      //chk if sc2barflag is set or reset\n      if (this.sc2barflag == true) {\n        //plot bar  + line\n\n      } else {\n        // plot only line\n      }\n\n    }//else if of sc2 ends\n\n    //validate scenario3: bar + data\n    else if ((this.barInput.length > 0) && (this.data[0].length > 1)) {\n      this.sc3 = true;\n      this.createData1(this.barInput, this.data);\n    }\n\n    //validate scenario4: data\n    else if ((this.barInput.length < 1) && (this.lineInput.length < 1) && this.data[0].length > 1) {\n      this.sc4 = true;\n      this.createData1(null, this.data);\n    }\n  }\n\n  createData1(inpdata: any[], fulldata: any[]) {\n    let linearr = [];\n    this.lineInput.forEach(element => {\n      linearr.push(element.column);\n    });\n    this.firstrow = this.data[0]\n\n    let dummyArray = [];\n    dummyArray.push(0);\n    fulldata.forEach((record: any[], index: any) => {\n      if (index === 0) {\n        // THIS LOGIC IS USED FOR FINDING INDEXS AND ADD INTO dummyArray ARRAY\n        record.forEach((innerObject: any, innerIndex: any) => {\n          //validates scenario1 and 3\n          if (this.sc1 == true || this.sc3 == true) {\n            this.barInput.forEach((elementOfInputData: any) => {\n              //aja\n              if (innerObject === elementOfInputData.column) {\n                //dummyarray has index stack\n                dummyArray.push(innerIndex);\n              }\n            });\n          }//sc1 and sc3 validation done\n          //validates scenario 2\n          if (this.sc2 == true) {\n\n            if (this.sc2barflag == true) {\n\n              this.lineInput.forEach((elementOfLineData: any) => {\n\n                if ((innerObject !== elementOfLineData.column) && (innerIndex !== 0)) {\n                  //dummyarray has index stack\n                  // dummyArray.forEach(dummyelement => {\n\n                  //   if(dummyelement !== innerIndex) {\n                  // if ( (linearr.includes(innerObject) == false)) {\n                  linearr.includes(innerObject);\n                  if (linearr.includes(innerObject) == false) {\n                    if (dummyArray.includes(innerIndex)) {\n\n                    } else {\n                      dummyArray.push(innerIndex);\n                      return;\n                    }\n                  }  // }\n                  //   }\n                  // });\n                }\n              });\n            }\n          }\n        });\n        //validates scenario 4\n        if (this.sc4 == true) {\n          // chk if barflag is set\n          let columns = this.data[0].length;\n          if (columns > 1) {\n            dummyArray.push(1);\n          }\n        }\n\n        // dummyArray.push(0);\n        let firstArray = [];\n        // FOR FIRST RECORD\n        dummyArray.forEach((object: any, dummyIndex: any) => {\n          firstArray.push(record[object]);\n        });\n        this.outputData.push(firstArray);\n\n      } else {\n        let newData = [];\n        record.forEach((innerObject: any, innerIndex: any) => {\n          dummyArray.forEach((object: any, dummyIndex: any) => {\n            if (innerIndex === object) {\n              newData.push(innerObject);\n            }\n          });\n        });\n        this.outputData.push(newData);\n      }\n    });\n\n    this.createjson(this.outputData);\n    // this.formLegendData(this.outputData);\n  }\n\n  createjson(arraydata: any[]) {\n    let groupChartObj = { \"labels\": \"\", values: [] };\n\n    this.groupbarchartArray = [];\n    let firstRowOfData = arraydata[0];\n    this.xaxisData = this.data[0][0];\n\n    for (let i = 1; i < arraydata.length; i++) {\n      let multiSeriesArray = [];\n      let valueOfJ: any;\n      for (let j = 1; j < arraydata[i].length; j++) {\n        valueOfJ = arraydata[i][0];\n        let singleBarObj = {};\n        singleBarObj[\"value\"] = arraydata[i][j];\n        singleBarObj[\"label\"] = firstRowOfData[j];\n        singleBarObj[\"xaxis\"] = arraydata[i][0];\n        singleBarObj;\n        multiSeriesArray.push(singleBarObj);\n      }\n      if (multiSeriesArray.length) {\n        groupChartObj[\"values\"] = multiSeriesArray;\n        let newLabelsValues: any = valueOfJ;\n        let newGroupDataObj = Object.assign({}, groupChartObj);\n        newGroupDataObj['labels'] = newLabelsValues + '';\n        this.groupbarchartArray.push(newGroupDataObj);\n      }\n    }\n    if (this.lineflag) {\n\n      this.groupbarchartArray;\n\n      this.LineArray = this.groupbarchartArray;\n    }\n\n    else {\n      this.groupbarchartArray = [];\n\n      let firstRowOfData = arraydata[0];\n      // this.xaxisData = this.data[0][0];\n\n      for (let i = 1; i < arraydata.length; i++) {\n        let multiSeriesArray = [];\n        let valueOfJ: any;\n        for (let j = 1; j < arraydata[i].length; j++) {\n          valueOfJ = arraydata[i][0];\n          let singleBarObj = {};\n          singleBarObj[\"value\"] = arraydata[i][j];\n          singleBarObj[\"label\"] = firstRowOfData[j];\n          singleBarObj[\"xaxis\"] = arraydata[i][0];\n          singleBarObj;\n          multiSeriesArray.push(singleBarObj);\n        }\n        if (multiSeriesArray.length) {\n          groupChartObj[\"values\"] = multiSeriesArray;\n          let newLabelsValues: any = valueOfJ;\n          let newGroupDataObj = Object.assign({}, groupChartObj);\n          newGroupDataObj['labels'] = newLabelsValues + '';\n          this.groupbarchartArray.push(newGroupDataObj);\n        }\n      }\n      this.groupbarchartArray;\n    }\n\n  }\n\n  plotD3Chart() {\n    //plot multiseries chart\n    const tooltip = this.toolTip(d3);\n    let colors = this.predefinedcolors;\n    if (this.resizeflag == false) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n    }\n    const margin = { top: 20, right: 20, bottom: 50, left: 40 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    const x0 = d3.scaleBand()\n      .rangeRound([0, width])\n      .padding(0.2);\n\n    const x1 = d3.scaleBand().padding(0.1);\n\n    const y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    //setting x and y domains\n    this.years = this.groupbarchartArray.map((d) => { return d.labels; });\n    let label = this.groupbarchartArray[0].values.map((d) => { return d.label; });\n\n    x0.domain(this.years);\n    x1.domain(label).rangeRound([0, x0.bandwidth()]);\n    y.domain([0, d3.max(this.groupbarchartArray, (labels) => { return d3.max(labels.values, (d) => { return d.value; }); })]);\n\n    //dynamic barwidth\n    if (this.barwidth > 0) {\n      this.barwidth = this.barwidth;\n    }\n    else {\n      this.barwidth = x0.bandwidth;\n    }\n\n    // add x axis to svg\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x0)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      } else {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x0))\n      }\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x0)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n    }\n\n    //add y axis to svg\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(y)\n        .ticks(this.tickscount))\n\n    this.plotLineForMultiSeries(this.svg, y, height, width);\n    //adding bars\n    let slice = this.svg.selectAll(\".slice\")\n      .data(this.groupbarchartArray)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", (d) => { return \"translate(\" + x0(d.labels) + \",0)\"; });\n\n\n    slice.selectAll(\"rect\")\n      .data((d) => { return d.values; })\n      .enter().append(\"rect\")\n      .attr(\"width\", x1.bandwidth)\n      .attr(\"x\", (d) => {\n        return x1(d.label)\n      })\n      .style(\"fill\", (d, index) => {\n        this.higherdot1colorindex = index;\n        this.legendcolorindex = index;\n        return colors[index]\n      })\n      .attr(\"y\", (d, ind) => { return y(d.value); })\n      .attr(\"height\", (d, ind) => {\n        return height - y(d.value);\n      })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.setKey(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      }).on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.groupbarClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n\n    // -------------------------------------------------------\n    //bar label\n    // if (this.labelflag) {\n    slice.selectAll(\"text\")\n      .data((d) => { return d.values; })\n      .enter().append(\"text\")\n      .attr(\"opacity\",\n        (d) => {\n          let visibility: boolean = false;\n\n          if (this.barInput.length > 0) {\n            this.barInput.forEach((barname: any) => {\n              if ((barname.column == d.label) && (barname.label == true)) {\n                visibility = true;\n                return;\n              }\n            });\n\n            if (visibility) {\n              return 1\n            } else {\n              return 0\n            }\n          }// outer if \n          // validation of scenario4\n          else if ((this.sc4 == true) && (this.label == true)) {\n            return 1\n          }\n\n          else {\n            return 0;\n          }\n        }\n      )\n      .attr(\"width\", x1.bandwidth)\n      .attr(\"x\", (d) => {\n        return x1(d.label) + x1.bandwidth() / 2\n      })\n      .attr(\"y\", (d) => { return y(d.value); })\n      .attr(\"height\", (d) => { return height - y(0); })\n      .style(\"font-weight\", \"bold\")\n      .style(\"font-size\", \"1vw\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", (d) => {\n        if (this.labelcolor.length > 0) {\n          return this.labelcolor;\n        } else {\n          return \"black\";\n        }\n      })//bar label\n      .text((d) => {\n        if(this.showzeroflag) {\n          return d.value;\n        }\n        else if(!this.showzeroflag) {\n          if(d.value > 0) {\n            return d.value;\n          }\n        }\n        // return d.value;\n      })\n      //bar label click logic\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.setKey(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      }).on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.groupbarClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n    // }\n    slice.selectAll(\"rect\")\n      .attr(\"y\", (d) => {\n        return y(d.value);\n      })\n      .attr(\"height\", (d) => { return height - y(d.value); });\n\n    // ------------------------------------------------------------------\n    //sigle / multi line code starts here\n    //code here fr multi line\n    let i;\n    // let lineName;\n    let slice1 = this.svg.selectAll(\".slice\")\n      .data(this.transformeddata)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n    this.higherdot1colorindex++\n    this.lineInput.forEach(element => {\n      if (element.color) {\n\n      }\n      else {\n        element[\"color\"] = colors[this.higherdot1colorindex];\n        this.higherdot1colorindex++;\n      }\n    });\n\n    //line validation for scenario 1 and 2\n    if (this.lineInput.length > 0) {\n      for (i = 0; i < this.lineInput.length; i++) {\n        let colorincrementer = 1;\n        let lineName = this.lineInput[i];\n        let valueline = d3.line()\n          .x((d) => {\n            return x0(d[Object.keys(d)[0]]);\n          })\n          .y((d) => { return y(d[lineName.column]); });\n\n        let shift = margin.left + x1.bandwidth() / 2;\n\n        slice1.append(\"path\")\n          .data([this.transformeddata])\n          .attr(\"fill\", \"none\")\n          .style(\"stroke\",\n            (d) => {\n              if (lineName.color) {\n                return lineName.color;\n              }\n            }\n          )\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"transform\", \"translate( \" + x1.bandwidth() / 2 + \", 0 )\")\n          .attr(\"d\", valueline);\n        // points1\n        let dotslice = slice1.selectAll(\"dot\")\n          .data(this.transformeddata)\n          .enter()\n\n          .append(\"circle\")\n          // .merge(points1)\n          .attr(\"class\", \"point1\")\n          .attr(\"cursor\", \"pointer\")\n          .style(\"fill\",\n            (d) => {\n              if (lineName.color) {\n                return lineName.color\n              }\n\n            }\n          )\n          .attr(\"cx\", (d) => {\n            return x0(d[Object.keys(d)[0]]);\n          })\n          .attr(\"cy\", (d) => {\n            return y(d[lineName.column]);\n          })\n          .attr(\"r\", (d) => { return 5; })\n          .attr(\"transform\", \"translate( \" + x1.bandwidth() / 2 + \", 0 )\")\n          .on(\"mouseover\", (d) => {\n            return tooltip.style(\"visibility\", \"visible\");\n          })\n          .on(\"mousemove\", (d) => {\n            return tooltip.html(\n              this.formTooltipLineData(d, lineName, false))\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n          })\n          .on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n          .on(\"click\", (d) => {\n            this.onComboLineClick(d, lineName, false);\n            this.fordrillableClick(this, d, event);\n            return tooltip.style(\"visibility\", \"hidden\");\n          });\n\n        // }\n        // \n      }// line code ends\n\n    }//lineinput if condition ends here\n    //scenario 4 validation for line assumption\n    else if ((this.sc4 == true) && (this.data[0].length > 2)) {\n\n      //  lineName = this.lineInput[i];\n      let valueline = d3.line()\n        // valueline.data(this.completeconverteddata)\n        .x((d) => {\n          return x0(d[Object.keys(d)[0]]);\n          //  return x1(d[Object.keys(d)[0]]);\n        })\n        .y((d) => {\n          return y(\n            d[Object.keys(d)[2]]\n            // d[lineName]\n          );\n        });\n\n      let shift = margin.left + x1.bandwidth() / 2;\n      slice1.append(\"path\")\n        .data([this.transformeddata])\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", (d) => {\n          if (this.lineColor !== \"black\") {\n            return this.lineColor;\n          }\n          else {\n            return colors[2];\n          }\n        })\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"transform\", \"translate( \" + x1.bandwidth() / 2 + \", 0 )\")\n        .attr(\"d\", valueline);\n\n      // points1\n      slice1.selectAll(\"dot\")\n        .data(this.transformeddata).enter().append(\"circle\")\n        // .merge(points1)\n        .attr(\"class\", \"point1\")\n        .attr(\"cursor\", \"pointer\")\n        .style(\"stroke\", (d) => {\n          if (this.lineColor !== \"black\") {\n            return this.lineColor;\n          }\n          else {\n            return colors[2];\n          }\n        })\n        .style(\"fill\", (d) => {\n          if (this.lineColor !== \"black\") {\n            return this.lineColor;\n          }\n          else {\n            return colors[2]\n          }\n        })\n        .attr(\"cx\", (d) => {\n          return x0(d[Object.keys(d)[0]]);\n        })\n        .attr(\"cy\", (d) => {\n          return y(\n            d[Object.keys(d)[2]]\n            // d[lineName]\n          );\n        })\n        .attr(\"r\", (d) => { return 5; })\n        .attr(\"transform\", \"translate( \" + x1.bandwidth() / 2 + \", 0 )\")\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipLineData(d, null, true))\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.onComboLineClick(d, null, true);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n    }\n\n    //line label validation for scenario 1 and 2\n    if (this.lineInput.length > 0) {\n      //iteration on lineinput\n      let labelpostoggle = false;\n      for (i = 0; i < this.lineInput.length; i++) {\n        let lineName1 = this.lineInput[i];\n        if (lineName1.label) {\n          if (lineName1.label == true) {\n            slice1.selectAll(\"labels\")\n              .data(this.transformeddata)\n              .enter().append(\"text\")\n              .style(\"font-weight\", \"bold\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"fill\", (d) => {\n                if (lineName1.labelcolor) {\n                  return lineName1.labelcolor;\n                } else {\n                  return \"black\";\n                }\n              })\n              .attr(\"x\", (d) => {\n                return x0(d[Object.keys(d)[0]]);\n              })\n              .attr(\"y\", (d) => {\n                return y(d[lineName1.column])\n\n              })\n              .text((d) => {\n                return d[lineName1.column];\n                // d[lineName];\n              })\n              .attr(\"transform\", \"translate( \" +\n                // margin.left\n                x1.bandwidth() / 2\n                // shift\n                + \", 19 )\")\n              //line label click logic starts here\n              .attr(\"cursor\", \"pointer\")\n              .on(\"mouseover\", (d) => {\n                return tooltip.style(\"visibility\", \"visible\");\n              })\n              .on(\"mousemove\", (d) => {\n                return tooltip.html(\n                  this.formTooltipLineData(d, lineName1, false))\n                  .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                  .style(\"left\", (d3.event.pageX + 10) + \"px\");\n              })\n              .on(\"mouseout\", (d) => {\n                return tooltip.style(\"visibility\", \"hidden\");\n              })\n              .on(\"click\", (d) => {\n                this.onComboLineClick(d, lineName1, false);\n                this.fordrillableClick(this, d, event);\n                return tooltip.style(\"visibility\", \"hidden\");\n              });\n\n          }\n        }\n\n      }\n\n    }\n\n    //line label validation for scenario 4\n    else if ((this.sc4 == true) && (this.data[0].length > 2) && (this.label == true)) {\n      //trial line label for 4th scenario\n      slice1.selectAll(\"labels\")\n        .data(this.transformeddata)\n        .enter().append(\"text\")\n        .style(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"x\", (d) => {\n          return x0(d[Object.keys(d)[0]]);\n        })\n        .attr(\"y\", (d) => {\n\n          return y(\n            d[Object.keys(d)[2]]\n            // d[lineName]\n          )\n          //  + 50;\n        })\n        .text((d) => {\n          return d[Object.keys(d)[2]];\n          // d[lineName];\n        })\n        .attr(\"transform\", \"translate( \" +\n          // margin.left\n          x1.bandwidth() / 2\n          // shift\n          + \", 19 )\")\n        .attr(\"cursor\", \"pointer\")\n        // line label click logic\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipLineData(d, null, true))\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.onComboLineClick(d, null, true);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n\n    }\n\n    this.formLegendData(this.outputData)\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  setKey(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    return (this.toolTipForBar(object));\n  }\n\n  finMaxLineValue() {\n    let lineValues = [];\n    this.data.forEach((element) => {\n      for (let [key, value] of Object.entries(element)) {\n        this.lineInput.forEach((line) => {\n          if (line == key) {\n            lineValues.push(value);\n          }\n        });\n      }\n    });\n\n    let max = 0, j;\n\n    for (j = 0; j < lineValues.length; j++) {\n      if (lineValues[j] > max) {\n        max = lineValues[j];\n      }\n    }\n    this.lineRange = max;\n  }\n\n  groupbarClick(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    this.chartClick(object);\n  }\n\n  plotLineForMultiSeries(g, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n      if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotD3Chart();\n  }\n\n  tranasforsimplejson() {\n    this.transformeddata = [];\n    this.keyArray = this.data[0];\n    this.data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends\n  }\n\n  formTooltipLineData(data: any, line: any, flag: boolean) {\n    let object = {};\n    for (let [key, value] of Object.entries(data)) {\n      //flag is considered true for forth scenario\n      if (flag == true) {\n        if (key == this.data[0][2]) {\n          object[key] = value;\n        }\n      }// if foe true flag ends here\n      else {\n        if (key == line.column) {\n          object[key] = value;\n        }\n      }//else for false flag ends here\n\n    }\n\n\n    return this.toolTipForBar(object);\n  }\n\n  onComboLineClick(data: any, line: any, flag: boolean) {\n    // flag is considered true for 4th scenario\n    let object = {};\n    let i = 0;\n    for (let [key, value] of Object.entries(data)) {\n      if (i == 0 || i == 1) {\n        if (key != \"color\") {\n          object[key] = value;\n        }\n      }\n\n      if (flag == true) {\n        if (key == this.data[0][2]) {\n          object[key] = value;\n        }\n      } else {\n        if (key == line.column) {\n          object[key] = value;\n        }\n      }\n\n      i++;\n    }\n    //this calls base class function\n    this.comboLineClick(object);\n  }\n\n  formLegendData(data: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n    data.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n        });\n      }\n    });\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'label': element[0], 'value': element[innerindex] });\n            }\n          }\n\n        });\n      }\n    });\n\n    this.legends = [];\n    this.keyArray.forEach((element, index) => {\n      const legenddata = this.legendArray[element];\n      let object = { 'label': element, 'color': this.predefinedcolors[index], 'data': legenddata.data };\n      this.legends.push(object);\n    });\n\n    //this logic will wrk fr sc1 and sc2\n    if (this.lineInput.length > 0) {\n      let inc = 1;\n      this.lineInput.forEach((element: any) => {\n        let object = {};\n        object[\"label\"] = element.column;\n        if (element.color) {\n          object[\"color\"] = element.color;\n        }\n        else {\n          object[\"color\"] = this.predefinedcolors[this.legendcolorindex + inc];\n          inc++;\n        }\n        object[\"data\"] = [];\n        this.legends.push(object);\n      });\n      this.legends\n      this.transformeddata;\n      let tempdataarray = [];\n\n      this.legends.forEach(legendelement => {\n        this.lineInput.forEach(lineelement => {\n          if (lineelement.column == legendelement.label) {\n            this.transformeddata.forEach(singlerow => {\n              let obj = {};\n              // d[Object.keys(d)[0]]\n              obj[\"label\"] = singlerow[Object.keys(singlerow)[0]];\n              obj[\"value\"] = singlerow[legendelement.label];\n              legendelement.data.push(obj);\n            });\n          }\n        });\n      });\n    }\n\n    //this logic works for sc4\n    // chk if line column exist in data1\n    if ((this.sc4 == true) && (this.data[0].length > 2)) {\n\n      let object = [];\n      object[\"label\"] = this.data[0][2];\n      object[\"color\"] = this.predefinedcolors[2];\n      object[\"data\"] = [];\n      this.legends.push(object);\n      let temparray = [];\n      //logic to push data\n      this.data.forEach((element, index) => {\n        if (index > 0) {\n          let object = [];\n          object[\"label\"] = element[0];\n          object[\"value\"] = element[2];\n          this.legends[1].data.push(object);\n        }\n      });\n    }\n  }\n\n  legendClick(event: any) {\n    let obj = {};\n    obj[\"label\"] = event.label;\n    let data = [];\n    event.data.forEach(element => {\n      let object = {};\n      object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, OnInit, ChangeDetectorRef } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-histogram',\n  template: `<div #chartId *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\">\n    <table *ngIf=\"datahisto.length > 0\" style=\"width: 100%;\">\n        <tr *ngIf=\"title.length > 0\">\n            <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n        </tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr *ngIf=\"legend\">\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n    <div *ngIf=\"datahisto.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n        </div>\n</div>`,\n  styles: [`.bar{background-color:#3943cf;padding:.02px}`]\n})\nexport class HistogramComponent extends AmexioD3BaseChartComponent implements OnInit {\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 400;\n  @Input('color') color: string = \"blue\";\n  @Input('data') datahisto: any = [];\n  @Input('yaxis-interval') tickscount: number;\n \n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  wt: number;\n  httpresponse: any;\n  svg: any;\n  data1: any;\n  values: any[] = [];\n  array: any[] = [];\n  xaxisArray: any[] = [];\n  yaxisArray: any[] = [];\n  yaxisData: any[] = [];\n  histogramarray: any[] = [];\n  histogramdata: any[] = []\n  lengtharray: any[] = [];\n  arrayofLength: any[] = [];\n  chartData: any[] = [];\n  finaldataarray: any[] = [];\n  legendArray: any[];\n  keyArray: any[];\n  predefinedcolors: any[];\n  legends: any[];\n  charttype: string;\n  data: any[];\n  datareaderdata: any[];\n  xaxis: any;\n  tempp: any;\n  tooltipArray: any[] = [];\n  index = 0;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('histogram');\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    let res: any\n    if (this.level <= 1) {\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          res = response;\n          this.httpresponse = response;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.datahisto = [];\n            this.datahisto = this.getResponseData(res);\n            this.transformData()\n            this.plotXaxis();\n            this.plotYaxis();\n            this.tooltipData();\n            this.dataforChart();\n            this.transformData1(this.finaldataarray);\n            this.plotChart();\n\n          }, 0);\n\n        });\n\n      } else if (this.datahisto) {\n\n\n        setTimeout(() => {\n          this.datahisto = this.getResponseData(this.datahisto);\n          this.transformData()\n          this.plotXaxis();\n          this.plotYaxis();\n          this.tooltipData();\n          this.dataforChart();\n          this.transformData1(this.finaldataarray);\n          this.plotChart();\n\n        }, 0);\n\n      }\n    }\n  }\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.datahisto = this.getResponseData(this.httpresponse);\n      this.transformData()\n      this.plotXaxis();\n      this.plotYaxis();\n      this.tooltipData();\n      this.dataforChart();\n      this.transformData1(this.finaldataarray);\n      this.plotChart();\n    }, 0);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  transformData1(data1: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n    data1.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n          else if (index == 0) {\n            this.xaxis = innerelement;\n          }\n        });\n      }\n    });\n    let tempinnerarray: any[];\n    tempinnerarray = [];\n    data1.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n        });\n        tempinnerarray.push(obj);\n      }\n\n    });\n    this.data = [];\n    tempinnerarray.forEach(element => {\n      this.data.push(element);\n    });\n    this.legends = [];\n    let element = this.datahisto[0];\n    let object = { 'label': element[1] + \" \" + \"of\" + \" \" + element[0], 'color': this.color };\n    this.legends.push(object);\n  }\n\n  plotChart() {\n\n    const tooltip = this.toolTip(d3);\n    let data;\n    data = this.data;\n    let keysetarray: string[] = [];\n    let series;\n    series = [];\n    series = d3.stack().keys(this.keyArray)\n      .offset(d3.stackOffsetDiverging)\n      (this.data);\n    let i = 0;\n    let tempdata;\n    tempdata = [];\n    tempdata = series;\n    tempdata.forEach(element => {\n      element.forEach(innerelement => {\n        let singletooltip = [];\n        singletooltip.push(innerelement.data.tooltipdata[i]);\n        innerelement.push(singletooltip);\n      });\n      i++;\n    });\n\n    let chartdata = [];\n    for (i = 0; i < tempdata.length - 1; i++) {\n      chartdata.push(tempdata[i]);\n    }\n    if (this.resizeflag == false) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE\n    }\n    const margin = { top: 20, right: 20, bottom: 50, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    //const height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n    let x, y;\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    let barWidth = (width / this.chartData.length);\n    let inc = barWidth / 2;\n    x = d3.scalePoint()\n      .domain(this.xaxisArray, (d) => { return d; })\n      .rangeRound([0, width]);\n\n\n    y = d3.scaleLinear().rangeRound([height, 0]);\n    y.domain([0, d3.max(this.arrayofLength)]);\n\n    let z = d3.scaleOrdinal(d3.schemeCategory10);\n    this.arrayofLength = [];\n    // add x axis to svg\n\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      }\n      else {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x))\n      }\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n\n    }\n\n    let horizontalpadding = 0.05;\n    //add y axis to svg\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(y).ticks(this.tickscount));\n\n    this.plotLine(this.svg, x, y, height, width);\n\n    let histogramBar = this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(chartdata)\n      .enter().append(\"g\")\n      .attr(\"fill\", this.color)\n      .selectAll(\"rect\")\n      .data((d) => {\n        return d;\n      })\n\n    let histogramBar1 = this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(chartdata)\n      .enter().append(\"g\")\n      // .attr(\"fill\", this.color)\n      .selectAll(\"labels\")\n      .data((d) => {\n        return d;\n      })\n    let cnt = 0;\n\n\n    histogramBar.enter().append(\"rect\")\n      .attr(\"width\", barWidth - 1)\n      .attr(\"y\", (d, index) => {\n        cnt++;\n        return y(d[1]);\n      })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"height\", (d, index) => {\n        return Math.abs(y(d[0]) - y(d[1] - horizontalpadding));\n      })\n      .attr(\"transform\", (d, i) => {\n        let translate = [barWidth * i, 0];\n        return \"translate(\" + translate + \")\";\n      })\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      }).on(\"mousemove\",\n        (d: any) => {\n          let data = d[2];\n          return tooltip.html(this.setKey(data[0]))\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n\n        }).on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n      .on(\"click\", (d) => {\n        let clickdata = d[2];\n        this.histogramClick(clickdata[0]);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n    if (this.labelflag) {\n      histogramBar1.enter()\n        .append(\"text\")\n        .style(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"y\", (d, i) => {\n          return y(d[1]);\n        })\n        .text((d) => {\n\n          let data: any;\n          let data2: any;\n          data = d[2];\n          data2 = data[0];\n          if (data2) {\n            return data2.value;\n          }\n          else {\n            return null;\n          }\n        })\n        .attr(\"transform\", (d, i) => {\n          let translate = [((barWidth * i) + barWidth / 2), (Math.abs(y(d[0]) - y(d[1] - horizontalpadding)))];\n          return \"translate(\" + translate + \")\";\n        })\n        //label click logic\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        }).on(\"mousemove\",\n          (d: any) => {\n            let data = d[2];\n            return tooltip.html(this.setKey(data[0]))\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n\n          }).on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n        .on(\"click\", (d) => {\n          let clickdata = d[2];\n          this.histogramClick(clickdata[0]);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .attr(\"cursor\", \"pointer\")\n\n    }\n  }\n\n  histogramClick(obj: any) {\n    let object = {};\n    let data = this.datahisto[0];\n    let label1 = data[1];\n    let label2 = data[0];\n    if (obj.label.length) {\n      object[label2 + \":\"] = obj.label;\n      object[label1 + \":\"] = obj.value;\n    }\n    this.chartClick(object);\n  }\n\n  legendClick(event: any) {\n    this.onLegendClick.emit(this.datahisto);\n  }\n\n  transformData() {\n    this.array = [];\n    this.values = [];\n    this.datahisto.forEach(element => {\n      this.values.push(element[1]);\n    });\n    for (let i = 1; i < this.values.length; i++) {\n      this.array.push(this.values[i]);\n    }\n  }\n\n  plotXaxis() {\n    this.xaxisArray = [];\n    this.xaxisArray.push(0);\n    let newvalue: number = 0;\n    let value = Math.ceil(d3.max(this.array));\n    if (value % 10 == 0) {\n      value = value;\n    } else {\n      value = (10 - value % 10) + value;\n    }\n    let quotient = value / 5;\n    while (newvalue < value) {\n      newvalue = newvalue + quotient;\n      this.xaxisArray.push(newvalue);\n    }\n  }\n\n  plotYaxis() {\n    let tempvalue = 0;\n    let lengthofArray = 0;\n    let lengthcount = 0;\n    let templength = 0;\n    let newvalue: number = 0;\n    this.yaxisArray = [];\n    this.histogramarray = [];\n    this.lengtharray = [];\n    this.histogramdata = [];\n    this.arrayofLength = [];\n    this.chartData = [];\n    this.xaxisArray.forEach(element1 => {\n      this.yaxisArray = [];\n      this.array.forEach(element2 => {\n        if (tempvalue < element2 && element2 <= element1) {\n          this.yaxisArray.push(element2);\n        }\n        lengthofArray = this.yaxisArray.length;\n      });\n      if (templength > lengthofArray) {\n        lengthcount = templength;\n      }\n      else {\n        lengthcount = lengthofArray;\n      }\n      templength = lengthcount;\n      tempvalue = element1;\n      this.lengtharray.push(lengthofArray);\n    });\n\n    let value = Math.ceil(templength);\n    let quotient = value / 5;\n    while (newvalue <= value) {\n      newvalue = newvalue + quotient;\n      this.yaxisData.push(newvalue)\n    }\n\n    for (let i = 1; i < this.histogramarray.length; i++) {\n      this.histogramdata.push(this.histogramarray[i]);\n    }\n\n    for (let i = 1; i < this.lengtharray.length; i++) {\n      this.arrayofLength.push(this.lengtharray[i]);\n    }\n    for (let i = 0; i < this.arrayofLength.length; i++) {\n      let data = {};\n      data[\"value\"] = this.arrayofLength[i];\n      this.chartData.push(data);\n    }\n    this.array = [];\n\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n      if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges(); this.transformData()\n    this.plotXaxis();\n    this.plotYaxis();\n    this.tooltipData();\n    this.dataforChart();\n    this.transformData1(this.finaldataarray);\n    this.plotChart();\n  }\n\n  dataforChart() {\n    this.finaldataarray = [] = [];\n    let initialArray: any[] = [];\n    let temparray: any[] = [];\n    initialArray.push('level');\n    let maxElement = Math.max.apply(null, this.arrayofLength);\n    let maxlength = maxElement;\n    let n = 1;\n    while (n <= maxElement) {\n      initialArray.push('' + n)\n      n++;\n    }\n    initialArray.push('tooltipdata');\n    let length = this.arrayofLength.length;\n    let num = 1;\n    let number = 1;\n    let j = 0;\n    this.finaldataarray.push(initialArray);\n\n    for (let i = 0; i < this.arrayofLength.length; i++) {\n      let value = this.arrayofLength[i];\n      let tempvalue = value;\n      temparray = [];\n      temparray.push('' + i);\n      maxElement = maxlength;\n      if (value > 0) {\n        while (value != 0) {\n          temparray.push(number);\n          value--\n        }\n        maxElement = maxElement - tempvalue;\n\n        while (maxElement != 0) {\n          temparray.push(0);\n          maxElement--;\n        }\n      }\n      else {\n        while (maxElement != 0) {\n          temparray.push(0);\n          maxElement--;\n        }\n      }\n      temparray.push(this.tooltipArray[j])\n      this.finaldataarray.push(temparray);\n      j++;\n    }\n  }\n\n\n  tooltipData() {\n    let arrayofTooltip: any[] = [];\n    let obj = { \"label\": \"\", \"value\": \"\" };\n    this.datahisto.forEach(element => {\n      obj = { \"label\": \"\", \"value\": \"\" };\n      obj[\"label\"] = element[0];\n      obj[\"value\"] = element[1];\n      arrayofTooltip.push(obj);\n    });\n\n    let value1 = this.xaxisArray[0];\n\n    let tooltipdata: any[] = [];\n    for (let j = 1; j < this.xaxisArray.length; j++) {\n      tooltipdata = [];\n      let value2 = this.xaxisArray[j];\n\n      arrayofTooltip.forEach(element => {\n\n        if (value1 <= element.value && element.value <= value2) {\n\n          let tooltipobj = { \"label\": \"\", \"value\": \"\" }\n          tooltipobj[\"label\"] = element[\"label\"];\n          tooltipobj[\"value\"] = element[\"value\"];\n          tooltipdata.push(tooltipobj);\n\n\n        }\n\n      });\n      this.tooltipArray.push(tooltipdata);\n      value1 = value2;\n    }\n  }\n\n\n  setKey(obj: any) {\n\n    let object = {};\n    let data = this.datahisto[0];\n    let label1 = data[1];\n    let label2 = data[0];\n\n    object[label2 + \":\"] = obj.label;\n    object[label1 + \":\"] = obj.value;\n\n    return (this.toolTipForBar(object))\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\n\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'amexio-d3-chart-scatter',\n  template: `<div #chartId  *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\">\n        <table *ngIf=\"data.length > 0\"  style=\"width: 100%;\">\n            <tr >\n                <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}}\n                 <span *ngIf=\"resizebtnflag\">\n               <button  type=\"reset\" class=\"fa fa-search-minus\" style=\"cursor: pointer; float:right\" (click)=\"resizesvg()\">\n               </button>\n               </span>     \n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                    </svg>\n                </td>\n            </tr>\n            <tr *ngIf=\"legend\">\n                <td style=\"display: block; padding: 5px;\">\n                    <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onScatterLegendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n                </td>\n            </tr>\n        </table>\n        <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n            </div>\n    </div>`,\n  styles: [``]\n})\nexport class ScatterchartComponent extends AmexioD3BaseChartComponent implements OnInit {\n\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input('color') color: any = \"blue\";\n  @Input('zoom-enable') zoomflag: boolean = false;\n  @Input('yaxis-interval') tickscount: number;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  wt: any;\n  zoominitiated: boolean = false;\n  svg: any;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  data: any;\n  dataFormatted: any;\n  colordata: any;\n  legends: any[];\n  legendarray: any[] = [];\n  legendData: any;\n  httpresponse: any;\n  node: any;\n  nodelabel: any;\n  resizebtnflag = false;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('scatter');\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    this.dataFormatted = [];\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n          this.httpresponse = resp;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.dataFormatted = this.data;\n            this.transformData(this.dataFormatted);\n            this.colorGeneration();\n            this.legendCreation();\n            this.plotScatterChart();\n          }, 0);\n        });\n\n      } else if (this.data) {\n\n        setTimeout(() => {\n          this.dataFormatted = this.data;\n          this.data = this.getResponseData(this.data);\n\n          this.transformData(this.data);\n          this.colorGeneration();\n          this.legendCreation();\n          this.plotScatterChart();\n\n        }, 0);\n\n      }\n    }\n\n  }\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.dataFormatted = this.data;\n\n\n      this.transformData(this.data);\n      this.colorGeneration();\n      this.legendCreation();\n      this.plotScatterChart();\n    }, 0);\n  }\n\n  // Method to transform data in key value pair \n  transformData(data: any) {\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });\n        this.transformeddata.push(DummyObject);\n      }\n    });\n    this.data = this.transformeddata;\n  }\n\n  // Method get response data using data reader\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  // Method to plot d3 chart\n  plotScatterChart() {\n    if (this.resizeflag == false) {\n     //RESIZE STEP 1\n     if (this.wt) {\n      this.svgwidth = this.wt;\n\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    //RESIZE STEP 1 ENDS HERE \n    }\n    const tooltip = this.toolTip(d3);\n    const margin = { top: 20, right: 20, bottom: 30, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    let x, y;\n\n    x = d3.scaleLinear()\n      .rangeRound([0, width]);\n\n    y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    let xAxis = d3.axisBottom(x);\n\n    let yAxis = d3.axisLeft(y).ticks(this.tickscount);\n\n    this.svg = d3.select(\"#\" + this.componentId)\n    .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    x.domain([0, d3.max(this.data, (d) => { return d[Object.keys(d)[0]] })]);\n    y.domain([0, d3.max(this.data, (d) => { return d[Object.keys(d)[1]] })]);\n\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(xAxis).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      }\n      else {\n        this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"start\");\n      }\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n    }\n\n\n\n    // this.svg.append(\"g\")\n    //   .attr(\"class\", \"x axis\")\n    //   .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //   .call(xAxis)\n    //   .append(\"text\")\n    //   .attr(\"class\", \"label\")\n    //   .attr(\"x\", width)\n    //   .attr(\"y\", -6)\n    //   .style(\"text-anchor\", \"end\");\n\n    this.svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n\n    if (this.dataFormatted[0].length == 2) {\n      this.plotLine(this.svg, x, y, height, width);\n\n      this.node = this.svg.selectAll(\".dot\")\n        .data(this.data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"fill\", this.color)\n        .attr(\"r\", 4.5)\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"cx\", (d) => {\n          return x(d[Object.keys(d)[0]]);\n        })\n        .attr(\"cy\", (d) => { return y(d[Object.keys(d)[1]]); })\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.scatterChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        });\n      // ------------------------------------------------------------------------------\n      if (this.labelflag) {\n        this.nodelabel = this.svg.selectAll(\"labels\")\n          .data(this.data)\n          .enter().append(\"text\")\n          .style(\"font-weight\", \"bold\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"vertical-align\", \"middle\")\n          .attr(\"margin-top\", margin.top)\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              return this.labelcolor;\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", (d, i) => {\n            return x(d[Object.keys(d)[0]]) + 11;\n          })\n          .attr(\"y\", (d, i) => {\n            return y(d[Object.keys(d)[1]])\n          })\n          .text((d) => {\n            return d[Object.keys(d)[1]];\n          })\n          //label click logic\n          .attr(\"cursor\", \"pointer\")\n          .on(\"mouseover\", (d) => {\n            return tooltip.style(\"visibility\", \"visible\");\n          })\n          .on(\"mousemove\", (d) => {\n            return tooltip.html(\n              this.formTooltipData(d)\n            )\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n          })\n          .on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n          .on(\"click\", (d) => {\n            this.scatterChartClick(d);\n            this.fordrillableClick(this, d, event);\n            return tooltip.style(\"visibility\", \"hidden\");\n          });\n      }\n\n    } else {\n      this.plotLine(this.svg, x, y, height, width);\n\n      this.node = this.svg.selectAll(\".dot\")\n        .data(this.transformeddata)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", 4.5)\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"cx\", (d) => {\n          return x(d[Object.keys(d)[0]]);\n        })\n        .attr(\"cy\", (d) => { return y(d[Object.keys(d)[1]]); })\n        .attr(\"fill\", (d) => { return d[Object.keys(d)[4]] })\n\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.scatterChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n\n      if (this.labelflag) {\n        this.nodelabel = this.svg.selectAll(\"labels\")\n          .data(this.data)\n          .enter().append(\"text\")\n          .style(\"font-weight\", \"bold\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"vertical-align\", \"middle\")\n          .attr(\"margin-top\", margin.top)\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              return this.labelcolor;\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", (d, i) => {\n            return x(d[Object.keys(d)[0]]) + 11;\n          })\n          .attr(\"y\", (d, i) => {\n            return y(d[Object.keys(d)[1]])\n          })\n          .text((d) => {\n            return d[Object.keys(d)[1]];\n          })\n          //write label click logic here\n          .attr(\"cursor\", \"pointer\")\n          .on(\"mouseover\", (d) => {\n            return tooltip.style(\"visibility\", \"visible\");\n          })\n          .on(\"mousemove\", (d) => {\n            return tooltip.html(\n              this.formTooltipData(d)\n            )\n              .style(\"top\", (d3.event.pageY - 10) + \"px\")\n              .style(\"left\", (d3.event.pageX + 10) + \"px\");\n          })\n          .on(\"mouseout\", (d) => {\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n          .on(\"click\", (d) => {\n            this.scatterChartClick(d);\n            this.fordrillableClick(this, d, event);\n            return tooltip.style(\"visibility\", \"hidden\");\n          })\n      }\n\n    }\n\n    //create zoom handler \n    if (this.zoomflag) {\n      this.zoominitiated = true;\n      let zoom_handler = d3.zoom()\n        .on(\"zoom\", this.zoom_actions.bind(this));\n      zoom_handler(this.svg);\n    }\n  }\n\n  togglebtnflag() {\n    this.resizebtnflag = true;\n  }\n\n  zoom_actions() {\n    this.node.attr(\"transform\", d3.event.transform);\n    if (this.labelflag) {\n      this.nodelabel.attr(\"transform\", d3.event.transform);\n    }\n    this.resizebtnflag = true;\n    this.zoominitiated = false;\n  }\n\n  resizesvg() {\n    // this.svg = null;\n    this.svg.selectAll(\"*\").remove();\n    this.plotScatterChart();\n    this.resizebtnflag = false;\n  }\n\n  // Method to form tooltip data\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  // Method on chart click\n  scatterChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      if (key !== 'color') {\n        object[key] = value;\n      }\n    }\n    this.chartClick(object);\n  }\n\n  // method to create Legend\n  legendCreation() {\n    if (this.dataFormatted[0].length == 2) {\n      this.legends = [];\n      let element = this.dataFormatted[0];\n\n      let object = { 'label': element[0] + \" \" + \"vs\" + \" \" + element[1], 'color': this.color };\n      this.legends.push(object);\n    }\n    else {\n      this.legends = [];\n      this.legendarray.forEach(element => {\n        let legendobject = {};\n        legendobject['label'] = element.label;\n        legendobject['color'] = element.color;\n        this.legends.push(legendobject);\n      });\n\n    }\n\n  }\n\n  // Method on Legend Click\n  onScatterLegendClick(legendevent: any) {\n    if (this.dataFormatted[0].length == 2) {\n      this.onLegendClick.emit(this.data);\n    } else {\n      this.legendarray.forEach(element => {\n        if (legendevent.label == element.label) {\n          let arr = element.value;\n          let temparr = [];\n          arr.forEach(element => {\n            let obj = {};\n            for (let [key, value] of Object.entries(element)) {\n              if (key !== 'color') {\n                obj[key] = value;\n              }\n            }//for end\n            temparr.push(obj);\n          });//for each ends\n          this.legendClick(temparr);\n        }\n      });\n    }\n  }\n\n//RESIZE STEP 4 STARTS\nvalidateresize() {\n  setTimeout(() => {\n     if (this.wt) {\n\n    } else {\n      this.resize();\n    }\n  }, 0)\n}\n//RESIZE STEP 4 ENDS\n\n  // Method for responsiveness\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotScatterChart();\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.vScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).\n          tickSize(-this.width).tickFormat('')\n        );\n    }\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  colorGeneration() {\n    this.legendarray = [];\n    let i = 0;\n    let names = this.dataFormatted\n      .map(e => e[2])\n      .filter((e, i, a) => a.indexOf(e) === i);\n    for (let j = 1; j < names.length; j++) {\n      let value = [];\n      let obj = { \"label\": \"\", \"color\": \"\", \"value\": [] };\n      this.transformeddata.forEach(element => {\n        if (element[Object.keys(element)[2]] == names[j]) {\n          element['color'] = this.predefinedcolors[i];\n          value.push(element);\n        }\n      });\n      obj[\"value\"] = value;\n      obj[\"label\"] = names[j];\n      obj[\"color\"] = this.predefinedcolors[i];\n      this.legendarray.push(obj);\n      i++;\n    }\n  }\n\n  formLegendData() {\n    this.legendData = [];\n    this.legendarray.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element.label;\n      legendobject['color'] = element.color;\n      this.legendData.push(legendobject);\n    });\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit, ChangeDetectorRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport * as d3 from 'd3';\nimport { Key } from 'selenium-webdriver';\nimport { DeviceQueryService } from '../services/device.query.service';\n\n@Component({\n  selector: 'amexio-d3-chart-multiarea',\n  template: `\n<div #chartId *ngIf=\"drillableFlag\" #divid (window:resize)=\"validateresize()\">\n<table [ngClass]=\"validateData()\" style=\"width: 100%;\">\n  <tr *ngIf = \"title.length > 0\">\n      <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr *ngIf=\"legend\" >\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onAreaLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n          </amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n<!-- <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div> -->\n</div>`,\n  styles: [``]\n})\nexport class MultiareaComponent extends AmexioD3BaseChartComponent implements PlotCart, OnInit {\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 350;\n  @Input('color') colorarray = [];\n  @Input('yaxis-interval') tickscount: number;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  @Output() onTooltipClick: any = new EventEmitter<any>();\n  httpresponse: any;\n  togglelabel: boolean = false;\n  svg: any;\n  x: any;\n  y: any;\n  z: any;\n  height: number;\n  width: number;\n  margin: any = {};\n  i: number;\n  parseTime: any;\n  keyArray: any[] = [];\n  maximumValue: number;\n  predefinedColors: any[];\n  areaArray: any;\n  transformeddata: any[] = [];\n  data1: any[] = [];\n  legendArray: any[] = [];\n  tooltip: any;\n  wt: number;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super(\"areachart\");\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    this.togglelabel = false;\n    let res;\n    if (this.level <= 1) {\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          this.httpresponse = response;\n          this.data = this.getResponseData(response);\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.transformData(this.data);\n            this.initAreaChart();\n            this.plotD3Chart();\n          }, 0);\n        });\n      } else if (this.data1) {\n\n        setTimeout(() => {\n          this.transformData(this.data);\n          this.initAreaChart();\n          this.plotD3Chart();\n        }, 0);\n      }\n\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData(this.data);\n      this.initAreaChart();\n      this.plotD3Chart();\n\n    }, 0);\n  }\n\n  initAreaChart() {\n    this.tooltip = this.toolTip(d3);\n    if (this.resizeflag == false) {\n     //RESIZE STEP 1\n     if (this.wt) {\n      this.svgwidth = this.wt;\n\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n    }\n    //RESIZE STEP 1 ENDS HERE \n    }\n\n    this.margin = { top: 30, right: 44, bottom: 50, left: 30 },\n      this.width = this.svgwidth - this.margin.left - this.margin.right,\n      this.height = this.svgheight - this.margin.top - this.margin.bottom;\n    //find max and initialize max\n    this.maximumValue = this.findMaxData(this.data);\n\n    this.x = d3.scalePoint()\n      .range([0, this.width])\n    // .padding(0.1);\n\n    this.y = d3.scaleLinear()\n      .rangeRound([this.height, 0]);\n    this.areaArray = [];\n    //set x y domain\n    this.areaArray = this.data.map((d) => { return d[Object.keys(d)[0]]; });\n    this.x.domain(this.areaArray);\n    this.y.domain([0, this.maximumValue]);\n    //initialize svg\n    this.svg =\n      d3.select(\"#\" + this.componentId) \n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n        .attr(\"width\", this.width + this.margin.left + this.margin.right)\n        .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n    this.predefinedColors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n  }\n\n  plotD3Chart() {\n    this.formLegendData();\n    let counter: number;\n    let g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n    // add the X \n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      }\n      else {\n        g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .call(d3.axisBottom(this.x))\n      }\n    }\n    else {\n      g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .call(d3.axisBottom(this.x)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n\n    }\n    // add the Y Axis\n    g.append(\"g\")\n      .call(d3.axisLeft(this.y).ticks(this.tickscount));\n\n    this.plotLine(g, this.x, this.y, this.height, this.width);\n\n    for (counter = 1; counter < this.keyArray.length; counter++) {\n      let innerGroup = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n      this.plotAreaChart(innerGroup, counter, this);\n    }\n    //call method to plot points\n    let increment;\n    for (increment = 1; increment < this.keyArray.length; increment++) {\n      //plot line\n      let innerGroup = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n      this.PlotLineDot(innerGroup, increment, this);\n    }//increment for ends\n  }\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n       if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  PlotLineDot(g: any, i: number, thisa: this) {\n    let flag = this.togglelabel;\n    const line = d3.line()\n      .x((d) => { return thisa.x(d[Object.keys(d)[0]]); })\n      .y((d) => { return thisa.y(d[Object.keys(d)[i]]); });\n    g.append(\"path\")\n      .data([thisa.data])\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \n      (d)=>{\n        if(this.colorarray.length > 0) {\n          if(this.colorarray[i-1]) {\n            return this.colorarray[i-1];\n          }\n          else {\n        return thisa.predefinedcolors[i];            \n          }\n        }\n        else {\n        return thisa.predefinedcolors[i];\n        }\n      }\n      // thisa.predefinedcolors[i]\n    )\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", line)\n      .attr(\"opacity\", 0.2)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" + 0 + \",\" + 0 + \")\");\n    //----------\n\n    g.selectAll('dot')\n      .data(thisa.data)\n      .enter()\n      .append('circle')\n      .attr('opacity', 0)\n      .attr(\"fill\", \n      (d)=>{\n        if(this.colorarray.length > 0) {\n          if(this.colorarray[i-1]) {\n            return this.colorarray[i-1];\n          }\n          else {\n        return thisa.predefinedcolors[i];            \n          }        }\n        else {\n        return thisa.predefinedcolors[i];\n        }\n      }\n      // thisa.predefinedcolors[i]\n    )\n      .attr(\"cx\", (d) => { return thisa.x(d[Object.keys(d)[0]]); })\n      .attr(\"cy\", (d) => { return thisa.y(d[Object.keys(d)[i]]); })\n      .attr('r', 4)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        this.formTooltipData(d, i);\n        return this.tooltip.style(\"visibility\", \"visible\");\n\n      })\n      .on(\"mousemove\", (d) => {\n        return this.tooltip.html(\n          this.formTooltipData(d, i)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n\n      .style(\"opacity\", 1)\n      .on(\"click\", (d) => {\n        this.onAreaTooltipClick(d, i);\n        this.fordrillableClick(this, d, event);\n        return this.tooltip.style(\"visibility\", \"hidden\");\n        //this.chartClick(d);\n      })\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" + 0 + \",\" + 0 + \")\");\n\n    // -----------------------------------------------------------------\n    if (this.labelflag) {\n      g.selectAll('labels')\n        .data(thisa.data)\n        .enter()\n        .append('text')\n        .style(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"x\", (d) => {\n          // let length = String(d[Object.keys(d)[i]]).length\n          return thisa.x(d[Object.keys(d)[0]]) + 20;\n        })\n        .attr(\"y\", (d) => {\n          let key: any = [Object.keys(d)[i]];\n          if (flag) {\n            return thisa.y(d[key]) - 5;// fr up\n          }\n          else {\n            return thisa.y(d[key]) + 15;\n          }\n          // return thisa.y(d[Object.keys(d)[i]]);\n          //  return y(d[Object.keys(d)[1]])+yTextPadding;\n        })\n        .text((d) => {\n          return d[Object.keys(d)[i]];\n        })\n        .attr(\"transform\",\n          \"translate(\" + 0 + \",\" + 0 + \")\")\n        //label click logic\n        .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        this.formTooltipData(d, i);\n        return this.tooltip.style(\"visibility\", \"visible\");\n\n      })\n      .on(\"mousemove\", (d) => {\n        return this.tooltip.html(\n          this.formTooltipData(d, i)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.onAreaTooltipClick(d, i);\n        this.fordrillableClick(this, d, event);\n        return this.tooltip.style(\"visibility\", \"hidden\");\n        //this.chartClick(d);\n      })\n    }\n    if (this.togglelabel) {\n      this.togglelabel = false;\n    }\n    else {\n      this.togglelabel = true;\n    }\n  }\n\n  plotAreaChart(g: any, i: number, thisa: this) {\n    // calculate area and valueline\n    // define the line\n    const valueline = d3.line()\n      .x((d) => {\n        let key: any = [Object.keys(d)[0]];\n        return thisa.x(d[key]);\n      })\n      .y((d) => {\n        let key: any = [Object.keys(d)[i]];\n        return thisa.y(d[key]);\n      });\n\n    // add the valueline path.\n    g.append(\"path\")\n      .data([this.data])\n      .style(\"stroke\",\n      (d)=>{\n        if(this.colorarray.length > 0) {\n        //  return this.colorarray[i-1];\n        if(this.colorarray[i-1]) {\n          return this.colorarray[i-1];\n        }\n        else {\n      return this.predefinedcolors[i];            \n        }\n        }\n        else {\n        return this.predefinedColors[i];\n        }\n      }\n        // this.predefinedColors[i]\n      )\n      .attr(\"fill\", \"none\")\n      .style(\"stroke-width\", \"2px\")\n      .attr(\"d\", valueline)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" + 0 + \",\" + 0 + \")\");\n\n    // define the area\n    let area = d3.area()\n      .x((d) => {\n        let key: any = [Object.keys(d)[0]];\n        return thisa.x(d[key]);\n      })\n      .y0(this.height)\n      .y1((d) => {\n        let key: any = [Object.keys(d)[i]];\n        return thisa.y(d[key]);\n      });\n\n    g.append(\"path\")\n      .data([this.data])\n      .attr(\"d\", area)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\")\n        \"translate(\" + 0 + \",\" + 0 + \")\")\n      .style(\"stroke\", \"none\")\n      .attr(\"fill\", \n      (d)=>{\n        if(this.colorarray.length > 0) {\n          if(this.colorarray[i-1]) {\n            return this.colorarray[i-1];\n          }\n          else {\n        return this.predefinedcolors[i];            \n          }        }\n        else {\n        return this.predefinedColors[i];\n        }\n      }\n      // this.predefinedColors[i]\n      )\n      .style(\"opacity\", 0.5)\n  }\n\n  onAreaTooltipClick(tooltipData: any, count: number) {\n    let obj = {};\n    obj[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    obj[this.keyArray[count]] = tooltipData[Object.keys(tooltipData)[count]];\n    this.chartClick(obj);\n  }\n\n  findMaxData(data: any) {\n    let tempArray = [];\n    let largeValues = [];\n    let maxValue;\n    //logic to search 3 largest values \n    data.forEach(element => {\n      let temp = [];\n      let value;\n      for (let [key, value] of Object.entries(element)) {\n        //exempts first column of data as it is treated as x-axis\n        if (key != this.keyArray[0]) {\n          tempArray.push(value);\n        }\n      }//for loop end\n      value = this.findLargestValue(tempArray);\n      largeValues.push(value);\n    });\n    maxValue = this.findLargestValue(largeValues);\n    return maxValue;\n  }\n\n  findLargestValue(array: any[]) {\n    let i;\n    let max = 0;\n    for (i = 0; i < array.length; i++) {\n      if (array[i] > max) {\n        max = array[i];\n      }//if ends \n    }//max ends\n    return max;\n  }\n\n  //covert data\n  transformData(data: any) {\n    this.transformeddata = [];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject: any = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends\n\n    let parsedtransformeddata = JSON.parse(JSON.stringify(this.transformeddata));\n\n    this.data = parsedtransformeddata;\n  }\n\n  formLegendData() {\n     this.legendArray = [];\n    let counter = 0\n    this.keyArray.forEach((element, index) => {\n      if (index > 0) {\n        let legendobject = {};\n        legendobject['label'] = element;\n        if((this.colorarray.length > 0) && (this.colorarray[counter])) {\n          legendobject['color'] = this.colorarray[counter];\n        }\n        else {\n          legendobject['color'] = this.predefinedColors[counter + 1];\n         }\n        this.legendArray.push(legendobject);\n        counter++;\n\n      }\n    });\n  }\n\n  onAreaLegendClick(legendData: any) {\n     let obj = {};\n    obj[\"label\"] = legendData.label;\n    let data = [];\n    this.data.forEach(element => {\n      for (let [key, value] of Object.entries(element)) {\n        if (key == legendData.label) {\n          let object = {};\n          object[key] = value;\n          data.push(object);\n        }//inner if ends\n      }//inner forloop ends\n    });//outer foreach ends\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      // this.resizewt = this.chartId.nativeElement.offsetWidth;\n      // console.log(\"\", new Date().getTime(), \" \", this.resizewt);\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.initAreaChart();\n    this.plotD3Chart();\n  }\n\n  formTooltipData(tooltipData: any, count: number) {\n    let obj = {};\n    obj[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    obj[this.keyArray[count]] = tooltipData[Object.keys(tooltipData)[count]];\n    return this.toolTipForBar(obj);\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  validateData() {\n    if (this.data) {\n\n    } else {\n        return \"lmask\"\n    }\n}\n\n}\n","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit, ChangeDetectorRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-waterfall',\n  template: `\n<div #chartId *ngIf=\"drillableFlag\"  (window:resize)=\"validateresize()\" >\n<table *ngIf=\"data.length > 0\" style=\"width: 100%;\" >\n  <tr *ngIf = \"title.length > 0\">\n      <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr *ngIf=\"legend\">\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onCandlestickLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n          </amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n<div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div>\n</div>`,\n  styles: [``]\n})\n\nexport class CandlestickComponent extends AmexioD3BaseChartComponent implements PlotCart, OnInit {\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input() data: any[] [];\n  @Input('yaxis-interval') tickscount: number;\n  @Input('show-zero-values') showzeroflag: boolean = true;\n\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  predefinedColor = [];\n  keyArray: any[] = [];\n  transformeddata: any;\n  height: number;\n  width: number;\n  margin: any = {};\n  x: any;\n  y: any;\n  svg: any;\n  tooltip: any;\n  legendArray: any[] = [];\n  httpresponse: any;\n  wt: number;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super(\"candlestickwaterfallchart\");\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    this.predefinedColor = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n    if (this.level <= 1) {\n      let res;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          //this.data = response;\n          this.httpresponse = response;\n          this.data = this.getResponseData(response);\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.transformData(this.data);\n            this.initializeData();\n            this.plotXYAxis();\n            this.plotD3Chart();\n          }, 0);\n        });\n      } else if (this.data) {\n        setTimeout(() => {\n          this.transformData(this.data);\n          this.initializeData();\n          this.plotXYAxis();\n          this.plotD3Chart();\n        }, 0);\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData(this.data);\n      this.initializeData();\n      this.plotXYAxis();\n      this.plotD3Chart();\n    }, 0);\n  }\n\n  initializeData() {\n    this.tooltip = this.toolTip(d3);\n    if (this.resizeflag == false) {\n      //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n    }\n    this.margin = { top: 20, right: 30, bottom: 50, left: 60 },\n      this.width = this.svgwidth - this.margin.left - this.margin.right,\n      this.height = this.svgheight - this.margin.top - this.margin.bottom;\n  }\n\n  plotXYAxis() {\n    // set the ranges\n    this.x = d3.scaleBand().range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .rangeRound([this.height, 0]);\n    // scale the range of the data\n    let candlestickArray = this.data.map((d) => {\n      return d[Object.keys(d)[0]];\n    });\n    this.x.domain(candlestickArray);\n    let max = d3.max(this.data, (d) => { return d.end; });\n    this.y.domain([0, max]);\n\n    // this.svg = d3.select(\"#\" + this.componentId)\n    //RESIZE STEP 2 START\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n    //RESIZE STEP 2 ENDS HERE\n       .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    // add the X Axis\n\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x)).\n          selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", 9)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(60)\")\n          .style(\"text-anchor\", \"start\");\n      } \n      else {\n        this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .call(d3.axisBottom(this.x))\n      }\n\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .call(d3.axisBottom(this.x)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n\n    }\n\n    // this.svg.append(\"g\")\n    //   .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    //   .call(d3.axisBottom(this.x));\n\n    // add the Y Axis\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(this.y).ticks(this.tickscount));\n    this.plotLine(this.svg, this.x, this.y, this.height, this.width);\n  }\n\n\n  plotD3Chart() {\n    let bar = this.svg.selectAll(\".bar\")\n      .data(this.data)\n      .enter().append(\"g\")\n      .attr(\"class\", (d) => { return \"bar \" + d.class })\n      .attr(\"transform\", (d) => {\n        return \"translate(\" + this.x(\n          d[Object.keys(d)[0]]\n        ) + \",0)\";\n      });\n\n    bar.append(\"rect\")\n      .attr(\"y\", (d) => { return this.y(Math.max(d.start, d.end)); })\n      .attr(\"height\", (d) => { return Math.abs(this.y(d.start) - this.y(d.end)); })\n      .attr(\"width\", this.x.bandwidth())\n      .attr(\"fill\", (d, i) => {\n        return this.predefinedColor[i];\n      })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        this.formTooltipData(d);\n        return this.tooltip.style(\"visibility\", \"visible\");\n\n      })\n      .on(\"mousemove\", (d) => {\n        return this.tooltip.html(\n          this.formTooltipData(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.onCandlestickClick(d);\n        this.fordrillableClick(this, d, event);\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n\n    if (this.labelflag) {\n      bar.append(\"text\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"font-size\", \"1vw\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"x\", (d) => {\n          return (this.x.bandwidth()) / 2;\n        })\n        .attr(\"y\", (d, index) => {\n          return this.y(Math.max(d.start, d.end)) + 20;\n        })\n        .text((d) => {\n          // return d[Object.keys(d)[1]]\n          if(this.showzeroflag) {\n            return d[Object.keys(d)[1]];\n          }\n          else if(!this.showzeroflag) {\n            if(d[Object.keys(d)[1]] > 0) {\n              return d[Object.keys(d)[1]];\n            }\n          }\n        })\n        .attr(\"cursor\", \"pointer\")\n        .on(\"mouseover\", (d) => {\n          this.formTooltipData(d);\n          return this.tooltip.style(\"visibility\", \"visible\");\n\n        })\n        .on(\"mousemove\", (d) => {\n          return this.tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return this.tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.onCandlestickClick(d);\n          this.fordrillableClick(this, d, event);\n          return this.tooltip.style(\"visibility\", \"hidden\");\n        })\n\n    }\n  }\n\n  plotLine(svg, x, y, height, width) {\n    if (this.hScale) {\n      svg.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  transformData(data: any) {\n    this.transformeddata = [];\n    this.keyArray = [];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject: any = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends \n    this.data = this.transformeddata;\n    this.addDataKeys();\n    this.formLegendData();\n  }\n\n  addDataKeys() {\n    let cumulative: any = 0;\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i][\"start\"] = cumulative;\n      cumulative += this.data[i][this.keyArray[1]];\n      this.data[i][\"end\"] = cumulative;\n      this.data[i][\"class\"] = (this.data[i][this.keyArray[1]] >= 0) ? 'positive' : 'negative'\n    }\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    object[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    object[this.keyArray[1]] = tooltipData[Object.keys(tooltipData)[1]];\n    return this.toolTipForBar(object);\n  }\n\n  onCandlestickClick(chartData: any) {\n    let object = {};\n    object[this.keyArray[0]] = chartData[Object.keys(chartData)[0]];\n    object[this.keyArray[1]] = chartData[Object.keys(chartData)[1]];\n    this.chartClick(object);\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.data.forEach((element, index) => {\n      for (let [key, value] of Object.entries(element)) {\n        if (key == this.keyArray[0]) {\n          let object = {};\n          object[\"label\"] = value;\n          object[\"color\"] = this.predefinedColor[index];\n          this.legendArray.push(object);\n        }\n      }\n    });\n  }\n\n  onCandlestickLegendClick(chartData: any) {\n    let object = {};\n    this.data.forEach(element => {\n      for (let [key, value] of Object.entries(element)) {\n        if (value == chartData.label) {\n          object[chartData.label] = element[Object.keys(element)[1]];\n        }\n      }\n    });\n    this.onLegendClick.emit(object);\n  }\n\n\n  //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n       if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      // this.resizewt = this.chartId.nativeElement.offsetWidth;\n      // console.log(\"\", new Date().getTime(), \" \", this.resizewt);\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.initializeData();\n    this.plotXYAxis();\n    this.plotD3Chart();\n  }\n\n}\n","import { Component, ElementRef, Input, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from '../../base/base.component';\nimport { CommanDataService } from '../../services/comman.data.service';\nimport { DeviceQueryService } from '../../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-bubble',\n  template: `<div #chartId *ngIf=\"drillableFlag\" (window:resize)=\"validateresize()\">\n    <table *ngIf=\"data.length > 0\" style=\"width: 100%;\">\n        <tr>\n            <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}}\n                <span *ngIf=\"resizebtnflag\">\n                    <button type=\"reset\" class=\"fa fa-search-minus\" style=\"cursor: pointer; float:right\" (click)=\"resizesvg()\">\n                    </button>\n                </span>\n            </td>\n            <td></td>\n        </tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr *ngIf=\"legend\">\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onBubbleLegendClick($event)\" [data]=\"legendData\"\n                    style=\"height:100%;\"></amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n    <div *ngIf=\"data.length < 1\" class=\"lmask\" style=\"padding-top:50%\">\n    </div>\n</div>`,\n  styles: [``]\n})\nexport class BubbleComponent extends AmexioD3BaseChartComponent implements OnInit {\n  @Input('width') svgwidth: number;\n  @Input('height') svgheight: number = 300;\n  @Input('color') color: any = \"blue\";\n  @Input('zoom-enable') zoomflag: boolean = false;\n  @Input('yaxis-interval') tickscount: number;\n  @Input('xaxis-interval') xtickscount: number;\n\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  wt:number;\n  zoominitiated: boolean = false;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  colors: any[] = [];\n  data1: any;\n  xaxisArray: any[] = [];\n  xarray: any[] = [];\n  legends: any[] = [];\n  legendarray: any[] = [];\n  node: any;\n  nodelabel: any;\n  resizebtnflag = false;\n  legendData: any[] = [];\n  minxvalue: number = 0;\n  maxxvalue: number = 0;\n  colordata: any;\n  bubblechartdata: any[] = [];\n  httpresponse: any;\n  svg: any;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n    super('bubble');\n    this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n  }\n\n  ngOnInit() {\n    this.wt = this.svgwidth;\n    this.data1 = [];\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n          this.httpresponse = resp;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.data1 = this.data;\n            this.xaxisData();\n            this.transformData(this.data1);\n            this.transformdata();\n            this.colorGeneration();\n            this.formLegendData();\n            this.plotBubbleChart();\n          }, 0);\n        });\n\n      } else if (this.data) {\n        setTimeout(() => {\n          this.data1 = this.data;\n          this.data = this.getResponseData(this.data);\n          this.xaxisData();\n          this.transformData(this.data);\n          this.transformdata();\n          this.colorGeneration();\n          this.formLegendData();\n          this.plotBubbleChart();\n        }, 0);\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.data1 = this.data;\n      this.xaxisData();\n      this.transformData(this.data1);\n      this.transformdata();\n      this.colorGeneration();\n      this.formLegendData();\n      this.plotBubbleChart();\n    }, 0);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  transformData(data: any) {\n    this.colordata = [];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });\n        this.transformeddata.push(DummyObject);\n      }\n    });\n    this.data = this.transformeddata;\n    this.colordata = this.transformeddata;\n  }\n\n  plotBubbleChart() {\n     let colors = this.predefinedcolors;\n    if (this.resizeflag == false) {\n       //RESIZE STEP 1\n       if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE\n    }\n\n    const tooltip = this.toolTip(d3);\n    const margin = { top: 20, right: 60, bottom: 50, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    let x, y;\n    x = d3.scaleLinear()\n      .rangeRound([0, width]);\n\n    y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    let xAxis = d3.axisBottom(x).ticks(this.xtickscount);\n\n    let yAxis = d3.axisLeft(y).ticks(this.tickscount);\n\n    this.svg = d3.select(\"#\" + this.componentId)\n    .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    y.domain([0, d3.max(this.data, (d) => { return d[Object.keys(d)[2]] })]);\n\n    x.domain([this.minxvalue, this.maxxvalue]);\n\n    let rScale = d3.scaleSqrt().rangeRound([6, 30]);\n\n    rScale.domain([d3.min(this.data, (d) => { return d[Object.keys(d)[4]] }), d3.max(this.data, (d, i) => { return d[Object.keys(d)[4]] })])\n\n    if (this.device.IsDesktop() == true) {\n      if (this.svgwidth <= 400) {\n        this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n      } else {\n        this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"start\");\n      }\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n    }\n\n    this.svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n\n    this.plotLine(this.svg, x, y, height, width);\n\n    this.node = this.svg.selectAll(\".dot\")\n      .data(this.bubblechartdata)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", (d) => { return rScale(d[Object.keys(d)[4]]); })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"cx\", (d) => {\n        return x(d[Object.keys(d)[1]]);\n      })\n      .attr(\"cy\", (d) => { return y(d[Object.keys(d)[2]]); })\n      .attr(\"fill\", (d) => { return d[Object.keys(d)[5]] })\n      .attr('opacity', 0.7)\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.formTooltipData(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        // if(!this.zoominitiated) {\n        this.bubbleChartClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        // }\n      });\n\n    //label\n    if (this.labelflag) {\n      this.nodelabel = this.svg.selectAll(\"labels\")\n        .data(this.bubblechartdata)\n        .enter().append(\"text\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"font-size\", (d) => {\n          return rScale(d[Object.keys(d)[4]]) - 4;\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", (d) => {\n          if (this.labelcolor && this.labelcolor.length > 0) {\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n        })\n        .attr(\"x\", (d) => {\n          return x(d[Object.keys(d)[1]]);\n        })\n        .attr(\"y\", (d) => { return y(d[Object.keys(d)[2]]); })\n        .text((d) => {\n          return d[Object.keys(d)[0]];\n        })\n        .attr(\"cursor\", \"pointer\")\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          // if(!this.zoominitiated) {\n          this.bubbleChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n          // }\n        })\n    }\n\n    //create zoom handler \n    if (this.zoomflag) {\n      this.zoominitiated = true;\n      let zoom_handler = d3.zoom()\n        .on(\"zoom\", this.zoom_actions.bind(this));\n      zoom_handler(this.svg);\n    }\n  }\n\n  togglebtnflag() {\n    this.resizebtnflag = true;\n  }\n\n  zoom_actions() {\n    this.node.attr(\"transform\", d3.event.transform);\n    if (this.labelflag) {\n      this.nodelabel.attr(\"transform\", d3.event.transform);\n    }\n    this.resizebtnflag = true;\n    this.zoominitiated = false;\n  }\n\n  resizesvg() {\n    // this.svg = null;\n    this.svg.selectAll(\"*\").remove();\n    this.plotBubbleChart();\n    this.resizebtnflag = false;\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  // Method on chart click\n  bubbleChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      if (key !== 'color') {\n        object[key] = value;\n      }\n    }\n    this.chartClick(object);\n  }\n\n   //RESIZE STEP 4 STARTS\n   validateresize() {\n    setTimeout(() => {\n       if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n  resize() {\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    if (this.wt) {\n      this.svgwidth = this.wt;\n    } else if (this.chartId) {\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    }\n    this.cdf.detectChanges();\n    this.plotBubbleChart();\n  }\n\n  xaxisData() {\n\n    let array = [];\n    this.minxvalue = 0;\n    this.maxxvalue = 0;\n    this.xaxisArray = [];\n    this.xarray = [];\n    this.data1.forEach(element => {\n      array.push(element[1]);\n    });\n    for (let i = 1; i < array.length; i++) {\n      this.xaxisArray.push(array[i]);\n    }\n\n    let minvalue = Math.floor(d3.min(this.xaxisArray));\n    let maxvalue = Math.ceil(d3.max(this.xaxisArray));\n    this.minxvalue = 5 * (Math.floor(Math.abs(minvalue / 5)));\n    this.maxxvalue = 5 * (Math.ceil(Math.abs(maxvalue / 5)));\n\n  }\n\n  colorGeneration() {\n\n    this.legendarray = [];\n    let i = 0;\n    let names = this.data1\n      .map(e => e[3])\n      .filter((e, i, a) => a.indexOf(e) === i);\n\n    for (let j = 1; j < names.length; j++) {\n      let value = [];\n      let obj = { \"label\": \"\", \"color\": \"\", \"value\": [] };\n      this.colordata.forEach(element => {\n        if (element[Object.keys(element)[3]] == names[j]) {\n          element['color'] = this.predefinedcolors[i];\n          value.push(element);\n        }\n      });\n      obj[\"value\"] = value;\n      obj[\"label\"] = names[j];\n      obj[\"color\"] = this.predefinedcolors[i];\n      this.legendarray.push(obj);\n      i++;\n    }\n  }\n\n  formLegendData() {\n    this.legendData = [];\n    this.legendarray.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element.label;\n      legendobject['color'] = element.color;\n      this.legendData.push(legendobject);\n    });\n  }\n\n  onBubbleLegendClick(legendevent: any) {\n    this.legendarray.forEach(element => {\n      let obj = {};\n      let temparr = [];\n      if (legendevent.label == element.label) {\n        let arr = element.value;\n        arr.forEach(element => {\n          for (let [key, value] of Object.entries(element)) {\n            if (key !== 'color') {\n              obj[key] = value;\n            }\n          }// for ends\n          temparr.push(obj);\n        });// for each ends\n        this.legendClick(temparr)\n      }\n    });\n\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.vScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).\n          tickSize(-this.width).tickFormat('').ticks(this.xtickscount)\n        );\n    }\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat('').ticks(this.tickscount));\n    }\n  }\n\n  transformdata() {\n    this.bubblechartdata = []\n    let buubledata = [];\n    this.colordata.forEach((element, i) => {\n\n      buubledata.push(element[Object.keys(element)[4]]);\n\n    });\n\n    let data = buubledata.sort((a, b) => { return b - a });\n\n    for (let j = 0; j <= data.length; j++) {\n      this.colordata.forEach(element => {\n        if (data[j] == element[Object.keys(element)[4]])\n          this.bubblechartdata.push(element);\n      });\n    }\n\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport * as d3 from 'd3';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\n\n\n@Component({\n    selector: 'amexio-d3-chart-timeline',\n    template: `\n<div  #chartId *ngIf=\"drillableFlag\"  (window:resize)=\"validateresize()\" >\n    <table style=\"width: 100%;\" position=\" relative\">\n        <tr *ngIf = \"title.length > 0\">\n            <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n        </tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\" \n              >\n                </svg>\n            </td>\n        </tr>\n        <tr *ngIf=\"legend\">\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"timelinelegendClick($event)\" [data]=\"legends\" style=\"height:100%;\">\n                </amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n    </div>`\n})\nexport class AmexioD3TimelineChartComponent extends AmexioD3BaseChartComponent {\n\n    @Input('data') data: any;\n    @ViewChild('chartId') chartId: ElementRef;\n    @ViewChild('divid') divid: ElementRef;\n    @Input('width') svgwidth: number;\n    @Input('height') svgheight: number = 200;\n    @Input('data-reader') datareader: string;\n    @Input('level') level: number = 0;\n    @Input('target') target: number;\n    @Input('drillable-data') drillabledatakey: any[] = [];\n    @Input('label-color') labelcolor: string = \"black\";\n    @Input('label') labelflag: boolean = false;\n    @Input('xaxis-interval') xtickscount: number;\n\n    lanes: any[] = [];\n    timelinechartData: any[] = [];\n    mindate: any;\n    maxdate: any;\n    legends: any;\n    drillableFlag: boolean = true;\n    resizeflag: boolean = false;\n    svg: any;\n    urldata: any;\n    monthlist = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    wt: number;\n    constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef, private device: DeviceQueryService) {\n        super('timeline');\n    }\n\n    ngOnInit() {\n        this.wt = this.svgwidth;\n        if (this.level <= 1) {\n            let resp: any;\n            if (this.httpmethod && this.httpurl) {\n                this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n                    resp = response;\n                }, (error) => {\n                }, () => {\n                    setTimeout(() => {\n                        this.data = this.getResponseData(resp);\n                        this.transformTODate(this.data);\n                        this.transformData(this.urldata);\n                        this.plotChart();\n                    }, 0);\n                });\n\n            } else if (this.data) {\n\n                setTimeout(() => {\n                    this.data = this.getResponseData(this.data);\n                    this.transformData(this.data);\n                    this.plotChart();\n                }, 0);\n\n            }\n        }\n    }\n\n    fetchData(data: any) {\n        let requestJson;\n        let key = this.drillabledatakey;\n        let resp: any;\n        if (this.drillabledatakey.length) {\n            let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n            requestJson = drillabledata;\n        }\n        else {\n            requestJson = data;\n        }\n\n        if (this.httpmethod && this.httpurl) {\n            this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n                resp = response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                    this.data = this.getResponseData(resp);\n                    this.drawChart();\n                }, 0);\n            });\n\n        }\n    }\n    drawChart() {\n        setTimeout(() => {\n            this.transformTODate(this.data);\n            this.transformData(this.urldata);\n            this.plotChart();\n\n        }, 0);\n\n    }\n\n    getResponseData(httpResponse: any) {\n        let responsedata = httpResponse;\n        if (this.datareader != null) {\n            const dr = this.datareader.split('.');\n            for (const ir of dr) {\n                responsedata = responsedata[ir];\n            }\n        } else {\n            responsedata = httpResponse;\n        }\n        return responsedata;\n    }\n\n    plotChart() {\n        let laneLength = this.lanes.length;\n        const tooltip = this.toolTip(d3);\n\n        if (this.resizeflag == false) {\n              //RESIZE STEP 1\n      if (this.wt) {\n        this.svgwidth = this.wt;\n\n      } else if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n\n      }\n      //RESIZE STEP 1 ENDS HERE \n        }\n\n        let m = [20, 25, 15, 120], //top right bottom left\n            width = this.svgwidth - m[1] - m[3],\n            height = this.svgheight - m[0] - m[2],\n            miniHeight = laneLength * 12 + 50,\n            mainHeight = height - miniHeight - 50;\n\n        let mindate;\n        let maxdate;\n        let barheight = 20;\n        if (this.httpurl && this.httpmethod) {\n\n            mindate = this.urldata[0][1].getFullYear(),\n                maxdate = this.urldata[this.urldata.length - 1][2].getFullYear();\n        }\n        else {\n            mindate = this.data[0][1].getFullYear(),\n                maxdate = this.data[this.data.length - 1][2].getFullYear();\n        }\n\n\n        let x = d3.scaleTime()\n            .domain([this.mindate, this.maxdate])\n            .range([0, width]);\n\n\n        let x1 = d3.scaleLinear()\n            .domain([mindate, maxdate])\n            .range([m[3], width + m[3]]);\n\n        let y1 = d3.scaleLinear()\n            .domain([0, laneLength])\n            .range([0, miniHeight]);\n\n\n        this.svg = d3.select(\"#\" + this.componentId)\n        .attr('viewBox', '0 0 ' + this.svgwidth + ' ' + this.svgheight)\n            .attr(\"width\", width + m[1] + m[3])\n            .attr(\"height\", height + m[0] + m[2])\n\n\n        if (this.device.IsDesktop() == true) {\n            if (this.svgwidth <= 400) {\n                this.svg.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x1).ticks(this.xtickscount)).\n                  selectAll(\"text\")\n                  .attr(\"y\", 0)\n                  .attr(\"x\", 9)\n                  .attr(\"dy\", \".35em\")\n                  .attr(\"transform\", \"rotate(60)\")\n                  .style(\"text-anchor\", \"start\");\n              }\n              else {\n                this.svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x1).ticks(this.xtickscount));\n              }\n        }\n        else {\n            this.svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x1).ticks(this.xtickscount)).\n                selectAll(\"text\")\n                .attr(\"y\", 0)\n                .attr(\"x\", 9)\n                .attr(\"dy\", \".35em\")\n                .attr(\"transform\", \"rotate(60)\")\n                .style(\"text-anchor\", \"start\");\n        }\n\n        let mini = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + m[3] + \",\" + (mainHeight + m[0]) + \")\")\n            .attr(\"width\", width)\n            .attr(\"height\", mainHeight)\n            .attr(\"class\", \"mini\");\n\n        //mini lanes and texts\n        mini.append(\"g\").selectAll(\".laneLines\")\n            .data(this.timelinechartData)\n            .enter().append(\"line\")\n            // .attr(\"x1\", m[1])\n            .attr(\"y1\", (d) => { return y1(d.lane); })\n            .attr(\"x2\", width)\n            .attr(\"y2\", (d) => { return y1(d.lane); })\n            .attr(\"stroke\", \"lightgray\");\n\n\n        mini.append(\"g\").selectAll(\".laneText\")\n            .data(this.lanes)\n            .enter().append(\"text\")\n            .text((d) => { return d; })\n            .attr(\"x\", -m[1])\n            .attr(\"y\", (d, i) => { return y1(i + .5); })\n            .attr(\"dy\", \".5ex\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", \"laneText\");\n\n        //mini item rects\n        mini.append(\"g\").selectAll(\"miniItems\")\n            .data(this.timelinechartData)\n            .enter().append(\"rect\")\n            .attr(\"class\", (d) => { return \"miniItem\" + d.lane; })\n            .attr(\"fill\", (d, index) => { return this.predefinedcolors[index] })\n            .attr(\"x\", (d) => { return x(d.start); })\n            .attr(\"y\", (d) => { return (y1(d.lane + .5) - 5); })\n            .attr(\"width\", (d) => {\n                return Math.abs(x(d.end) - x(d.start));\n            })\n            .attr(\"height\", barheight)\n            .attr(\"cursor\", \"pointer\")\n            .on(\"mouseover\", (d) => {\n                return tooltip.style(\"visibility\", \"visible\");\n            })\n            .on(\"mousemove\", (d) => {\n                return tooltip.html(\n                    this.formTooltipData(d)\n                    //  this.toolTipForBar(d)\n                    // this.toolTipContent(d)\n                )\n                    .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                    .style(\"left\", (d3.event.pageX + 10) + \"px\");\n            })\n            .on(\"mouseout\", (d) => {\n                return tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (d) => {\n                this.timelineChartClick(d)\n                this.fordrillableClick(this, d, event);\n                return tooltip.style(\"visibility\", \"hidden\");\n            });\n        let barwidth;\n\n        //mini labels\n        let monthlist1 = this.monthlist;\n        if (this.labelflag) {\n            mini.append(\"g\").selectAll(\".miniLabels\")\n                .data(this.timelinechartData)\n                .enter().append(\"text\")\n                .style(\"font-weight\", \"bold\")\n                .attr(\"fill\", (d) => {\n                    if (this.labelcolor.length > 0) {\n                        return this.labelcolor;\n                    } else {\n                        return \"black\";\n                    }\n                })\n                .style(\"font-size\", (d) => {\n                    barwidth = Math.min(Math.abs(x(d.end) - x(d.start)))\n                    return barwidth / 20 + \"px\";\n                })\n                .text((d) => {\n                    if (d.id) {\n                        let startfullyear = d.start.getFullYear();\n                        let startMonth = monthlist1[d.start.getMonth()];\n                        let endfullyear = d.end.getFullYear();\n                        let endMonth = monthlist1[d.end.getMonth()];\n                        let date = startMonth + \" \" + startfullyear + \"-\" + endMonth + \" \" + endfullyear;\n                        return date;\n                    }\n                })\n                .attr(\"x\", (d) => {\n                    return x(d.start);\n                })\n                .attr(\"y\", (d) => { return y1(d.lane + .5); })\n                .attr(\"dy\", \"1.2ex\")\n                .attr(\"dx\", \"9ex\")\n                //write pointer and click fn\n                .attr(\"cursor\", \"pointer\")\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.formTooltipData(d)\n                        //  this.toolTipForBar(d)\n                        // this.toolTipContent(d)\n                    )\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n                    this.timelineChartClick(d)\n                    this.fordrillableClick(this, d, event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                });\n        }\n    }\n    formTooltipData(tooltipData: any) {\n        let object = {};\n\n        let mlist = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        let label1 = \"Duration\";\n        let label2 = \"Name\";\n        let startfullyear = tooltipData.start.getFullYear();\n        let startMonth = mlist[tooltipData.start.getMonth()]\n        let endfullyear = tooltipData.end.getFullYear();\n        let endMonth = mlist[tooltipData.end.getMonth()]\n        let date = startMonth + \" \" + startfullyear + \"-\" + endMonth + \" \" + endfullyear;\n\n        object[label2 + \":\"] = tooltipData.id;\n        object[label1 + \":\"] = date;\n\n        return this.toolTipForBar(object);\n\n    }\n\n    transformTODate(data: any) {\n        this.urldata = [];\n\n        data.forEach(element => {\n            let dataobj = [];\n            let startdate = new Date(element[1]);\n            let enddate = new Date(element[2])\n            dataobj.push(element[0]);\n            dataobj.push(startdate);\n            dataobj.push(enddate);\n            this.urldata.push(dataobj);\n\n        });\n    }\n\n    transformData(data: any) {\n        this.lanes = [];\n        this.timelinechartData = [];\n        this.legends = [];\n        let datalength = data.length - 1;\n        let length = data.length;\n        this.mindate = data[0][1];\n        this.maxdate = data[datalength][2];\n        let mlist = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n        data.forEach((element, i) => {\n            let dataObj = { \"lane\": \"\", \"id\": \"\", \"start\": \"\", \"end\": \"\" };\n            this.lanes.push(element[0]);\n            dataObj[\"lane\"] = i;\n            dataObj[\"id\"] = element[0];\n            dataObj[\"start\"] = element[1];\n            dataObj[\"end\"] = element[2];\n            this.timelinechartData.push(dataObj);\n        });\n\n        this.timelinechartData.forEach((element, i) => {\n\n            let startfullyear = element.start.getFullYear();\n            let startMonth = mlist[element.start.getMonth()]\n            let endfullyear = element.end.getFullYear();\n            let endMonth = mlist[element.end.getMonth()]\n            let date = startMonth + \" \" + startfullyear + \"-\" + endMonth + \" \" + endfullyear;\n            let object = { 'label': this.lanes[i], 'color': this.predefinedcolors[i], 'Duration': date };\n            this.legends.push(object);\n        });\n\n        let Obj = { \"lane\": \"\", \"id\": \"\", \"start\": \"\", \"end\": \"\" };\n        Obj[\"lane\"] = length;\n        this.timelinechartData.push(Obj);\n    }\n\n\n    timelineChartClick(event: any) {\n        let object = {};\n        let mlist = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        let startfullyear = event.start.getFullYear();\n        let startMonth = mlist[event.start.getMonth()]\n        let endfullyear = event.end.getFullYear();\n        let endMonth = mlist[event.end.getMonth()];\n        let date = startMonth + \" \" + startfullyear + \"-\" + endMonth + \" \" + endfullyear;\n        object[\"Name\"] = event.id;\n        object[\"Duration\"] = date;\n        this.chartClick(object);\n    }\n\n    //RESIZE STEP 4 STARTS\n  validateresize() {\n    setTimeout(() => {\n       if (this.wt) {\n\n      } else {\n        this.resize();\n      }\n    }, 0)\n  }\n  //RESIZE STEP 4 ENDS\n\n    resize() {\n        this.svg.selectAll(\"*\").remove();\n        this.resizeflag = true;\n        if (this.wt) {\n          this.svgwidth = this.wt;\n        } else if (this.chartId) {\n          // this.resizewt = this.chartId.nativeElement.offsetWidth;\n          // console.log(\"\", new Date().getTime(), \" \", this.resizewt);\n          this.svgwidth = this.chartId.nativeElement.offsetWidth;\n        }\n        this.cdf.detectChanges(); \n        this.plotChart();\n\n    }\n    timelinelegendClick(event: any) {\n        let obj = {};\n        for (let [key, value] of Object.entries(event)) {\n            if (key !== 'color') {\n                obj[key] = value;\n            }\n        }\n        this.onLegendClick.emit(obj);\n    }\n\n}\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { GroupbarComponent } from '../groupbar/groupbar.component';\nimport { AmexioD3BarChartComponent } from '../bar/bar.component';\nimport { AmexioD3DounutChartComponent } from '../dounut/dounut.component';\nimport { AmexioD3PieChartComponent } from '../pie/pie.component';\nimport { AmexioD3LineComponent } from '../line/line.component';\nimport { BarstackComponent } from '../barstack/barstack.component';\nimport { CombochartComponent } from '../combochart/combochart.component'\nimport { HistogramComponent } from '../histogram/histogram.component'\nimport { ScatterchartComponent } from '../scatterchart/scatterchart.component'\nimport { MultiareaComponent } from '../multiarea/multiarea.component'\nimport { CandlestickComponent } from '../candlestick/candlestick.component'\nimport { BubbleComponent } from '../bubble/bubble/bubble.component'\nimport { AmexioD3TimelineChartComponent } from '../timeline/timeline.component'\nimport {\n  AfterContentInit, AfterViewInit, ContentChildren,\n  ElementRef, EventEmitter, Input, Output, QueryList, ViewChild,\n  ViewChildren\n} from '@angular/core';\n\nexport class ViewDrillableComponent implements OnInit {\n\n  @ContentChildren(AmexioD3BarChartComponent, { descendants: true }) queryBarchartinput: QueryList<AmexioD3BarChartComponent>;\n  barchartinput: AmexioD3BarChartComponent[];\n\n  @ContentChildren(GroupbarComponent, { descendants: true }) QueryGroupbarchartinput: QueryList<GroupbarComponent>;\n  groupbarchartinput: GroupbarComponent[];\n\n  @ContentChildren(AmexioD3LineComponent, { descendants: true }) QueryLinechartinput: QueryList<AmexioD3LineComponent>;\n  linechartinput: AmexioD3LineComponent[];\n\n  @ContentChildren(AmexioD3PieChartComponent, { descendants: true }) QueryPiechartinput: QueryList<AmexioD3PieChartComponent>;\n  piechartinput: AmexioD3PieChartComponent[];\n\n  @ContentChildren(AmexioD3DounutChartComponent, { descendants: true }) QueryDonutchartinput: QueryList<AmexioD3DounutChartComponent>;\n  donutchartinput: AmexioD3DounutChartComponent[];\n\n\n  @ContentChildren(BarstackComponent, { descendants: true }) QueryBarStackchartinput: QueryList<BarstackComponent>;\n  barstackchartinput: BarstackComponent[];\n\n  @ContentChildren(CombochartComponent, { descendants: true }) QueryCombochartinput: QueryList<CombochartComponent>;\n  combochartinput: CombochartComponent[];\n\n  @ContentChildren(HistogramComponent, { descendants: true }) QueryHistogramchartinput: QueryList<HistogramComponent>;\n  histogramchartinput: HistogramComponent[];\n\n  @ContentChildren(ScatterchartComponent, { descendants: true }) QuerySatterchartinput: QueryList<ScatterchartComponent>;\n  scatterchartinput: ScatterchartComponent[];\n\n  @ContentChildren(MultiareaComponent, { descendants: true }) QueryMultiareachartinput: QueryList<MultiareaComponent>;\n  multiareachartinput: MultiareaComponent[];\n\n  @ContentChildren(CandlestickComponent, { descendants: true }) QueryCandlestickchartinput: QueryList<CandlestickComponent>;\n  candlestickchartinput: CandlestickComponent[];\n\n  @ContentChildren(BubbleComponent, { descendants: true }) QueryBubblechartinput: QueryList<BubbleComponent>;\n  bubblechartinput: BubbleComponent[];\n\n  @ContentChildren(AmexioD3TimelineChartComponent, { descendants: true }) QueryTimechartinput: QueryList<AmexioD3TimelineChartComponent>;\n  timelinechartinput: AmexioD3TimelineChartComponent[];\n\n  chartInputArray: any;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  ngAfterViewInit() {\n\n    return this.getComponentData();\n\n  }\n\n  getComponentData(): any {\n\n    this.chartInputArray = [];\n\n    this.barchartinput = this.queryBarchartinput.toArray();\n    this.groupbarchartinput = this.QueryGroupbarchartinput.toArray();\n    this.linechartinput = this.QueryLinechartinput.toArray();\n    this.donutchartinput = this.QueryDonutchartinput.toArray();\n    this.piechartinput = this.QueryPiechartinput.toArray();\n    this.barstackchartinput = this.QueryBarStackchartinput.toArray();\n    this.combochartinput = this.QueryCombochartinput.toArray();\n    this.histogramchartinput = this.QueryHistogramchartinput.toArray();\n    this.scatterchartinput = this.QuerySatterchartinput.toArray();\n    this.multiareachartinput = this.QueryMultiareachartinput.toArray();\n    this.candlestickchartinput = this.QueryCandlestickchartinput.toArray();\n    this.bubblechartinput = this.QueryBubblechartinput.toArray();\n    this.timelinechartinput = this.QueryTimechartinput.toArray();\n    this.chartInputArray = this.chartInputArray.concat(this.barchartinput, this.groupbarchartinput, this.linechartinput, this.donutchartinput, this.piechartinput, this.barstackchartinput, this.combochartinput, this.histogramchartinput, this.scatterchartinput, this.multiareachartinput, this.candlestickchartinput, this.bubblechartinput, this.timelinechartinput);\n\n    return this.chartInputArray;\n\n  }\n\n\n\n\n\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ViewDrillableComponent } from '../../base/view.component';\n\nimport {\n  AfterContentInit, AfterViewInit, ContentChildren,\n  ElementRef, EventEmitter, Input, Output, QueryList, ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { HostListener } from '@angular/core';\n@Component({\n  selector: 'amexio-drillable',\n  template: `\n<div > \n    <ng-container *ngIf=\"disableFlag\">\n            <button type=\"button\" class=\"button\"\n             (click)=\"previouschartClick($event)\">\n             <i class=\"fa fa-arrow-left\"></i> \n             \n            </button>\n</ng-container>\n\n<ng-content></ng-content>\n\n</div>\n\n<span [ngStyle]=\"contextStyle\" >\n  <ul *ngIf=\"contextmenuFlag\" class=\"close-thik\" class=\"context-menu-list\"  >\n    <span (click)=\"onCloseClick()\" class=\"close\"><i class=\"fa fa-close\"></i></span>\n  <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" \n  *ngFor=\"let itemConfig of arrayofsameLevel\">\n  <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\"></em>\n  <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.title}}\n  </span>\n  </li>\n  </ul>\n  </span>\n  `,\n  styles: [`.button{position:relative;border:1px solid #555;font-weight:400;color:#000;padding:.5rem 1rem;text-align:center;transition-duration:.4s;text-decoration:none;overflow:hidden;cursor:pointer;border-radius:3px}.button:after{content:\"\";background:#000;display:block;position:absolute;padding-top:300%;padding-left:350%;margin-left:-20px!important;margin-top:-120%;opacity:0;transition:.8s}.button:active:after{padding:0;margin:0;opacity:1;transition:none}.context-menu-list{display:block;position:absolute;flex-direction:column;min-width:180px;cursor:pointer;max-height:150px;z-index:1;padding:10px 0;overflow-y:auto;background-color:#fff!important;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.context-menu-list .context-menu-list-items{text-decoration:none;font-size:14px!important;padding:5px;display:block}.close{float:right;padding-right:8px;cursor:pointer}`]\n})\n\n\nexport class DrillableComponent extends ViewDrillableComponent implements OnInit {\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n  contextmenuFlag: boolean;\n  contextStyle: any;\n  ComponentDataArray: any\n  componentcounter: number = 1;\n  disableFlag: boolean = false;\n  arrayofsameLevel: any;\n  eventData: any;\n  rightClickNodeData: any;\n  posixUp: boolean;\n  levelArray: any;\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n\n  }\n\n  ngAfterViewInit() {\n\n    this.ComponentDataArray = this.getComponentData();\n    this.getData(this.ComponentDataArray);\n\n  }\n  getData(data: any) {\n    data.forEach(element => {\n\n      if (element.level !== 1) {\n        element.drillableFlag = false;\n        element.drillableEvent.subscribe((eventdata: any) => {\n          this.hideUI(eventdata);\n          this.sameLevelChart(eventdata);\n          this.ShowUI(eventdata);\n\n\n        })\n      }\n      else {\n        this.disableFlag = false;\n        element.drillableEvent.subscribe((eventdata: any) => {\n          this.hideUI(eventdata);\n          this.sameLevelChart(eventdata);\n          this.ShowUI(eventdata);\n        })\n      }\n    });\n\n  }\n\n  hideUI(eventRef: any) {\n    this.ComponentDataArray.forEach(element => {\n      if (element.level == eventRef.ref.level) {\n        eventRef.ref.drillableFlag = false;\n      }\n    });\n\n  }\n\n  ShowUI(eventRef: any) {\n    this.eventData = [];\n    this.eventData = eventRef;\n    this.ComponentDataArray.forEach(element => {\n      if (eventRef.ref.target == element.level) {\n        if (this.arrayofsameLevel.length == 1) {\n          this.disableFlag = true;\n          element.drillableFlag = true;\n          element.fetchData(eventRef.node);\n          this.componentcounter = element.level;\n        }\n        else {\n          this.contextmenuFlag = true;\n          this.mouseLocation.left = eventRef.event.clientX;\n          this.mouseLocation.top = eventRef.event.clientY;\n          this.contextStyle = this.getContextMenuStyle();\n        }\n      }\n    });\n  if (this.componentcounter == eventRef.ref.level) {\n      eventRef.ref.drillableFlag = true;\n    }\n\n  }\n  previouschartClick(event: any) {\n    let chartLevel = this.componentcounter - 1;\n    this.ComponentDataArray.forEach(element => {\n      if (chartLevel == element.level) {\n        element.drillableFlag = true;\n        element.drawChart();\n      } else if (this.componentcounter == element.level) {\n        element.drillableFlag = false;\n      }\n    });\n    if (this.componentcounter == 2) {\n      this.disableFlag = false;\n    }\n    this.componentcounter = chartLevel;\n  }\n\n\n  sameLevelChart(eventRef: any) {\n  \n    this.arrayofsameLevel = [];\n    this.ComponentDataArray.forEach(element => {\n      if (eventRef.ref.target == element.level) {\n        this.arrayofsameLevel = this.arrayofsameLevel.concat(element);\n\n      }\n\n    });\n  }\n\n  //Method Creates style if two same targets found.\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.contextmenuFlag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onContextNodeClick(event: any) {\n    this.componentcounter = 0;\n    this.contextmenuFlag = false;\n    this.eventData.ref.drillableFlag = false;\n    this.disableFlag = true;\n    event.drillableFlag = true;\n    event.fetchData(this.eventData.node);\n    this.componentcounter = event.level;\n\n    if (this.componentcounter == this.eventData.ref.level) {\n      this.eventData.ref.drillableFlag = true;\n    }\n  }\n\n  onCloseClick() {\n    this.contextmenuFlag = false;\n  }\n\n}\n","import { AmexioD3DounutChartComponent } from './dounut/dounut.component';\nimport { AmexioD3PieChartComponent } from './pie/pie.component';\nimport { AmexioD3Legend } from './legend/legend.component';\nimport { AmexioD3BarChartComponent } from './bar/bar.component';\nimport { AmexioD3LineComponent } from './line/line.component';\nimport { BarstackComponent } from './barstack/barstack.component';\nimport { GroupbarComponent } from './groupbar/groupbar.component';\nimport { DrillableComponent } from './drillable/drillable/drillable.component';\nimport { CombochartComponent } from './combochart/combochart.component';\nimport { HistogramComponent } from './histogram/histogram.component';\nimport { MultiareaComponent } from './multiarea/multiarea.component';\nimport { ScatterchartComponent } from './scatterchart/scatterchart.component';\nimport { CandlestickComponent } from './candlestick/candlestick.component';\nimport{BubbleComponent} from './bubble/bubble/bubble.component';\nimport{AmexioD3TimelineChartComponent} from './timeline/timeline.component'\nexport const D3_COMPONENTS : any[] = [\n  AmexioD3Legend,\n  AmexioD3DounutChartComponent,\n  AmexioD3BarChartComponent,\n  AmexioD3PieChartComponent,\n  AmexioD3LineComponent,\n  BarstackComponent,\n  GroupbarComponent,\n  CombochartComponent,\n  DrillableComponent,\n  HistogramComponent,\n  MultiareaComponent,\n  ScatterchartComponent,\n  CandlestickComponent,\n  BubbleComponent,\n  AmexioD3TimelineChartComponent\n]\n","import { NgModule } from '@angular/core';\nimport { D3_COMPONENTS } from './amexio-chart-d3-components';\nimport {FormsModule} from '@angular/forms';\nimport {  CommonModule } from '@angular/common';\nimport{DeviceQueryService} from './services/device.query.service'\n\nexport * from './services/device.query.service';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule                                                             \n  ],\n \n  declarations: D3_COMPONENTS,\n  providers: [DeviceQueryService],\n  exports: D3_COMPONENTS\n})\nexport class AmexioChartD3Module { }\n               "]}