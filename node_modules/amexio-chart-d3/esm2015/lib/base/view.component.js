/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { GroupbarComponent } from '../groupbar/groupbar.component';
import { AmexioD3BarChartComponent } from '../bar/bar.component';
import { AmexioD3DounutChartComponent } from '../dounut/dounut.component';
import { AmexioD3PieChartComponent } from '../pie/pie.component';
import { AmexioD3LineComponent } from '../line/line.component';
import { BarstackComponent } from '../barstack/barstack.component';
import { CombochartComponent } from '../combochart/combochart.component';
import { HistogramComponent } from '../histogram/histogram.component';
import { ScatterchartComponent } from '../scatterchart/scatterchart.component';
import { MultiareaComponent } from '../multiarea/multiarea.component';
import { CandlestickComponent } from '../candlestick/candlestick.component';
import { BubbleComponent } from '../bubble/bubble/bubble.component';
import { AmexioD3TimelineChartComponent } from '../timeline/timeline.component';
import { ContentChildren, QueryList } from '@angular/core';
export class ViewDrillableComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        return this.getComponentData();
    }
    /**
     * @return {?}
     */
    getComponentData() {
        this.chartInputArray = [];
        this.barchartinput = this.queryBarchartinput.toArray();
        this.groupbarchartinput = this.QueryGroupbarchartinput.toArray();
        this.linechartinput = this.QueryLinechartinput.toArray();
        this.donutchartinput = this.QueryDonutchartinput.toArray();
        this.piechartinput = this.QueryPiechartinput.toArray();
        this.barstackchartinput = this.QueryBarStackchartinput.toArray();
        this.combochartinput = this.QueryCombochartinput.toArray();
        this.histogramchartinput = this.QueryHistogramchartinput.toArray();
        this.scatterchartinput = this.QuerySatterchartinput.toArray();
        this.multiareachartinput = this.QueryMultiareachartinput.toArray();
        this.candlestickchartinput = this.QueryCandlestickchartinput.toArray();
        this.bubblechartinput = this.QueryBubblechartinput.toArray();
        this.timelinechartinput = this.QueryTimechartinput.toArray();
        this.chartInputArray = this.chartInputArray.concat(this.barchartinput, this.groupbarchartinput, this.linechartinput, this.donutchartinput, this.piechartinput, this.barstackchartinput, this.combochartinput, this.histogramchartinput, this.scatterchartinput, this.multiareachartinput, this.candlestickchartinput, this.bubblechartinput, this.timelinechartinput);
        return this.chartInputArray;
    }
}
ViewDrillableComponent.propDecorators = {
    queryBarchartinput: [{ type: ContentChildren, args: [AmexioD3BarChartComponent, { descendants: true },] }],
    QueryGroupbarchartinput: [{ type: ContentChildren, args: [GroupbarComponent, { descendants: true },] }],
    QueryLinechartinput: [{ type: ContentChildren, args: [AmexioD3LineComponent, { descendants: true },] }],
    QueryPiechartinput: [{ type: ContentChildren, args: [AmexioD3PieChartComponent, { descendants: true },] }],
    QueryDonutchartinput: [{ type: ContentChildren, args: [AmexioD3DounutChartComponent, { descendants: true },] }],
    QueryBarStackchartinput: [{ type: ContentChildren, args: [BarstackComponent, { descendants: true },] }],
    QueryCombochartinput: [{ type: ContentChildren, args: [CombochartComponent, { descendants: true },] }],
    QueryHistogramchartinput: [{ type: ContentChildren, args: [HistogramComponent, { descendants: true },] }],
    QuerySatterchartinput: [{ type: ContentChildren, args: [ScatterchartComponent, { descendants: true },] }],
    QueryMultiareachartinput: [{ type: ContentChildren, args: [MultiareaComponent, { descendants: true },] }],
    QueryCandlestickchartinput: [{ type: ContentChildren, args: [CandlestickComponent, { descendants: true },] }],
    QueryBubblechartinput: [{ type: ContentChildren, args: [BubbleComponent, { descendants: true },] }],
    QueryTimechartinput: [{ type: ContentChildren, args: [AmexioD3TimelineChartComponent, { descendants: true },] }]
};
if (false) {
    /** @type {?} */
    ViewDrillableComponent.prototype.queryBarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.barchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryGroupbarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.groupbarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryLinechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.linechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryPiechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.piechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryDonutchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.donutchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryBarStackchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.barstackchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryCombochartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.combochartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryHistogramchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.histogramchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QuerySatterchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.scatterchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryMultiareachartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.multiareachartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryCandlestickchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.candlestickchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryBubblechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.bubblechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryTimechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.timelinechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.chartInputArray;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbWV4aW8tY2hhcnQtZDMvIiwic291cmNlcyI6WyJsaWIvYmFzZS92aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDakUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDMUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDakUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUE7QUFDeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDckUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUE7QUFDOUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDckUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0NBQXNDLENBQUE7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1DQUFtQyxDQUFBO0FBQ25FLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFBO0FBQy9FLE9BQU8sRUFDNEIsZUFBZSxFQUNQLFNBQVMsRUFFbkQsTUFBTSxlQUFlLENBQUM7QUFFdkIsTUFBTTtJQTRDSjtJQUVBLENBQUM7Ozs7SUFFRCxRQUFRO0lBRVIsQ0FBQzs7OztJQUdELGVBQWU7UUFFYixNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFFakMsQ0FBQzs7OztJ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SSxFQUFFO3lDQUd6RCxlQUFlLFNBQUMsb0JBQW9CLEVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFO29DQUczRCxlQUFlLFNBQUMsZUFBZSxFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtrQ0FHdEQsZUFBZSxTQUFDLDhCQUE4QixFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTs7OztJQXJDdEUsb0RBQTRIOztJQUM1SCwrQ0FBMkM7O0lBRTNDLHlEQUFpSDs7SUFDakgsb0RBQXdDOztJQUV4QyxxREFBcUg7O0lBQ3JILGdEQUF3Qzs7SUFFeEMsb0RBQTRIOztJQUM1SCwrQ0FBMkM7O0lBRTNDLHNEQUFvSTs7SUFDcEksaURBQWdEOztJQUdoRCx5REFBaUg7O0lBQ2pILG9EQUF3Qzs7SUFFeEMsc0RBQWtIOztJQUNsSCxpREFBdUM7O0lBRXZDLDBEQUFvSDs7SUFDcEgscURBQTBDOztJQUUxQyx1REFBdUg7O0lBQ3ZILG1EQUEyQzs7SUFFM0MsMERBQW9IOztJQUNwSCxxREFBMEM7O0lBRTFDLDREQUEwSDs7SUFDMUgsdURBQThDOztJQUU5Qyx1REFBMkc7O0lBQzNHLGtEQUFvQzs7SUFFcEMscURBQXVJOztJQUN2SSxvREFBcUQ7O0lBRXJELGlEQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHcm91cGJhckNvbXBvbmVudCB9IGZyb20gJy4uL2dyb3VwYmFyL2dyb3VwYmFyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBbWV4aW9EM0JhckNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vYmFyL2Jhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQW1leGlvRDNEb3VudXRDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2RvdW51dC9kb3VudXQuY29tcG9uZW50JztcbmltcG9ydCB7IEFtZXhpb0QzUGllQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9waWUvcGllLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBbWV4aW9EM0xpbmVDb21wb25lbnQgfSBmcm9tICcuLi9saW5lL2xpbmUuY29tcG9uZW50JztcbmltcG9ydCB7IEJhcnN0YWNrQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFyc3RhY2svYmFyc3RhY2suY29tcG9uZW50JztcbmltcG9ydCB7IENvbWJvY2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21ib2NoYXJ0L2NvbWJvY2hhcnQuY29tcG9uZW50J1xuaW1wb3J0IHsgSGlzdG9ncmFtQ29tcG9uZW50IH0gZnJvbSAnLi4vaGlzdG9ncmFtL2hpc3RvZ3JhbS5jb21wb25lbnQnXG5pbXBvcnQgeyBTY2F0dGVyY2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9zY2F0dGVyY2hhcnQvc2NhdHRlcmNoYXJ0LmNvbXBvbmVudCdcbmltcG9ydCB7IE11bHRpYXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL211bHRpYXJlYS9tdWx0aWFyZWEuY29tcG9uZW50J1xuaW1wb3J0IHsgQ2FuZGxlc3RpY2tDb21wb25lbnQgfSBmcm9tICcuLi9jYW5kbGVzdGljay9jYW5kbGVzdGljay5jb21wb25lbnQnXG5pbXBvcnQgeyBCdWJibGVDb21wb25lbnQgfSBmcm9tICcuLi9idWJibGUvYnViYmxlL2J1YmJsZS5jb21wb25lbnQnXG5pbXBvcnQgeyBBbWV4aW9EM1RpbWVsaW5lQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi90aW1lbGluZS90aW1lbGluZS5jb21wb25lbnQnXG5pbXBvcnQge1xuICBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdJbml0LCBDb250ZW50Q2hpbGRyZW4sXG4gIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgUXVlcnlMaXN0LCBWaWV3Q2hpbGQsXG4gIFZpZXdDaGlsZHJlblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNsYXNzIFZpZXdEcmlsbGFibGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQW1leGlvRDNCYXJDaGFydENvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBxdWVyeUJhcmNoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxBbWV4aW9EM0JhckNoYXJ0Q29tcG9uZW50PjtcbiAgYmFyY2hhcnRpbnB1dDogQW1leGlvRDNCYXJDaGFydENvbXBvbmVudFtdO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oR3JvdXBiYXJDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlHcm91cGJhcmNoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxHcm91cGJhckNvbXBvbmVudD47XG4gIGdyb3VwYmFyY2hhcnRpbnB1dDogR3JvdXBiYXJDb21wb25lbnRbXTtcblxuICBAQ29udGVudENoaWxkcmVuKEFtZXhpb0QzTGluZUNvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBRdWVyeUxpbmVjaGFydGlucHV0OiBRdWVyeUxpc3Q8QW1leGlvRDNMaW5lQ29tcG9uZW50PjtcbiAgbGluZWNoYXJ0aW5wdXQ6IEFtZXhpb0QzTGluZUNvbXBvbmVudFtdO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQW1leGlvRDNQaWVDaGFydENvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBRdWVyeVBpZWNoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxBbWV4aW9EM1BpZUNoYXJ0Q29tcG9uZW50PjtcbiAgcGllY2hhcnRpbnB1dDogQW1leGlvRDNQaWVDaGFydENvbXBvbmVudFtdO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQW1leGlvRDNEb3VudXRDaGFydENvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBRdWVyeURvbnV0Y2hhcnRpbnB1dDogUXVlcnlMaXN0PEFtZXhpb0QzRG91bnV0Q2hhcnRDb21wb25lbnQ+O1xuICBkb251dGNoYXJ0aW5wdXQ6IEFtZXhpb0QzRG91bnV0Q2hhcnRDb21wb25lbnRbXTtcblxuXG4gIEBDb250ZW50Q2hpbGRyZW4oQmFyc3RhY2tDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlCYXJTdGFja2NoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxCYXJzdGFja0NvbXBvbmVudD47XG4gIGJhcnN0YWNrY2hhcnRpbnB1dDogQmFyc3RhY2tDb21wb25lbnRbXTtcblxuICBAQ29udGVudENoaWxkcmVuKENvbWJvY2hhcnRDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlDb21ib2NoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxDb21ib2NoYXJ0Q29tcG9uZW50PjtcbiAgY29tYm9jaGFydGlucHV0OiBDb21ib2NoYXJ0Q29tcG9uZW50W107XG5cbiAgQENvbnRlbnRDaGlsZHJlbihIaXN0b2dyYW1Db21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlIaXN0b2dyYW1jaGFydGlucHV0OiBRdWVyeUxpc3Q8SGlzdG9ncmFtQ29tcG9uZW50PjtcbiAgaGlzdG9ncmFtY2hhcnRpbnB1dDogSGlzdG9ncmFtQ29tcG9uZW50W107XG5cbiAgQENvbnRlbnRDaGlsZHJlbihTY2F0dGVyY2hhcnRDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlTYXR0ZXJjaGFydGlucHV0OiBRdWVyeUxpc3Q8U2NhdHRlcmNoYXJ0Q29tcG9uZW50PjtcbiAgc2NhdHRlcmNoYXJ0aW5wdXQ6IFNjYXR0ZXJjaGFydENvbXBvbmVudFtdO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oTXVsdGlhcmVhQ29tcG9uZW50LCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pIFF1ZXJ5TXVsdGlhcmVhY2hhcnRpbnB1dDogUXVlcnlMaXN0PE11bHRpYXJlYUNvbXBvbmVudD47XG4gIG11bHRpYXJlYWNoYXJ0aW5wdXQ6IE11bHRpYXJlYUNvbXBvbmVudFtdO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oQ2FuZGxlc3RpY2tDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSkgUXVlcnlDYW5kbGVzdGlja2NoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxDYW5kbGVzdGlja0NvbXBvbmVudD47XG4gIGNhbmRsZXN0aWNrY2hhcnRpbnB1dDogQ2FuZGxlc3RpY2tDb21wb25lbnRbXTtcblxuICBAQ29udGVudENoaWxkcmVuKEJ1YmJsZUNvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBRdWVyeUJ1YmJsZWNoYXJ0aW5wdXQ6IFF1ZXJ5TGlzdDxCdWJibGVDb21wb25lbnQ+O1xuICBidWJibGVjaGFydGlucHV0OiBCdWJibGVDb21wb25lbnRbXTtcblxuICBAQ29udGVudENoaWxkcmVuKEFtZXhpb0QzVGltZWxpbmVDaGFydENvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KSBRdWVyeVRpbWVjaGFydGlucHV0OiBRdWVyeUxpc3Q8QW1leGlvRDNUaW1lbGluZUNoYXJ0Q29tcG9uZW50PjtcbiAgdGltZWxpbmVjaGFydGlucHV0OiBBbWV4aW9EM1RpbWVsaW5lQ2hhcnRDb21wb25lbnRbXTtcblxuICBjaGFydElucHV0QXJyYXk6IGFueTtcblxuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgbmdPbkluaXQoKSB7XG5cbiAgfVxuXG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuXG4gICAgcmV0dXJuIHRoaXMuZ2V0Q29tcG9uZW50RGF0YSgpO1xuXG4gIH1cblxuICBnZXRDb21wb25lbnREYXRhKCk6IGFueSB7XG5cbiAgICB0aGlzLmNoYXJ0SW5wdXRBcnJheSA9IFtdO1xuXG4gICAgdGhpcy5iYXJjaGFydGlucHV0ID0gdGhpcy5xdWVyeUJhcmNoYXJ0aW5wdXQudG9BcnJheSgpO1xuICAgIHRoaXMuZ3JvdXBiYXJjaGFydGlucHV0ID0gdGhpcy5RdWVyeUdyb3VwYmFyY2hhcnRpbnB1dC50b0FycmF5KCk7XG4gICAgdGhpcy5saW5lY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlMaW5lY2hhcnRpbnB1dC50b0FycmF5KCk7XG4gICAgdGhpcy5kb251dGNoYXJ0aW5wdXQgPSB0aGlzLlF1ZXJ5RG9udXRjaGFydGlucHV0LnRvQXJyYXkoKTtcbiAgICB0aGlzLnBpZWNoYXJ0aW5wdXQgPSB0aGlzLlF1ZXJ5UGllY2hhcnRpbnB1dC50b0FycmF5KCk7XG4gICAgdGhpcy5iYXJzdGFja2NoYXJ0aW5wdXQgPSB0aGlzLlF1ZXJ5QmFyU3RhY2tjaGFydGlucHV0LnRvQXJyYXkoKTtcbiAgICB0aGlzLmNvbWJvY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlDb21ib2NoYXJ0aW5wdXQudG9BcnJheSgpO1xuICAgIHRoaXMuaGlzdG9ncmFtY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlIaXN0b2dyYW1jaGFydGlucHV0LnRvQXJyYXkoKTtcbiAgICB0aGlzLnNjYXR0ZXJjaGFydGlucHV0ID0gdGhpcy5RdWVyeVNhdHRlcmNoYXJ0aW5wdXQudG9BcnJheSgpO1xuICAgIHRoaXMubXVsdGlhcmVhY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlNdWx0aWFyZWFjaGFydGlucHV0LnRvQXJyYXkoKTtcbiAgICB0aGlzLmNhbmRsZXN0aWNrY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlDYW5kbGVzdGlja2NoYXJ0aW5wdXQudG9BcnJheSgpO1xuICAgIHRoaXMuYnViYmxlY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlCdWJibGVjaGFydGlucHV0LnRvQXJyYXkoKTtcbiAgICB0aGlzLnRpbWVsaW5lY2hhcnRpbnB1dCA9IHRoaXMuUXVlcnlUaW1lY2hhcnRpbnB1dC50b0FycmF5KCk7XG4gICAgdGhpcy5jaGFydElucHV0QXJyYXkgPSB0aGlzLmNoYXJ0SW5wdXRBcnJheS5jb25jYXQodGhpcy5iYXJjaGFydGlucHV0LCB0aGlzLmdyb3VwYmFyY2hhcnRpbnB1dCwgdGhpcy5saW5lY2hhcnRpbnB1dCwgdGhpcy5kb251dGNoYXJ0aW5wdXQsIHRoaXMucGllY2hhcnRpbnB1dCwgdGhpcy5iYXJzdGFja2NoYXJ0aW5wdXQsIHRoaXMuY29tYm9jaGFydGlucHV0LCB0aGlzLmhpc3RvZ3JhbWNoYXJ0aW5wdXQsIHRoaXMuc2NhdHRlcmNoYXJ0aW5wdXQsIHRoaXMubXVsdGlhcmVhY2hhcnRpbnB1dCwgdGhpcy5jYW5kbGVzdGlja2NoYXJ0aW5wdXQsIHRoaXMuYnViYmxlY2hhcnRpbnB1dCwgdGhpcy50aW1lbGluZWNoYXJ0aW5wdXQpO1xuXG4gICAgcmV0dXJuIHRoaXMuY2hhcnRJbnB1dEFycmF5O1xuXG4gIH1cblxuXG5cblxuXG59XG4iXX0=